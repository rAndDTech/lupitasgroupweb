@model DonauMorgen.NEXTFI.Web.Models.ViewModels.CreateLoanApplicationViewModel
@{
    ViewBag.Title = "Sales Dep";
    int con = 0;
    int Enumeracion = 1;
    int Enumeracion2 = 1;
    int stockcount = 0;
   
}
@using Microsoft.AspNet.Identity;
@section styles{
    @*<link href="https://cdn.jsdelivr.net/npm/alertifyjs@1.11.0/build/css/alertify.min.css" rel="stylesheet" />*@
    <link href="~/Elements/plugins/steps/jquery.steps.css" rel="stylesheet" />
    <link href="~/Elements/plugins/sweetalert/sweetalert.css" rel="stylesheet" />
    <link href="~/Elements/css/LupitasStyle.css" rel="stylesheet" />
    @Styles.Render("~/Elements/plugins/select2/select2.min.css")
    <style>
        .SearchSection {
            display: grid;
            grid-template-columns: 1fr;
            column-gap: 2rem;
            justify-content: center;
            padding-top: 2%;
            padding-bottom: 2%;
        }
        .body {
            padding-left: 3%;
            padding-right: 3%;
            background-color: white;
        }

        @@media (min-width: 768px) {
            .body {
                padding-left: 15%;
                padding-right: 15%;
                background-color: transparent;
            }
            .SearchSection {
                display: grid;
                grid-template-columns: repeat(2, 1fr);
                column-gap: 0.5rem;
                grid-template-rows: 50px;
                justify-content: center;
                padding-left: 4%;
                padding-right: 5%;
                padding-top: 2%;
                padding-bottom: 2%;
            }

        }
        .select2-container {
            z-index: 9999;
        }

        #ModalDueBillNotes {
            z-index: 9999999 !important;
        }
        
        #ModalMsgAlertSD label, #ModalMsgAlertSD span, #ModalMsgAlertSD a {
            font-size: 22px !important;
            color: black;
        }
        #ModalMsgAlertSP label, #ModalMsgAlertSP span, #ModalMsgAlertSP a {
            font-size: 22px !important;
            color: black;
        }
       
        .sweetalert-lg {
            width: 1000px !important;
        }

        .buttonddd {
            display: inline-block;
            padding: 15px 25px;
            font-size: 24px;
            cursor: pointer;
            text-align: center;
            text-decoration: none;
            outline: none;
            color: #fff;
            background-color: #009688;
            border: none;
            border-radius: 15px;
            box-shadow: 0 9px #999;
        }

        .ColorTr {
            background: #ffeb7a !important;
        }

        .letraBlanca {
            color: white !important;
        }
        /*GENERAL*/
        .top-navigation {
            padding-right: 0px !important;
        }

        /**@@media (min-width:1440px) {
            .wrapper.wrapper-content {
                margin-top: 70px !important;
            }

            .wizard > .content > .body div > div > select {
                padding-bottom: 8px !important;
            }
        }*/

        @@media (max-width:1024px) and (min-width:1024px) {
            /*.tabs-container .form-group > div > label {
                font-size: 10.2px !important;
                padding: 0px !important;
            }*/

            .impr .form-group > label, .impr .form-group > div label {
                font-size: 12px !important;
                margin-bottom: 0px;
            }
            /*HACE PEQUEÑA LA ETIQUETA DE TAX-RATE*/
            #Rate {
                padding: 3px;
            }

            /*.tabs-container button.btn-default {
                font-size: 10px !important;
            }*/
            /*HACE PEQUELA LA LETRA DE DIFFER DOWN PAYMENT*/
            /*.LabelLarge {
                font-size: 11.5px !important;
            }*/

            #tabsContainerAddress button.btn-default, #tabsContainerEmployment button.btn-default {
                font-size: 9px !important;
            }

            .wizard > .content > .body #FYI label {
                font-size: 15px !important;
            }
        }

        @@media (min-width: 1121px) {
            .wrapper.wrapper-content {
                margin-top: 70px !important;
            }
        }

        /*@@media (max-width: 1121px) and (min-width: 768px) {
            .wrapper.wrapper-content {
                margin-top: 170px !important;
            }
        }*/

        @@media (max-width:768px) and (min-width:768px) {
            /*.tabs-container .form-group > div > label, .impr .form-group > div > label {
                font-size: 15px !important;
            }*/
            /*HACE PEQUELA LA LETRA DE DIFFER DOWN PAYMENT*/
            /*.LabelLarge {
                font-size: 14px !important;
            }*/

            /*.tabs-container button.btn-default {
                font-size: 15px !important;
            }*/

            #tabsContainerAddress button.btn-default {
                font-size: 11.4px !important;
            }

            #tabsContainerAddress {
                padding-bottom: 20px;
            }

            #tabsContainerEmployment button.btn-default {
                font-size: 11.5px !important;
            }
        }

       /* @@media (max-width:425px) {
            .tabs-container .form-group > div > label {
                font-size: 13px !important;
                padding: 0px;
            }

            LabelLarge {
                font-size: 12.5px !important;
            }
        }*/
        /*Se reajusta el tamaño de la letra para que no crezca el tamaño del div que las contiene*/
        @@media (max-width:375px) {
            /*.tabs-container .form-group > div > label {
                font-size: 11px !important;
                padding: 0px;
            }*/
            /*HACE PEQUELA LA LETRA DE DIFFER DOWN PAYMENT*/
            /*.LabelLarge {
                font-size: 10px !important;
            }*/

            .impr .form-group > label, .impr .form-group > div label {
                font-size: 11px !important;
            }

            /*.tabs-container button.btn-default {
                font-size: 12px !important;
            }*/
        }
        /*START AFFECT TO INPUTS AND SELECT */
        .form-group {
            overflow: hidden;
            margin: 0px;
            border: 0.4px solid #f4f4f4;
            padding: 0px;
            background: #ffd908d9;
        }

        .box3 {
            width: 130%;
            border-radius: 15px;
            background: #1c84c6;
            color: #fff;
            padding-top: 12px;
            text-align: center;
            font-weight: 600;
            font-family: arial;
            position: relative;
        }

        .sb14:before {
            content: "";
            width: 0px;
            height: 0px;
            position: absolute;
            border-left: 15px solid transparent;
            border-right: 15px solid #1c84c6;
            border-top: 15px solid #1c84c6;
            border-bottom: 15px solid transparent;
            left: -16px;
            top: 0px;
        }

        /*.wizard > .content > .body input[type="checkbox"], .wizard > .content > .body input[type="radio"] {
            height: auto;
            width: 40%;
        }*/

        /*a[href="#previous"],
        a[href="#next"],
        li[name="SaveSale"],
        li[name="SaveFandI"] {
            font-weight: bold;
            font-size: 18px !important;
        }*/
        div.actions{
            display: none !important;
        }
        /*div.actions a[href="#previous"],
        div.actions a[href="#next"] {
            display: none !important;
        }*/

        .tabs-container .Step2title {
            padding: 0px;
            margin: 0px;
            background-color: #ffd800;
            font-size: 15px;
            font-weight: 600;
            min-height: 30px;
            line-height: 2;
            padding: 5px;
            border: none;
        }

        /*.p-xss {
            padding: 5px;
        }*/

        .Red {
            color: red;
            padding: 0px;
        }
        /* TAB GENERAL*/
        /*.tabs-container {
            background-color: white;
        }

            .tabs-container .panel-body {
                background-color: white;
                border-bottom: none;
                border-left: none;
                border-right: none;
                padding-left: 5px;
            }

                .tabs-container .panel-body:first-child {
                    padding-left: 10px;
                }

        */
        .impr div.col-xs-2 {
            padding: 5px;
        }
        /*
        .tabs-container ul.nav-tabs > li.active, ul.nav-tabs > li.active > a {
            background-color: #ffd800 !important;
            color: black;
        }


        ul.nav-tabs > li > a.nav-link {
            font-size: 15px !important;
            color: black !important;
            margin-right: 2px;
            line-height: 1.42857143;
            border: 1px solid transparent;
            border-radius: 4px 4px 0 0;
            padding: 7px 1.5px 7px 1.5px !important;
        }

            ul.nav-tabs > li > a.nav-link:hover {
                border: 1px solid black;
            }*/
        /*SECOND TABS*/

        .tabs-container .generalContents {
            border: 10px solid white;
        }


        .tabs-container .ibox {
            margin: 0px;
            width: 100%;
        }



        /*BUTTONS*/

        .tabs-container .PersonalButtons button {
            margin-right: 2px;
            border-radius: 5px;
        }

        .tabs-container div.col-xs-4 {
            padding: 0px;
            padding-right: 2px;
        }

        .tabs-container button.btn-default {
            width: 100%;
            font-weight: 600;
        }

        /*hide or show car info button*/
        #InfCar {
            border: none;
            width: 29px;
            height: 29px;
        }

        #InfSale {
            border: none;
            width: 29px;
            height: 29px;
        }

        #InfPayment {
            border: none;
            width: 29px;
            height: 29px;
        }

        /*ADDRESS TABS*/
        #tabsContainerAddress {
            padding-top: 2px;
        }

            #tabsContainerAddress button.btn-default {
                font-size: 13px !important;
            }

        /*DATE OF BIRTH INPUT*/
        #tabsContainerEmployment {
            padding-top: 2px;
        }

            #tabsContainerEmployment button.btn-default {
                font-size: 13px !important;
            }

        .tabs-container .input-group {
            border: 1px solid #ccc !important;
        }


        span[data-valmsg-for] {
            font-size: 17px;
            font-weight: bold;
            color: red !important;
        }
        /*GENERAL WIZARD*/
        /*.wizard > .content > .body {
            position: relative;
            padding: 0px;
            width: 100%;
        }

            .wizard > .content > .body label {
                display: inline-block;
                margin-bottom: 0px !important;
               
                margin-top: 7px !important;
                margin-bottom: 5px !important;
                padding: 0px !important;
            }

        .wizard > .steps > ul {
            margin-top: 15px;
        }

            .wizard > .steps > ul > li {
                width: 15%;
            }

        ul, li {
            list-style: none !important;
        }

        .wizard > .steps a {
            padding: 8px !important;
            color: black !important;
            font-weight: 600;
        }

        .wizard > .steps .current a {
            background: #f9e712 !important;
        }

        .wizard > .steps .done a {
            background-color: #fef798 !important;
        }

        .wizard, .tabcontrol {
            background-color: white;
        }

            .wizard > .steps .number {
                font-size: 1.06em !important;
            }

            .wizard > .actions a, .wizard > .actions a:hover, .wizard > .actions a:active {
                background-color: #f9e712 !important;
                color: black !important;
            }

            .wizard > .actions .disabled a, .wizard > .actions .disabled a:hover, .wizard > .actions .disabled a:active {
                background: #eee !important;
                color: #aaa;
            }
        */
        #form-t-00,form-t-01 {
            display:flex !important;
            width:auto !important;
        }
        .wizard > .steps a {
            padding: 8px !important;
            color: black !important;
            font-weight: 600;
            width:max-content !important
        }
        /*input validation verify price*/
        #Very {
            background-color: #ffd90863;
            border: 0;
            outline: none;
            width: 0px;
            height: 0px;
            border-color: #ffd90863;
        }
        /*MODAL SEARCH RESULTS*/
        div#ModalSearchResults .modal-dialog {
            width: 80%;
        }

        div#ModalUndoSale .modal-dialog {
            width: 70%;
        }

        div#ModalResultsFYI .modal-dialog {
            width: 80%;
        }

        div#ModalSearchResults .modal-body, div#ModalUndoSale .modal-body, div#ModalResultsFYI .modal-body {
            overflow: auto;
        }

            div#ModalSearchResults .modal-body .col-xs-12 .col-sm-12, div#ModalUndoSale .modal-body .col-xs-12 .col-sm-12 {
                border: 0.4px solid #f5f6f5;
            }

            div#ModalSearchResults .modal-body input[type=text],
            div#ModalSearchResults .modal-body select,
            div#ModalUndoSale .modal-body input[type=text],
            div#ModalUndoSale .modal-body select {
                width: 100%;
            }


            div#ModalSearchResults .modal-body .col-xs-12 div .col-sm-5, div#ModalUndoSale .modal-body .col-xs-12 div .col-sm-5,
            div#ModalSearchResults .modal-body .col-sm-6 div.col-sm-12, div#ModalUndoSale .modal-body .col-sm-6 div.col-sm-12 {
                padding: 0px;
                margin: 0px;
            }

        /* Clase para editar */
        .inputSelect {
            background-color: white;
            border: 0.4px solid #f5f6f5 !important;
            padding: 5px !important;
        }
        /*Padding all inpouts step 1*/
        .form-control, .single-line {
            padding: 0px 12px;
        }

        div#ModalSearchResults .col-xs-12 label.col-xs-12 {
            padding: 5px !important;
            font-weight: bold;
            font-size: 17px !important;
        }

        /*SWEETALERT*/
        #ModalSweetAlert {
            background-color: white;
            font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;
            width: 478px;
            height: 25%;
            padding: 17px;
            border-radius: 5px;
            text-align: center;
            position: fixed;
            left: 50%;
            top: 50%;
            margin-left: -256px;
            margin-top: -200px;
            overflow: hidden;
            display: none;
            z-index: 99999;
            padding-bottom: 40px;
        }

            #ModalSweetAlert .modal-dialog {
                width: 100%;
            }

        /*STATUS LABEL*/
        .statusSave {
            background-color: white;
            font-size: 25px;
            padding: 0px 10px 10px 10px !important;
            font-size: 30px !important;
        }

        .paddingbtn {
            padding: 7px 9px 7px 9px !important;
        }

        /*F&I*/
        #FYI {
            background-color: white;
        }



        .wizard > .content > .body #FYI label.col-sm-6 {
            /*background-color: #ffd908b5;*/
            padding-bottom: 15px !important;
            margin: 0px !important;
            /*background-color: #ffdf30;*/
        }

        label.col-xs-5 {
            padding-bottom: 15px;
        }



        .wizard > .content > .body #FYI label {
            padding-left: 10px;
            padding-right: 10px;
            font-size: 13px !important;
        }

        @@media (min-width:1440px) {
            .wizard > .content > .body #FYI label {
                font-size: 14px !important;
            }

            .Labels {
                font-size: 10px !important;
            }
        }

        .resultBoxes {
            height: 40%;
            background-color: white;
        }



        label[name="GetBanks_"] {
            background-color: #1ab394 !important;
            border-color: #1ab394;
            color: #FFFFFF;
        }

        label .text-not-yet-result {
            background-color: white !important;
        }

        @@media (min-width: 768px) {
            div.col-sm-12 .b-r {
                margin-top: 10px;
            }
        }

        /*style alertify*/
        .alertify .ajs-header {
            padding: 16px 24px;
            color: white;
            font-weight: bold;
            font-size: 20px;
            background-color: #ff5c5c;
        }

        .alertify .ajs-body .ajs-content {
            padding: 16px 24px 16px 16px;
            font-size: 15px;
            font-weight: 500;
        }

        button.ajs-button.ajs-ok {
            border-radius: 3px;
            font-size: inherit;
            color: #fff;
            background-color: #ff5c5c;
            border-color: #ff5c5c;
            display: inline-block;
            font-weight: 400;
            text-align: center;
            white-space: nowrap;
            vertical-align: middle;
            user-select: none;
            border: 1px solid transparent;
            padding: .375rem .75rem;
        }

        button.ajs-button.ajs-ok {
            background-color: #fe4141;
            border-color: #fe4141;
        }
        /*SPAN & LABELS RESULTS PORCENT*/
        span#LTVWholesale, span#LTVRetail, span#BaseValue, label#PTI, label#DTI {
            font-size: 14px;
            font-weight: bold;
            text-align: center;
            margin: 0px !important;
            padding: 6px 12px !important;
        }

        #LabelFinalAmount span, label#LabelMonthlyExpenses, #LabelLTVSudgestions {
            font-size: 14.5px !important;
        }

        #LabelFinalAmount {
            font-size: 14.5px !important;
        }

        #LabelLTVSudgestions {
            text-align: center;
        }

        label#DTI, label#DownPayment {
            font-weight: bold;
            margin: 0px !important;
            padding: 6px 12px !important;
        }

        .label-interviewquestions {
            color: white;
            text-align: center;
        }

        .LabelResult {
            text-align: center;
        }

        span#SuggestedTier {
            font-size: 18px;
            font-weight: bold;
        }

        div.col-sm-12 .b-r {
            padding-left: 20px;
            padding-right: 20px;
        }

        select[name="PossibleLenders"] {
            height: 280px;
        }

        label#LTVRetail, label#LTVWholesale, label#BaseValue {
            background-color: white !important;
            border: 1px solid #ccc;
            padding: 6px 12px !important;
            margin: 0px !important;
        }

        /*SPAN YEARS-MONTHS*/
        .panel-body .row div.col-lg-5 > div.col-lg-6, .panel-body .row div.col-lg-5 > div.col-lg-6 > label {
            background: white;
        }

            .panel-body .row div.col-lg-5 > div.col-lg-6 > label {
                font-weight: normal;
                text-align: center;
                display: block;
                position: absolute;
                margin-left: 50px;
                margin-top: 6px;
                height: 20px;
                padding: 0px;
                width: 20px;
            }

        label.col-xs-1 {
            padding: 0px 5px 5px 5px;
        }

        .labelMoney {
            font-weight: bold;
            text-align: center;
            display: block !important;
            position: absolute;
            margin-top: 6px !important;
            height: 20px;
            padding: 0px;
            width: 30px;
            z-index: 2;
        }

        div.col-xs-12 > div.col-xs-5 input.col-xs-11,
        div.col-xs-5 input.col-xs-11 {
            padding-left: 25px;
        }

        /*START IFRAME*/
        #myModaliFrane img {
            width: auto !important;
            max-width: 100% !important;
            max-height: 40px !important;
        }

        #ModalViewPhoto img {
            width: auto !important;
            max-width: 100% !important;
            max-height: auto;
        }

        #ModalViewPhoto img {
            width: auto !important;
            max-width: 100% !important;
            max-height: auto;
        }

        span.number {
            padding: 6px 6px;
            font-size: 15px !important;
        }

        #ftb_ghost .modal-body {
            height: 100px !important;
        }

        /*QC-DOCUMENTS*/
        #QC {
            background-color: white;
        }


        #form-p-3 {
            background-color: white;
        }

        /*MODAL TRADE IN*/
        div#ModalTradeIn .modal-dialog {
            width: 60%;
        }

        div#ModalTradeIn .modal-body {
            overflow: hidden;
        }

        .blue {
            background-color: rgb(28,132,198) !important;
        }

        li.blue a#getBanks {
            color: white !important;
        }

        textarea {
            width: 100% !important;
        }

        input[type=number]::-webkit-inner-spin-button,
        input[type=number]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        input[type=number] {
            -moz-appearance: textfield;
        }

        input[readonly],
        input[disabled],
        select[readonly],
        select[disabled] {
            background-color: #dedede !important;
        }

        input#DateOfPurchase, input#TagExp {
            background-color: white;
            cursor: pointer;
        }

        span.input-group-addon i {
            font-style: normal !important;
            font-size: 14px;
        }


        .fa-check-circle:before {
            content: "\f058";
            color: green;
            font-size: 18px;
        }

        .fa-times-circle:before {
            content: "\f057";
            color: red;
            font-size: 18px;
        }

        .fa-external-link-alt:before, .fa-external-link-alt:before {
            content: "\f360";
            color: #2bcc2b;
            font-size: 24px;
        }

        .fa-check:before {
            color: #2bcc2b;
            font-size: 24px;
        }

        .fa-times:before {
            color: red;
            font-size: 24px;
        }

        span#span-efficient-ommunication {
            font-size: 16px;
        }

        input[name="efficientCommunication.SalesDep"],
        input[name="efficientCommunication.FinanceDep"],
        input[name="efficientCommunication.DMVDep"] {
            /* Doble-tamaño Checkboxes */
            -ms-transform: scale(2); /* IE */
            -moz-transform: scale(2); /* FF */
            -webkit-transform: scale(2); /* Safari y Chrome */
            -o-transform: scale(2); /* Opera */
            padding: 10px;
        }

        i {
            cursor: pointer !important;
        }

        .datepicker.dropdown-menu {
            z-index: 4000 !important;
        }

        #select {
            padding-bottom: 10px;
        }

        #coBuyer {
            display: none;
        }

        .fa-check-square {
            font-size: 30px;
            padding-top: 3px;
            padding-left: 20px;
        }

        .onoffswitch-inner:before {
            content: "Yes";
            padding-left: 7px;
            background-color: #1AB394;
            color: #FFFFFF;
        }

        .onoffswitch-inner:after {
            content: "No";
            padding-right: 7px;
            background-color: #ff0000 !important;
            color: #ffffff !important;
            text-align: right;
        }

        #pad {
            padding-left: 15px;
            padding-right: 15px;
        }


        .onoffswitch-label {
            border: 2px solid #1AB394;
        }

        .onoffswitch-switch {
            background: #FFFFFF;
            border: 2px solid #1AB394;
        }

        img {
            display: block;
            margin: auto;
            width: 80px;
        }

        .ErrorBuyer {
            background-color: white;
            border: 0;
            outline: none;
            width: 0px;
            height: 0px;
            border-color: white;
        }

        #ButtonViewReisdence {
            display: none;
        }

        .Ocultar {
            display: none;
        }

        #container-image > .wraptocenter > img {
            max-width: 100%;
            max-height: 100%;
        }

        .wraptocenter {
            display: table-cell;
            text-align: center;
            vertical-align: middle;
            height: 200px;
        }

        #container-image, #old-img {
            max-height: 250px !important;
            text-align: -webkit-center;
            background: #e8e8e8;
            border: 1px solid #c3c2c2;
            width: auto;
            max-width: 100%;
        }


        .impr .form-group > div.col-xs-5 {
            background: white;
        }


        .hr-line-dashed {
            border-top: 2.5px dashed #c3c5c7;
            margin: 0 !important;
        }

        .BotonSave {
            background-color: #009688;
            text-decoration-color: black;
            border: none;
            border-radius: 0.25rem;
            padding: 1rem 2rem;
            line-height: 10px;
        }

        input[type=number], input[type="text"] {
            -webkit-appearance: textfield !important;
            margin: 0;
            -moz-appearance: textfield !important;
        }

            input[type=number]::-webkit-outer-spin-button,
            input[type=number]::-webkit-inner-spin-button, input[type="text"]::-webkit-outer-spin-button {
                -webkit-appearance: none !important;
                margin: 0;
            }

        #ModalReferences .modal-dialog,
        #ModalCoBuyerReferences .modal-dialog {
            width: 60%;
        }

        #ModalReferences .modal-body,
        #ModalCoBuyerReferences .modal-body {
            overflow: auto;
        }
        /*MODAL IFRAME*/
        div#myModaliFrane .modal-dialog {
            width: 98% !important;
            height: 98% !important;
        }


        .span-success {
            background-color: #1c84c6 !important;
        }

        .span-default {
            background-color: transparent !important;
        }

        .span-primary {
            background-color: #1ab394 !important;
        }

        span.span-differ-dp {
            border: 1px solid darkgrey;
            border-radius: 3px 0px 0px 3px;
            position: absolute;
            left: 0px;
            height: 33px;
            top: 0;
            width: 30px;
        }

        /*swetalert*/
        .swal2-container.swal2-shown {
            z-index: 2051;
        }

        .swal2-popup .swal2-title {
           text-align: left !important;
        }

        #swal2-title {
            display: inline !important;
        }

        .swal2-popup {
            width: 38em !important;
        }

        .swal-wide {
            width: 650px !important;
        }

        #swal2-content {
            display: block;
            font-weight: 600;
            font-size: 105%;
        }

        .font-bold {
            font-weight: 800;
        }

        #swal2-title p {
            font-size: 18px !important;
        }


        #search-vehicles-result {
            background-color: white !important;
        }

        /* General */
        .validate-error-field {
            background: #fac0c0 !important;
        }

        span#messageBalance {
            color: red;
            font-size: 16px;
            font-weight: bold;
        }

        /*Solo del paso 2*/
        label#years, label#months {
            position: absolute;
            right: 14px;
            top: 0px;
            font-weight: bold;
        }

        span[data-valmsg-for="BuyerReferences"],
        span[data-valmsg-for="Co_BuyerReferences"],
        span[data-valmsg-for="ReceivesPRCO/Notebook"] {
            font-size: 16px;
        }


        select {
            text-transform: uppercase !important;
        }

        .zipcode .spiner-example {
            position: absolute;
            right: 10px;
            top: -8px;
        }

        .zipcode .sk-spinner-fading-circle.sk-spinner {
            margin: 0 auto;
            width: 15px;
            height: 13px;
            position: relative;
            color: violet;
        }

        /*tabla steop 4*/
        #smart-funding p {
            font-size: 17px !important;
            font-weight: 600;
            margin: 12px 10px 12px 10px;
        }

        #smart-funding .close {
            float: none;
            font-size: 20px !important;
            opacity: .6 !important;
        }

        div.steps li[name="SaveSale"] {
            position: absolute;
            right: 170px;
            width: 5%;
            padding: 6px !important;
        }

        a#Previous, a#Next {
            padding-bottom: 6px !important;
            padding-top: 6px !important;
        }



        div#ModalDocCheckList .column-7 {
            background-color: #ffd908d9 !important;
        }

        #ModalDocCheckList .bg-yellow {
            background-color: white;
        }

        #AlertDueBill {
            font-size: 20px !important;
        }

            #AlertDueBill p {
                text-align: start;
                font-size: 20px !important;
                font-weight: 500;
            }

        .TradeImgContainer {
            display: grid;
            grid-template-columns: repeat(1, 2fr);
            column-gap: 2rem;
            justify-content: center;
        }

        @@media (min-width: 768px) {
            .TradeImgContainer {
                display: grid;
                grid-template-columns: 1fr 2fr 1fr;
                column-gap: 2rem;
                justify-content: center;
            }
        }
    </style>
}
<div class="wrapper wrapper-content no-padding-t no-padding-l no-padding-r" id="Sales">

    <div>
        @Html.Partial("_dmvForms")
    </div>

    <form id="IndexPdfForm" enctype="multipart/form-data">
        <input type="file" id="ReportFile" name="ReportFile" style="display:none" />
    </form>

    <!--FunAjax-->

    @using (Ajax.BeginForm("POSTSave", "AjaxSales", null,
    new AjaxOptions
    {
        HttpMethod = "Post",
        OnBegin = "onBeginSubmit",
        OnComplete = "onCompleteSubmit",
        OnFailure = "onFailureResult",
        OnSuccess = "onSuccessResult",
        UpdateTargetId = ".....",
        InsertionMode = InsertionMode.Replace
    },
    new { @enctype = "multipart/form-data", @id = "form", @autocomplete = "off" }))
    {
        <input type="hidden" id="EmployeeId" name="EmployeeId" value="@User.Identity.GetUserId()" />
        @Html.AntiForgeryToken()
        @Html.Partial("_ModalesCreate")
        @Html.Partial("_ModalsStep3")

        <h1>Deal Structure </h1>
        <fieldset>
            @Html.Partial("_Step1")
        </fieldset>

        <h1>Buyer/Co-Buyer</h1>
        <fieldset>
            @Html.Partial("_Step2")
        </fieldset>

        <div class="hr-line-dashed"></div>
    }
</div>
<!--Modal ModalFundedEdit -->
<div class="modal fade" id="ModalFundedEdit" style="margin-top:190px" data-backdrop="static" data-keyboard="false" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class="modal-header">
                <h1 class="modal-title text-center font-bold">
                    <strong>Password</strong>
                    <button type="button" class="btn btn-danger pull-right" data-dismiss="modal">X</button>
                    <button type="button" class="btn btn-sm m-r-xs  font-bold pull-right button-lp--secondary" onclick="FFundedEdit()">
                        Enter
                    </button>
                </h1>

            </div>
            <!-- Modal body -->
            <div class="modal-body p-w-md m-b-lg">
                <div class="row ">
                    <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                        <div class="span-lp centery-lp justify-content--space-between">
                            <div class="tc-black-lp tw-bold-lp ts-lp-1"> Password:</div>
                        </div>
                        <div class="span-lp">
                            <div class="grid-lp col-lp gap-lp-0">
                                <div class="span-lp">
                                    <input class="input-lp ts-lp-1" name="PasswordE" id="PasswordE" type="password" value="">
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>
    </div>
</div>
<!--Modal Documents-->
<div class="modal fade" id="ModalDocCheckList" data-backdrop="static" data-keyboard="false" role="dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h2 class="modal-title text-center">
                    <strong>Quality Control Docs</strong>
                    <button type="button" class="btn btn-danger pull-right" name="SaveDocsInFinance" data-dismiss="modal">X</button>
                </h2>
            </div>

            <!-- Modal body -->
            @using (Html.BeginForm("DocsInFinance", "AjaxLoanStatus", new { }, FormMethod.Post, new { OnSuccess = "Guardar", enctype = "multipart/form-data", autocomplete = "Off", id = "formDocsToFinance" }))
            {
                @Html.AntiForgeryToken()
                <input type="hidden" name="IdCar" />

                <div class="modal-body row documentsCheckList ">
                    <div class="tabs-container">
                        <ul class="nav nav-tabs " role="tablist">
                            <li class="active"><a class="nav-link active" data-toggle="tab" href="#tab-LupitasDoc">Buyer</a></li>
                            <li><a class="nav-link " id="DocCoBuyer" data-toggle="tab" href="#tab-LupitasDocCoBuyer">Co-Buyer</a></li>
                            <li><a class="nav-link" data-toggle="tab" href="#tab-BankDoc">Bank Check List</a></li>
                        </ul>
                        <div class="tab-content">
                            <div role="tabpanel" id="tab-LupitasDoc" class="tab-pane active">
                                <div class="panel-body no-padding">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 subtitulos no-padding-l">
                                        <label class="col-xs-7 col-sm-7 col-md-7 col-lg-7 text-center label-yellow blue letraBlanca">Name</label>
                                        <div class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding">
                                            <label class="col-xs-6 col-sm-6 col-md-6 col-lg-6  label-yellow blue letraBlanca text-center">English</label>
                                            <label class="col-xs-6 col-sm-6 col-md-6 col-lg-6  label-yellow blue letraBlanca text-center" id="Spanish">Spanish</label>
                                        </div>
                                    </div>
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-scroll no-padding-r no-padding-l" style="height:500px!important;">
                                        @foreach (var item in ViewBag.DocsToFinance)
                                        {
                                            if (item.Type == 1)
                                            {
                                                <input type="hidden" name="DocsInFinance[@(con)].DocInFinance.Id" />
                                                <input type="hidden" name="DocsInFinance[@(con)].DocInFinance.Type" value="@item.Type" />
                                                <div class="grid bg-yellow" id="@con">
                                                    <div class="column-7 Labels-cls ">
                                                        <input type="hidden" name="DocsInFinance[@(con)].DocInFinance.IdDocToFinance" value="@item.Id" />
                                                        <label name="DocsInFinance[@(con)].DocInFinance.IdDocToFinance">
                                                            <span>@(Enumeracion++)</span>

                                                            @item.Document
                                                        </label>
                                                        @if (item.Id == 26)
                                                        {
                                                            <a href="javascript:popUp('https://app.dealerxt.com/Account/login')" title="Dealerxt">
                                                                <img src="~/Elements/icons/dealerXT.png" style="width:70px; height:30px" />
                                                            </a>
                                                        }
                                                        @if (item.Id == 10)
                                                        {
                                                            <a href="javascript:popUp('https://www.karpower.com/Marketing/index.aspx')" title="Karpower">
                                                                <img src="~/Elements/icons/LogoKBB.png" style="width:30px; height:35px" />
                                                            </a>
                                                        }
                                                        @if (item.Id == 25)
                                                        {
                                                            <a href="javascript:popUp('https://www.carfax.com/')" title="Carfax">
                                                                <img src="~/Elements/icons/LogoCarfax.png" style="width:30px; height:35px" />
                                                            </a>
                                                        }

                                                        @if (item.Id == 5)
                                                        {
                                                            <a title="Drivers License" id="QDocDL">
                                                                <img src="~/Elements/icons/drivers_license.jpg" style="width:40px; height:35px" />
                                                            </a>
                                                        }
                                                        @if (item.Id == 1)
                                                        {
                                                            <button type="button" class="btn btn-primary no-padding" style="        margin: 0 !important;
        border: #1ab394 4px groove;
         width: 50px;
        height: 30px;">
                                                                LTV's
                                                            </button>
                                                        }
                                                        @if (item.Id == 2)
                                                        {
                                                            <button type="button" class="btn btn-primary no-padding" style="        margin: 0 !important;
        border: #1ab394 4px groove;
        width: 50px;
        height: 30px
">
                                                                Moni
                                                            </button>
                                                        }
                                                        @if (item.Id == 9)
                                                        {
                                                            <a title="Insurance Card" id="QDocIC">
                                                                <img src="~/Elements/icons/IsurenceCard.jpg" style="width:30px; height:35px" />
                                                            </a>
                                                        }
                                                        @if (item.Id == 41)
                                                        {
                                                            <a title="Proof of Down Payment" id="QDocPDP">
                                                                <img src="~/Elements/icons/DocPDP.png" style="width:30px; height:35px" />
                                                            </a>
                                                        }

                                                        <button type="button" class="btn btn btn-success btn-xs p-xxs hidden BtnAddDoc" name="BtnAddDoc_@item.Id" id="@item.Id">Add</button>
                                                    </div>


                                                    <div class="column-5 grid" id="Accounting">
                                                        <select class="form-control column-6 text-box single-line english " name="DocsInFinance[@(con)].DocInFinance.IdStatus_DocToFinance_English" @*readonly*@>
                                                            <option value="0">select</option>
                                                            @foreach (var ii in ViewBag.Status_DocToFinance)
                                                            {
                                                                <option value="@ii.Id">@ii.Description</option>
                                                            }
                                                        </select>
                                                        @if ((item.Id >= 2 && item.Id <= 7) || (item.Id >= 9 && item.Id <= 14) || item.Id == 19 || item.Id == 20 || (item.Id >= 25 && item.Id <= 26) || item.Id == 41 || item.Id == 42 || item.Id == 46 || item.Id == 45)
                                                        {
                                                            <select class="hidden spanishNA" name="DocsInFinance[@(con)].DocInFinance.IdStatus_DocToFinance_Spanish" value="2">
                                                                <option value="2"></option>
                                                            </select>
                                                        }
                                                        else
                                                        {
                                                            <select class="form-control column-6 text-box single-line spanish " name="DocsInFinance[@(con)].DocInFinance.IdStatus_DocToFinance_Spanish" @*readonly*@>
                                                                <option value="0">select</option>
                                                                @foreach (var ii in ViewBag.Status_DocToFinance)
                                                                {
                                                                    <option value="@ii.Id">@ii.Description</option>
                                                                }
                                                            </select>
                                                        }
                                                    </div>
                                                    <div class="col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding Notes" id="@item.Id"></div>
                                                </div>
                                                con++;
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                            <div role="tabpanel" id="tab-LupitasDocCoBuyer" class="tab-pane">
                                <div class="panel-body no-padding">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 subtitulos no-padding-l">
                                        <label class="col-xs-7 col-sm-7 col-md-7 col-lg-7 text-center label-yellow blue letraBlanca">Name</label>
                                        <div class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding">
                                            <label class="col-xs-6 col-sm-6 col-md-6 col-lg-6  label-yellow blue letraBlanca text-center">English</label>
                                            <label class="col-xs-6 col-sm-6 col-md-6 col-lg-6  label-yellow blue letraBlanca text-center" id="Spanish">Spanish</label>
                                        </div>
                                    </div>
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 table-scroll no-padding-r no-padding-l" style="height:500px!important;">
                                        @foreach (var item in ViewBag.DocsToFinance)
                                        {
                                            if (item.Type == 3)
                                            {
                                                <input type="hidden" name="DocsInFinance[@(con)].DocInFinance.Id" />
                                                <input type="hidden" name="DocsInFinance[@(con)].DocInFinance.Type" value="@item.Type" />
                                                <div class="grid bg-yellow" id="@con">
                                                    <div class="column-7 Labels-cls ">

                                                        <input type="hidden" name="DocsInFinance[@(con)].DocInFinance.IdDocToFinance" value="@item.Id" />
                                                        <label name="DocsInFinance[@(con)].DocInFinance.IdDocToFinance">
                                                            <span>@(Enumeracion2++)</span>

                                                            @item.Document

                                                        </label>
                                                        <button type="button" class="btn btn btn-success btn-xs p-xxs hidden BtnAddDoc" name="BtnAddDoc_@item.Id" id="@item.Id">Add</button>
                                                    </div>


                                                    <div class="column-5 grid" id="Accounting">

                                                        <select class="form-control column-6 text-box single-line english " name="DocsInFinance[@(con)].DocInFinance.IdStatus_DocToFinance_English">
                                                            <option value="0">select</option>
                                                            @foreach (var ii in ViewBag.Status_DocToFinance)
                                                            {
                                                                <option value="@ii.Id">@ii.Description</option>
                                                            }
                                                        </select>
                                                        @if ((item.Id >= 34 && item.Id <= 36) || (item.Id >= 38 && item.Id <= 40) || item.Id == 42 || item.Id == 44)
                                                        {
                                                            <select class="hidden spanishNA" name="DocsInFinance[@(con)].DocInFinance.IdStatus_DocToFinance_Spanish" value="2">
                                                                <option value="2"></option>
                                                            </select>
                                                        }
                                                        else
                                                        {
                                                            <select class="form-control column-6 text-box single-line spanish  " name="DocsInFinance[@(con)].DocInFinance.IdStatus_DocToFinance_Spanish">
                                                                <option value="0">select</option>
                                                                @foreach (var ii in ViewBag.Status_DocToFinance)
                                                                {
                                                                    <option value="@ii.Id">@ii.Description</option>
                                                                }
                                                            </select>
                                                        }
                                                    </div>
                                                    <div class="col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding Notes" id="@item.Id"></div>
                                                </div>

                                                con++;

                                            }
                                        }


                                    </div>
                                </div>
                            </div>
                            <div role="tabpanel" id="tab-BankDoc" class="tab-pane">
                                <div class="panel-body no-padding" id="DocumentsBanks">

                                </div>
                            </div>
                        </div>


                    </div>


                </div>
            }

        </div>
    </div>
</div>

<div class="modal fade px-lp-0" id="ChangeLogPDFModal" data-backdrop="static" data-keyboard="false" role="dialog">
    <div class="modal-dialog w-lp-100 my-lp-0">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header flex-lp ">
                <h2 class="modal-title center-lp tw-normal-lp ts-lp-175 w-fit-c-lp pr-lp-6 flex-grow-lp-1 " id="titleModalTask"><strong>Change Log</strong></h2>

                <div class="flex-lp">

                    <button type="button" class="button-lp button-lp--danger button-lp--md px-lp-1" data-dismiss="modal">
                        X
                    </button>
                </div>



            </div>

            <!-- Modal body -->

            <div class="" id="contentdiv " style="height:700px;">
                <iframe id="docpdf" style="background-color:#EEE; height:700px; width:100%">
                    PDF goes here
                </iframe>

            </div>


        </div>
    </div>
</div>

@section scripts{
    @Scripts.Render("~/LupScripts/popper.min.js")
    @Scripts.Render("~/LupScripts/plugins/datepicker/bootstrap-datepicker.js")
    @Scripts.Render("~/LupScripts/inspinia.js")
    @Scripts.Render("~/LupScripts/plugins/sweetalert/sweetalert.min.js")
    @Scripts.Render("~/LupScripts/myScripts.js")
    @Scripts.Render("~/LupScripts/plugins/moment/moment.js")
    @Scripts.Render("~/LupScripts/plugins/validate/jquery-validate-1-9-1.min.js")
    @Scripts.Render("~/LupScripts/plugins/jquery.accrue/jquery.accrue.min.js")
    @Scripts.Render("~/LupScripts/pace.min.js")
    @Scripts.Render("~/LupScripts/plugins/steps/jquery.steps.js")
    @Scripts.Render("~/LupScripts/PlugingsLg/TaxRateCA.js")
    @Scripts.Render("~/LupScripts/plugins/sweetalert2/sweetalert2.all.min.js")
    @Scripts.Render("~/LupScripts/DMVFeesCalculate.js")
    @Scripts.Render("~/LupScripts/apiLupitasConnections/apiConfigurations.js")
    <script src="~/LupScripts/apiLupitasConnections/dmvdesk.js"></script>
    <script src="~/LupScripts/apiLupitasConnections/credit700.js"></script>

    <script src="~/LupScripts/PlugingsLg/Documents/DocBanks.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.2/jspdf.min.js"></script>
    <script src="~/LupScripts/plugins/generePDF/jspdf.min.js"></script>
    <script src="~/LupScripts/plugins/generePDF/jspdf.plugin.autotable.js"></script>
    <!--Script of alertify-->
    <!--Start Material Lupitas CSS-->
    <script src="https://kit.fontawesome.com/5242c5f78d.js" crossorigin="anonymous"></script>
    <script src="~/Scripts/Material/framework_lupitas.js"></script>
    <link href="~/Elements/css/FrameworkLupitas/framework_lupitas.css" rel="stylesheet" />
    <link href="~/Elements/css/colors_lupitas.css" rel="stylesheet" />
    <link href="~/Elements/css/buttonsMaterialDesign.css" rel="stylesheet" />
    <link href="~/Elements/css/inputMaterialDesign.css" rel="stylesheet" />
    <script src="~/LupScripts/plugins/generePDF/jspdf.min.js"></script>
    <script src="~/LupScripts/plugins/generePDF/jspdf.plugin.autotable.js"></script>
    <!--End Material Lupitas CSS-->
    @Scripts.Render("~/LupScripts/jquery.signalR-2.4.1.js")
    @Scripts.Render("/signalr/hubs")
    @Scripts.Render("~/LupScripts/plugins/select2/select2.full.min.js")

    @Scripts.Render("~/LupScripts/plugins/datatables/datatables.min.js")
  

<script type="text/javascript">
    //ChangeLog
    let ChangeTime= "@DateTime.Now.Month/@DateTime.Now.Day/@DateTime.Now.Year @DateTime.Now.TimeOfDay.ToString().Split('.')[0]";
    let clicksBank = 0;
    let clicksStoreId = 0;
    let clicksSalesAssociateOne = 0;
    let oldValues = ["", "", "", "", "", "", "", "","","","","","","","",""];
    let fields = ["Miles at Sales", "ROS", "Temp-Tags", "Date Sold", "Sales Price", "Sales Tax", "Down Payment", "Bank", "ARP", "Term", "First Payment Due", "Days Due", "Final Payment", "Finance Charges", "Store (Sales)","Sales Associate"];
    let currentValues = ["", "", "", "", "", "", "", "","","","","","","","",""];
   

    //Variables Globals
    var auxpago = 0;
    var auxinteresdiario = 0;
    var auxpagototal = 0;
    var filterselect = 0;
    var icban = 0;
    var isban = 0;
    var ipban = 0;
    var gapRadioLobel = 0;
    var auxDoc = 0;
    var clientZipCode = false;
    var stock = 0;
    var years = 0;
    var months = 0;
    var time = 0;
    var yearsV = 0;
        var miles = 0;
        //Docs
        var TradeInDoc = 0;
        var TradeInCert = 0;
        var TradeInRev = 0;
        var POI = 0;

    var Zip = $('input[name="StoreModel.ZipCodeStore"]').val();
    var salePrice = setSplit($('input[name="SalePrice"]').val());
        var accessories = setSplit($('input[name="Accessories"]').val());

        var auxAmountAccesories = 0
    var fees = setSplitWithDecimals($('input[name="Fees"]').val());
    var serviceContract = setSplitWithDecimals($('input[name="ServiceContract"]').val());
    var salesTax = setSplitWithDecimals($('input[name="SalesTax"]').val());
    //%
    var salesTaxRate = setSplitWithDecimals($('input[name="StoreModel.SalesTaxRate"]').val());
    var dmvAutoCalculate = setSplit($('input[name="DMVAutoCalculate"]').val());
    //Sales Structure
    var gapInsurance = setSplit($('input[name="GapInsurance"]').val());

    //Fees Modal
    priceMax = 0;
    priceMin = 0;
    //Fees Modal
    var smogFee = 0;
    var docFee = 0;
    var cancellationOption = 0;

    //Service Contract Modal
    var company = $('select[name="ServiceContractModal.Company"]').val('Portfolio Protection');
    var coverage = $('select[name="ServiceContractModal.Coverage"]').val();
    var terms = $('input[name="ServiceContractModal.Terms"]').val();
    var atMiles = ReplaceNumberWithCommasRemoveDecimals($('input[name="ServiceContractModal.Miles"]').val());
    var price = setSplit($('input[name="ServiceContractModal.Price"]').val());
    var finacedBy = '';
    //Variable DMV
    var TaxRate_Fees = 0;
    //Variables globales de F&I
    var incomeSelected = 1;
    var ytdSelected = 0;

    var Points = 0;
    var Points2 = 0;
    var Points3 = 0;
    var Points4 = 0;
    var goodVsBadCredRatio = 0;

    var existFandId = false;
    /******************   Module 1     ***************/
    var ftb = 0;
    var ghost = 0;
    var openBK = 0;
    var dischargeBK = 0;
    var openAuto = 0;
    var itinSB60 = 0;
    var itinNoDL = 0;
    var SameLineWork = 0;
    var communityYears = 0;
    var ficoScore = 0;
    var totalLines = 0;
    var timeCreditBureu = 0;//13;
    var totalDTI = 0;
    var pti = 0;
    var HAmountCredit = 0;
    var RemainingOpenAutos = 0;
    let stateCar = 0;
    let lastLicense = 0;
    let lastRegTrans = 0;
    var commercial = 2;
    var maker = 0;
    var model = 0;
    var repo = 0;
    var retails = 0;
    var openTaxLiensJudgments = 0;
    var Wholesale = 0;
    var finalAmount = 0;
    var sameCommunity = 0;
    var collection_chargeoff = 0;
    var medicalCollection = 0;
    var paidAuto = 0;
    var homeOwner = 0;
    var comparableCredit = 0;
    var collection_chargeoff_36 = 0;
    var collection_chargeoff_24_35 = 0;
    var collection_chargeoff_12_23 = 0;
    var collection_chargeoff_1_11 = 0;


    var wholeSale = 0; //Valor de carro a presio de mayorista
    var retailValue = 0; // Valor de carro a presio de reventa por medudeo
    var serviceContact = 0; // Presio por un servicio de garantia
    var gap = 0; //Presio por un servicio de seguro
    var amountFinanced = 0; // Monto a financiar a credito
    var defferDownPayment = 0; // Monto diferido del enganche inicial

    //SmartFunding
    var ProofDifferDownPayment=false;

    //aux variables
    var beforeLinesCredit = 0;
    var modal_collection_36 = 0;
    var modal_collection_24_35 = 0;
    var modal_collection_12_23 = 0;
    var modal_collection_1_11 = 0;

    var hoursPerWeek = 40;
    var hourlyIncome = 0;
    var YTD = 0;
    var daysPerMonths = 365 / 12;
    var valuePerDay = 1 / daysPerMonths;
    var monthlyIncome = 0;
    var otherIncome = 0;
    var totalGrossIncome = 0;
    var prevTGross = 0;

    // Reference's Array
        var referecenses_array = new Array(12);
        var referecensesCB_array = new Array(12);
    //Variables Modal Trade-In
    var auxvalueTrade = 0;
    var auxlienTrade = 0;
    var valueTrade = 0;
    var lienTrade = 0;
    var RemoveAddSC = false;
    var RemoveAddGP = false;
    var docDL = "";
    var docIC = "";
    var docPDP = "";
    //F&i
    var housingPayment = 0;
    var carPayment = 0;
    var totalPaymentOfCredit = 0;
    var otherExpenses = 0;
        var totalMonthlyExpenses = 0;
        var finalAmountFinanced = 0;

     //TradeIn
        var TradeIn_One = null;
        var TradeIn_Two = null;
        var TradeIn_Total = 0;
        var TradeInValues = null;
        /**********     HUB     **********/
        var carsHub = $.connection.carsHub;
    //DMV
        var DMVInterval = 0;
        var DMVRequest=0;
        var DMVhref = "https://www.dmv.ca.gov/wasapp/FeeCalculatorWeb/newResidentForm.do";
        const frame = document.getElementById('DMVFrame');
        //Auxiliar for Fees and DMV
        var FeesArray = null;
        var DMVArray = null;
        let dateexp = "";
        var driverLicense = false;
        var insuranceCard = false;
        var driverLicense = false;
        var insuranceCard = false;
        var memberShip = false;
        var proofIncome = false;
        var proofResidence = false;
        var proofDownPayment = false;
        var proofTradeInValue = false;
        var tradeInCertificate = false;
    var TradeInReview = false;
        var other = false;
        var other_ = false;
        var driverLicenseCB = false;
        var insuranceCardCB = false;
        var memberShipCB = false;
        var proofIncomeCB = false;
        var proofResidenceCB = false;
        var proofDownPaymentCB = false;
        var proofTradeInValueCB = false;
        var otherCB = false;
        var archivesCoBuyer = '';
        var archivesCoBuyerclean = '';
        var FirstLoad = 0;
        var SalePrefixes = @Html.Raw(Json.Encode(ViewBag.Prefixes));
        var SaleConditions = @Html.Raw(Json.Encode(ViewBag.Conditions));
        var SalesXEmployee = @Html.Raw(Json.Encode(ViewBag.SalesXEmployee));
        var CarsForVins = @Html.Raw(Json.Encode(ViewBag.Cars));
        var Employee = @Html.Raw(Json.Encode(ViewBag.Employee));
        var CmaCount = @Html.Raw(Json.Encode(ViewBag.CmaCount));
        var PendCma = 0;
        var PendNot = 0;
    var PendNotStock = 0;
    var indexStockNumbers = 0;
    var stocks=@Html.Raw(Json.Encode(ViewBag.VehiclesAvaibles));
   var stockNumbersFromPndgReg = [];

    var CRMCustomerList = null;
    var CRMCustomerListIndex = 0;

        $(window).on("load", function () {

             /**
             * Contains a list of  activated employees in web site
             * */
            let employees = @Html.Raw(Json.Encode(ViewBag.employees));
            fillEmployees(employees)
            /**
            * This function fill the select input with the current employees
            * @@param employees is the list of all employees obtained of DB
            *
            */
            function fillEmployees(employees) {

                $("#EmployeesProgress").empty();
                $("#EmployeesProgress").append('<option value="">Select a Employee</option>')
                $("#EmployeesProgress").append('<option value="all">Select all Employees</option>')
                for (let i = 0; i < employees.length; i++) {
                    $("#EmployeesProgress").append('<option value="' + employees[i].UserId + '">' + employees[i].Name + ' ' + employees[i].LastName + '</option>')
                }
            }
        if (stocks)
            stockNumbersFromPndgReg= stocks.sort((a, b) =>{ return a - b });

        $.GetPendingNotifications(5);

             //inicializar arreglo de referencias
        for (i = 0; i < 12; i++) {
            referecenses_array[i] = new Array(false,"","","","","","","");
        }
        //Initializate StockNumber
        if ($('input[name="Vehicle.StockNumber"]').val() == "0") {
            $('input[name="Vehicle.StockNumber"]').val('')
        }

        //Sales Lot
        if ('@Model.StoreId' == 0) {
            $('select[name="StoreId"]').append('<option value="" selected>Select Sales Lot</option>');
        }
        //BUTTON SAVE/TRANSFER DOCUMENTS

            //ALERT TO CMA Per Salesperson
            getCMAPerSalesperson();
    });

    //Prevent send form pressing enter
    function stopRKey(evt) {
        var evt = (evt) ? evt : ((event) ? event : null);
        var node = (evt.target) ? evt.target : ((evt.srcElement) ? evt.srcElement : null);
        if ((evt.keyCode == 13) && (node.type == "text")) { return false; }
    }
    document.onkeypress = stopRKey;

        $(document).ready(function () {
            /**
           *load the change log information depending on the selected record
           * */
            $("#ChangeLogLoadButton").click(function () {
                if ($('#Vehicle_StockNumber').val() != "" || $('#Vehicle_StockNumber').val() != 0) {

                    $("#ChangeLogLoad").click();
                }
                else {
                    Swal('Enter a Stock Number, example 1901', '', 'info');
                }
            });
            $("#ChangeLogLoad").click(function () {
                changeLog();
            });

        $("#leftarrow").on('click', function () {
            checkPendingNot();
            if (PendNot == 1) {
                swal("You have pending notifications", "", "info");
            } else {
                previousNext("left");
            }

        });
        $("#rightarrow").on('click', function () {
            checkPendingNot();
            if (PendNot == 1) {
                swal("You have pending notifications", "", "info");
            } else {
                previousNext("right");
            }

        });

        $('#IconDMVa').click(function () {
            lastLicense =  $('input[name="DMVFeesModal.LicenseFee"]').val();
            lastRegTrans = $('input[name="DMVFeesModal.RegistrationTransfer"]').val();

            let vinfull = $("#Vehicle_VIN").val();
            let price = Number($("#SalePrice").val().replace(',', "")).toFixed(2);
            let zip = $('#Buyer2_Residence_0__Address_ZIPCode').val();
            if (zip == "") {
                if ($("#StoreId").val() == 7) {
                    zip = "95301"
                }
                else if ($("#StoreId").val == 5) {
                    zip = "95334"
                }
                else {
                    zip = "95358"
                }

            }
            if (vinfull != "")
                if (dateexp != "" && dateexp != null && dateexp != undefined)
                    getAutoDMVAprox(price, zip, dateexp);
                else{
                    getAutoDMVAprox(price, zip, "");
                }

            else
                Swal("Search a register!", "", "info");

        });
        $('button[name="LastCalculus"]').click(function ()
        {
            $('input[name="DMVFeesModal.LicenseFee"]').val(lastLicense);
            $('input[name="DMVFeesModal.RegistrationTransfer"]').val(lastRegTrans)
            $('input[name="DMVFeesModal.RegistrationTransfer"]').val(lastLicense+lastRegTrans)

        });

//El boton print2 esta comentado
        //$('#print2').click(function () {
        //    PrintTradeindis();
        //    printDoc();
        //});
//***********************************
        $('#form-t-11').removeClass("disabled");
        $('#form-t-11').addClass("done");
        $(".select2_demo_1").select2();
        //This event it's to send new notification
        $(document.body).on("click", 'button[name="save-send-notif"]', function () {
            id = $('input[name="Id_"]').val();
            note = $('textarea[name="SalesNotes2"]').val();
            financeDep = false;
            dmvDep = false;
            if ($('input[name="efficientCommunication.FinanceDep"]').prop('checked')) {
                financeDep = true;
            }
            if ($('input[name="efficientCommunication.DMVDep"]').prop('checked')) {
                dmvDep = true;
            }

            if (isNull(id)) {
                Swal("Search a loan", "", "info");
            }
            else if (isNull(note)) {
                Swal("Enter the Note!", "", "info");
            }
            else if (!financeDep && !dmvDep) {
                Swal("Select a department to send the notification!", "", "info");
            }
            else if (!isNull(id) && !isNull(note)) {
                $.Create(id, window.stock, 5, note, false, financeDep, dmvDep, $('input[name="__RequestVerificationToken"]').val());
            }
        });

        if (@Html.Raw(Json.Encode(ViewBag.SearchLoanById))) {
            SearchLoanById(@Html.Raw(Json.Encode(ViewBag.LoanId)));
        }

        //ReditectionOfInventory
        var stockNumber =  @Html.Raw(Json.Encode(ViewBag.Stock));
        if (stockNumber != null && stockNumber != "") {
            SearchLoan(stockNumber);
        }
        var IdBussiness =@Html.Raw(Json.Encode(ViewBag.IdBussiness));
        if (IdBussiness != null && IdBussiness != "" || IdBussiness > 0) {
            SearchBusiness(IdBussiness);
        }
        /*IFRAME*/
        $(window).resize(function () {
            SetHeightModal();
        });

        setTimeout(function () {
            $(".alert-dismissable").fadeOut();
        }, 4000);

        $("div#ModalDifferDown #fecha").datepicker({
            changeMonth: true,
            changeYear: true
        });

        /*INITIALITATION CALENDAR INPUTS*/
        $('#Data_B1 .input-group.date , #Data_C1 .input-group.date , #data_1 .input-group.date , #Data_B2 .input-group.date , #Data_C2 .input-group.date ,#Data_B3 .input-group.date , #Data_C3 .input-group.date , #Data_B4 .input-group.date , #Data_C4 .input-group.date , #Data_B5 .input-group.date , #Data_C5 .input-group.date').datepicker({
            todayBtn: "linked",
            keyboardNavigation: false,
            forceParse: false,
            calendarWeeks: true,
            autoclose: true,
            format: 'mm/dd/yyyy',
        }).datepicker("setDate", new Date());

        //CLASS TO DECIMALS
        $('.priceFormat').priceFormat({
            prefix: '',
            thousandsSeparator: ',',
            decimals: 2,
            min: 0,
            max: 18,
            step: 0.01
        });

        /*FINANCING STRUCTURE*/

        $('#data_1 .input-group.date').datepicker({
            todayBtn: "linked",
            keyboardNavigation: false,
            forceParse: false,
            calendarWeeks: true,
            autoclose: true,
            format: 'mm/dd',
        }).datepicker("setDate", new Date());

        SetFirstPaymentDueAndDaysDue($('input[name="SoldDate"]').val());

        //funcion para ajustar las fechas de los pagos al cambiar la fecha de venta
        $('input[name="SoldDate"]').change(function () {
            $('span[data-valmsg-for="SoldDate"]').empty();
            if (existDate($(this).val())) {
                //Get Current Date
                currentDate = new Date();
                currentDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());

                //Get Date Selected
                var parts = $(this).val().split('/');
                var dateSelected = new Date(parts[2], parts[0] - 1, parts[1]);
                DateSelected = (dateSelected.getMonth() + 1) + "/" + dateSelected.getDate() + "/" + dateSelected.getFullYear();

                if (dateSelected > currentDate) {
                    
                    swal("The Sold Date must not be greater than the current date.", "", "error");
                    if (currentDate.getMonth() < 10) {
                        if (currentDate.getDate() < 10) {
                            $('input[name="SoldDate"]').val("0" + (currentDate.getMonth() + 1) + "/0" + currentDate.getDate() + "/" + currentDate.getFullYear());
                            $('input[name="FirstPaymentDue"]').val("0" + (currentDate.getMonth() + 2) + "/0" + currentDate.getDate() + "/" + currentDate.getFullYear());
                        } else {
                            $('input[name="SoldDate"]').val("0" + (currentDate.getMonth() + 1) + "/" + currentDate.getDate() + "/" + currentDate.getFullYear());
                            $('input[name="FirstPaymentDue"]').val("0" + (currentDate.getMonth() + 2) + "/" + currentDate.getDate() + "/" + currentDate.getFullYear());
                        }
                    } else {
                        $('input[name="SoldDate"]').val((currentDate.getMonth() + 1) + "/" + currentDate.getDate() + "/" + currentDate.getFullYear());
                        $('input[name="FirstPaymentDue"]').val(currentDate.getMonth() + 2 + "/" + currentDate.getDate() + "/" + currentDate.getFullYear());
                    }


                    FirstPaymentFecha = moment($('input[name="FirstPaymentDue"]').val());
                    $('input[name="DaysDue"]').val(FirstPaymentFecha.diff(currentDate, 'days'));
                }
                else {
                    FechaFirst = new Date($('input[name="SoldDate"]').val());
                    $('input[name="FirstPaymentDue"]').val(FechaFirst.getMonth() + 2 + "/" + FechaFirst.getDate() + "/" + FechaFirst.getFullYear());
                    FirstPaymentFecha = moment($('input[name="FirstPAction ActiontiontionaymentDue"]').val());
                    $('input[name="DaysDue"]').val(FirstPaymentFecha.diff(FechaFirst, 'days'));
                }
            }
            else {
                if ((FechaFirst.getMonth() + 1) < 10) {
                    if (FechaFirst.getDate() < 10) {
                        $(this).val("0" + (FechaFirst.getMonth() + 1) + "/0" + FechaFirst.getDate() + "/" + FechaFirst.getFullYear());
                    } else {
                        $(this).val("0" + (FechaFirst.getMonth() + 1) + "/" + FechaFirst.getDate() + "/" + FechaFirst.getFullYear());
                    }

                } else {
                    $(this).val(FechaFirst.getMonth() + 1 + "/" + FechaFirst.getDate() + "/" + FechaFirst.getFullYear());
                }
            }

            CalculatorLoan();
        });

        //Location - Store
        $('select[name="StoreId"]').change(function () {
            storeId = $(this).val();
            console.log(storeId);
            if ($.isNumeric(storeId)) {
                ObtenerElTaxRate();
            }
        });

        //Modal Sales Lot
        $('#sales-lot-modal').click(function () {
            storeId = $('select[name="StoreId"]').val();
            if ($.isNumeric(storeId)) {
                $('div#ModalSalesLot').modal('show');
            }
        });
            $('a#Enter-button').on('click', function (e) {
                e.preventDefault();
                if (PendCma == 1) {
                    swal("You have " + Employee.CmaRev + " pending CMA´s ", "", "info");
                } else {
                    checkPendingNot();
                    if (PendNot == 1 && PendNotStock == 0) {
                        swal("You have pending notifications", "", "info");
                    } else {
                        CleanStepOne();
                        CleanStepTwo();
                        
                        CleanStepFour();

                        window.stock = $('input[name="Vehicle.StockNumber"]').val();

                        if ($.isNumeric(window.stock)) {
                            if (window.stock > 0) {
                                SearchLoan(parseInt(window.stock));
                            }
                            else {
                                $('span.i-fa').append("<i class='fas fa-times-circle'></i>");
                            }
                        }
                        else {
                            $('span.i-fa').append("<i class='fas fa-times-circle'></i>");
                        
                            Swal('Enter Stock Or VIN', '', 'info');
                        }
                    }
                }
            });
        // Search StockNumber
        $('input[name="Vehicle.StockNumber"]').keyup(function (e) {
            if (e.keyCode === 13) {
                if (PendCma == 1) {
                    swal("You have " + Employee.CmaRev + " pending CMA´s ", "", "info");
                }else {
                    checkPendingNot();
                    if (PendNot == 1 && PendNotStock == 0) {
                        swal("You have pending notifications", "", "info");
                    } else {
                        CleanStepOne();
                        CleanStepTwo();
                        
                        CleanStepFour();

                        window.stock = $(this).val();

                        if ($.isNumeric(window.stock)) {
                            if (window.stock > 0) {
                                SearchLoan(parseInt(window.stock));
                                $("#gallery").prop("href", "/VehicleGallery?stockNumber=" + window.stock);
                            }
                            else {
                                $('span.i-fa').append("<i class='fas fa-times-circle'></i>");
                            }
                        }
                        else {
                            $('span.i-fa').append("<i class='fas fa-times-circle'></i>");
                            $('span[data-valmsg-for="Vehicle.StockNumber"]').text('Enter only numbers.');
                        }
                    }
                }

            }

        });

        function checkPendingNot() {
            var ntif = $('p#notifications-pending').text();
            var stock = $('input[name="Vehicle.StockNumber"]').val();
            PendNot = 0;
            PendNotStock = 0;
            if (SalesXEmployee != 0) {
                $.each(SalesXEmployee, function (i, item) {
                    if (ntif.includes(item.StockNumber)) {
                        PendNot = 1;
                    }
                    if (ntif.includes(stock)) {
                        $.each(SalesXEmployee, function (i, item) {
                            if (stock == item.StockNumber) {
                                PendNotStock = 1;
                            }
                        });
                    }
                });
            } else{
            }
            }

            $("#SalePrice").blur(function () {
                var minPrice = $('input[name="SalesPricesModal.MinPrice"]').val();
                if (parseFloat(setSplit($(this).val())) < parseFloat(setSplit(minPrice))) {
                    var mensaje = "The price you have entered is lower the minimum sales price allowed for this vehicle. \n The price of the vehicle will change to  " + minPrice;
                    $('div#MessageSP').empty();
                    $('#ModalMsgAlertSP').modal('show');

                    $('div#MessageSP').append('<a>' + mensaje +'</a>')
                }
            });

            $('#OkSp').click(function (e) {
                var minPrice = $('input[name="SalesPricesModal.MinPrice"]').val();

                $('input[name="SalePrice"]').val(" ");
                $('input[name="SalePrice"]').val(minPrice).change();
                SetSubTotal();
            });

        $('input[name="SearchVIN"]').keyup(function (e) {
            if (e.keyCode === 13) {
                if (PendCma == 1) {
                    swal("You have " + Employee.CmaRev + " pending CMA´s ", "", "info");
                } else {
                    window.stock = $(this).val();
                    checkPendingNotVIN();
                    if (PendNot == 1 && PendNotStock == 0) {
                        swal("You have pending notifications", "", "info");
                    } else {
                        CleanStepOne();
                        CleanStepTwo();
                        
                        CleanStepFour();



                        if ($.isNumeric(window.stock)) {
                            if (window.stock > 0) {
                                //SearchLoanByVin(window.stock);
                                SearchLoanListByVin(window.stock);
                            }
                            else {
                                $('span.i-fa').append("<i class='fas fa-times-circle'></i>");
                            }
                        }
                        else {
                            $('span.i-fa').append("<i class='fas fa-times-circle'></i>");
                            $('span[data-valmsg-for="Vehicle.StockNumber"]').text('Enter only numbers.');
                        }
                    }
                }

            }

        });

        function checkPendingNotVIN() {
            var ntif = $('p#notifications-pending').text();
            var vin = window.stock;
            var stock = "";
            $.each(CarsForVins, function (i, item) {
                if (item.VIN != null) {
                    if (item.VIN.includes(vin)) {
                        stock = item.StockNumber;
                    }
                } else {
                }
            });

            PendNot = 0;
            PendNotStock = 0;
            if (SalesXEmployee != 0 && stock != "") {
                $.each(SalesXEmployee, function (i, item) {
                    if (ntif.includes(item.StockNumber)) {
                        PendNot = 1;
                    }
                    if (ntif.includes(stock)) {
                        $.each(SalesXEmployee, function (i, item) {
                            if (stock == item.StockNumber) {
                                PendNotStock = 1;
                            }
                        });
                    }
                });
            } else {
            }
        }

        //funcion para verificar si timeTags tiene un valor o sera nulo
        $('input[name="SelectTimeTags"]').change(function () {
            if ($(this).is(':checked')) {
                $('input[name="TimeTags"]').click();
                $('input[name="TimeTags"]').val('NONE');
                $('input[name="TimeTags"]').click();
                $('input[name="TimeTags"]').prop('disabled', true);
            }
            else {
                $('input[name="TimeTags"]').val('');
                $('input[name="TimeTags"]').prop('disabled', false);
            }
        });

        //MilesAtSale
        $('input[name=MilesAtSale]').keyup(function (event) {
            $(this).val(ReplaceNumberWithCommasRemoveDecimals($(this).val().toString()));
        });

        // Sale Price Event Keyup
        $('input[name="SalePrice"]').bind("keyup", function () {
            SetSubTotal();
            window.salePrice = setSplit($(this).val());
            $('span[data-valmsg-for="SalePrice"]').empty();
            ObtenerElTaxRate();
            $.fn.DontVerifySalePrice();

        });

        $('input[name="SalePrice"]').bind('keypress ', function (e) {
            var code = (e.keyCode ? e.keyCode : e.which);
            if (code == 13) {
                $.fn.VerifySalePrice();
                ObtenerElTaxRate();
            }
        });


        // Inutil funcion para verificar el codigo postal al parecer
        $('input[name="Buyer2.Residence[0].Address.ZIPCode"]').bind("keyup,keypress", function () {
        });


        //actualizar  el subtotal al modificar SalesTax
        $('input[name="SalesTax"]').keyup(function () {
            SetSubTotal();
        });

        $('div.steps ul[role="tablist"]').append("<li role='' aria-disabled='' style='width: 51rem;'><h1  class='center-lp tw-bold-lp' style='color: black!important; margin-top: 0; ' aria-controls=''>Sales Dep </h1></li>");

           
            $('div.steps').append("<div > <a href='/Sales/NewCreate' class='nav-link a-white-lp button-lp button-lp--secondary button-lp--md button-lp__container py-lp-075' id='Reseat' name='Reseat' style=' float: right;  height: 35px !important'><i class='fas fa-redo-alt tc-white-lp' aria-hidden='true'></i></a></div>");
            $('div.steps').append("<div > <a  data-toggle='modal' data-target='#ModalPrint' id='printSales' class='nav-link a-white-lp button-lp button-lp--secondary button-lp--md button-lp__container py-lp-075' id='' name='' style='  float: right;  height: 35px !important;padding:2px!important'><img src ='/Elements/icons/printicono.jpg' class='' style ='height:30px;'> </a></div>");



            $('div.steps').append("<div > <a  id='search-vehicle' class='nav-link a-white-lp button-lp button-lp--success button-lp--md button-lp__container py-lp-075'  style=' float: right;  height: 35px !important'><i class='tc-white-lp fas fa-search' aria-hidden='true'></i></a></div>");
            $('div.steps').append("<div > <a class='nav-link button-lp button-lp--success button-lp--md button-lp__container py-lp-075' id='SaveSale1' name='SaveSale1' style='background:#009688 !important; float:  right;height: 35px !important;padding: 10px 25px !important;'><p class=''>Save</p></a></div>");


        //accesories button events
        $('button[name="ResetAccesories"]').on('click', function () {
            ResetAccesories();
        });


        $('button[name="CancelAccesories"]').on('click', function () {
            //CancelAccesories();
            Accesorie1val = setSplit($('input[name="Accesories[0].AmountAux"]').val());
            Accesorie2val = setSplit($('input[name="Accesories[1].AmountAux"]').val());
            Accesorie3val = setSplit($('input[name="Accesories[2].AmountAux"]').val());

            AccesorieCont1val = $('input[name="Accesories[0].ContractNo"]').val().toUpperCase();
            AccesorieCont2val = $('input[name="Accesories[1].ContractNo"]').val().toUpperCase();
            AccesorieCont3val = $('input[name="Accesories[2].ContractNo"]').val().toUpperCase();


            if ((Accesorie1val == 0 && AccesorieCont1val == "" || Accesorie1val == 0 && AccesorieCont1val == 0) && (Accesorie2val == 0 && AccesorieCont2val == "" || Accesorie2val == 0 && AccesorieCont2val == 0) &&
                (Accesorie3val == 0 && AccesorieCont3val == "" || Accesorie3val == 0 && AccesorieCont3val == 0)) {
                SaveAccesories();
                $('#ModalAccesories').modal('hide');
            } else {
                SaveAccesories();
            }

        });


        $('button[name="BtnCancelGapInsurance"]').on('click', function () {
            var Gapamountval = parseFloat(setSplit($('input[name="GapIncurance.Amount"]').val()));
            var GapContractval = $('input[name="GapInsurance_ContractNo"]').val().toUpperCase();
            SaveGapInfo();
        });

        function SaveGapInfo(){
            var gapVal = true;
            var gapAlert = "<strong>-</strong>Complete required fields.<br>";
            var bankLobel = false;
            var Gapamount = parseFloat(setSplit($('input[name="GapIncurance.Amount"]').val()));
            var GapContract = $('input[name="GapInsurance_ContractNo"]').val().toUpperCase();
            var GapCompany = $('select[name="GapInsurance_Company"]').val();
            var GapProPlan = $('select[name="Protection_Plan"]').val();

            var substring = "";
            var substring2 = "";
            var prefixban = 0;
            substring = GapContract.substring(0, 3);
            substring2 = GapContract.substring(3, GapContract.length);

            var gapp = 0;
            $.each(SalePrefixes, function (i, item) {
                if (item.Type == "Gap Incurance") {
                    gapp++;
                }
            });



            if (isNull(Gapamount) && isNull(GapContract)) {

            } else {
                if ($("input[name='GapRadio_Lobel']").is(':checked')) {
                    bankLobel = true;
                }

                if (Gapamount > 0 && bankLobel == false && GapContract == "") {
                    gapVal = false;
                    $('input[name="GapInsurance_ContractNo"]').addClass('validate-error-field');
                } else if (Gapamount > 0 && GapContract != "") {
                    if (GapContract.length < SaleConditions.GapCNMin || GapContract.length > SaleConditions.GapCNMax) {
                        gapAlert = "<strong>-</strong>Invalid contract No.<br>";
                        gapVal = false;
                        $('input[name="GapInsurance_ContractNo"]').addClass('validate-error-field');
                    }


                    $.each(SalePrefixes, function (i, item) {
                        if (item.Type == "Gap Incurance") {
                            if (substring == item.Prefix) {
                                prefixban = 1;
                            }
                        }
                    });

                    if (prefixban == 0 && gapp > 0) {
                        gapAlert = "<strong>-</strong>Invalid contract No.<br>";
                        gapVal = false;
                        $('input[name="GapInsurance_ContractNo"]').addClass('validate-error-field');
                    }

                }

                if (Gapamount == 0 && GapContract != 0) {
                    gapAlert = "<strong>-</strong>Complete required fields.<br>";
                    gapVal = false;
                    $('input[name="GapIncurance.Amount"]').addClass('validate-error-field');
                } else {
                }

                if (SaleConditions.Gap_PaidTo == 1) {
                    if (isNull(GapCompany)) {
                        serviceValid = false;
                        $('select[name="GapInsurance_Company"]').addClass('validate-error-field');
                    }
                }

                if (SaleConditions.Gap_ProtPlan == 1) {
                    if (isNull(GapProPlan)) {
                        serviceValid = false;
                        $('select[name="Protection_Plan"]').addClass('validate-error-field');
                    }
                }

            }


            if (gapVal == true) {
                SaveGapInsurance();
                $('#ModalDebtAgreement').modal('hide');
            } else {
                swal(gapAlert, "", "info");
            }
        }

            $("input[name='GapRadio_Lobel']").on('click', function () {
                if (gapRadioLobel == 0) {
                    gapRadioLobel = 1;
                    $('input[name="GapInsurance_ContractNo"]').val("");
                    $('input[name="GapInsurance_ContractNo"]').prop('disabled', true);
                }else if (gapRadioLobel == 1) {
                    gapRadioLobel = 0;
                    $("input[name='GapRadio_Lobel']").prop('checked', false);
                    $('input[name="GapInsurance_ContractNo"]').prop('disabled', false);
                }
            });

            $('button[name="ResetGap"]').on('click', function () {
                ResetGap();
            });

            function ResetGap() {
                $('input[name="GapIncurance.Amount"],input[name="GapInsurance_ContractNo"]').val('0.00');
                window.gapInsurance = 0;
                SetSubTotal();

            }
        //--------------------
            //Dividir numeros por comas
        $('input[name="DifferDownPayment"],' +
            'input[name="FinalPayment"],input[name="FinanceCharges"],' +
            'input[name = "CancellationOption"], ' +
            'input[name = "ServicContract.Price"],input[name = "ServicContract.Miles"],input[name = "MilesTrade"]').keyup(function () {
                value = $(this).val();
                $(this).val(ReplaceNumberWithCommasRemoveDecimals(value.toString()));
            });


            //service contract key events
        $('input[name="ServiceContact"]').keyup(function () {
            $(this).val(ReplaceNumberWithCommasRemoveDecimals($(this).val().toString()));
            
        });


            // differ down y amount financed key events
        $('input[name="AmountFinanced"]').change(function () {
            $(this).val(formatearNumero(parseFloat($(this).val()).toFixed(2)));
        });

        $('input[name="DifferDownPayment"]').keyup(function () {
            $(this).val(ReplaceNumberWithCommasRemoveDecimals($(this).val().toString()));
        });
        $('input[name="DifferDownPayment"]').change(function () {
            
            $(this).val(ReplaceNumberWithCommasRemoveDecimals($(this).val().toString()));
        });


        //Gap insurance
        $('input[name="GapInsurance"]').keyup(function () {
            gapInsurance = setSplit($(this).val());
            
            SetSubTotal();
        });

        // Down Payment
        $('input[name="DownPaymentPRCO"]').keyup(function () {
            val_ = setSplit($(this).val());
            $(this).val(formatearNumero(parseFloat(val_).toFixed(2)));
            SetTotalDown();
            if (!IsSaleFinanced()) {
                $('input[name="Term"]').val('1');
                $("input[name='APR'],input[name='Payment'],input[name='FinalPayment'],input[name='TotalPayment'],input[name='FinanceCharges']").val('0.00');
                $("input[name='TotalSalesPrice']").val(formatearNumero(parseFloat(val_).toFixed(2)));
                $("select[name='BankId']").val("31");
            }
        });

            //funcion para seleccionar el banco
         $('select[name="BankId"]').change(function () {
             if (!IsSaleFinanced()) {
               //  $("select[name='BankId']").val("31");Lupitas Group
             } else {

             }
         });
            $('li#FundL').click(function () {
                var d = $('input[name="DownPaymentPRCO"]').val();
                $('input[name="ReceivesNotebook[0].PRCO"]').val(d);
            });
        //Button Received PRCO/ Notebook #
        $('#iconPRCO').click(function () {
            if ($('input[name="DPReceivedPRCONo"]').val() == "" && $('input[name="DPReceivedNotebokNo"]').val() == "") {
                swal("You must fill the already generated fields before adding another", "info");
            } else {
                $('div#ModalPRCO').modal('show');
            }
        });

        $('button[name="BtnSavePRCO"]').click(function () {
            $('div#ModalPRCO').modal('hide');
        });


            //Smart funding key events
         $('button#btn-smartfunding').click(function () {
             $('div#smartFunding_').modal('show');
         });

        $('button#btn-smartfunding_').click(function () {
             $('div#smartFunding_').modal('show');
         });

        $('button#printSales').click(function () {
            var name = $('input[name="Buyer2.LastName"]').val() + ", " + $('input[name="Buyer2.Name"]').val();
            var stock = $('input[name="Vehicle.StockNumber"]').val();
            var year = $('input[name="Vehicle.Year"]').val();
            var make = $('input[name="Vehicle.Make"]').val();
            var model = $('input[name="Vehicle.Model"]').val();
            var city = $('input[name="Buyer2.Residence[0].Address.City"]').val();
            $('#labelinf').text(name + " " + year + " " + make + " " + model + "  stock# " + stock + " " + city);
        });
        //DAYS DUE THIRD COLUMN
        $('input[name="DaysDue"]').keyup(function () {
            if ($.isNumeric($(this).val())) {
                var vaDaysDue = $(this).val();
                FechaFirst = new Date($('input[name="SoldDate"]').val());
                console.log(FechaFirst);
                console.log(vaDaysDue);
                FechaFirst.setDate(FechaFirst.getDate() + parseInt(vaDaysDue));
                console.log(FechaFirst);
                if ((FechaFirst.getMonth() + 1) < 10) {
                    if (FechaFirst.getDate() < 10) {
                        $('input[name="FirstPaymentDue"]').val("0" + (FechaFirst.getMonth() + 1) + "/0" + FechaFirst.getDate() + "/" + FechaFirst.getFullYear());
                    } else {
                        $('input[name="FirstPaymentDue"]').val("0" + (FechaFirst.getMonth() + 1) + "/" + FechaFirst.getDate() + "/" + FechaFirst.getFullYear());
                    }

                } else {
                    $('input[name="FirstPaymentDue"]').val(FechaFirst.getMonth() + 1 + "/" + FechaFirst.getDate() + "/" + FechaFirst.getFullYear());
                }

            }

            CalculatorLoan();
        });

        //FIRSTPAYMENT
        $('input[name="FirstPaymentDue"]').change(function () {
            FechaFirst = new Date($('input[name="SoldDate"]').val());
            var FirstPaymentFecha = moment($('input[name="FirstPaymentDue"]').val());
            $('input[name="DaysDue"]').val(FirstPaymentFecha.diff(FechaFirst, 'days'));
            CalculatorLoan();
        });

        $('input[name="APR"], input[name="Term"]').keyup(function () {
            $(this).val(ReplaceNumberWithCommasRemoveDecimals($(this).val().toString()));
            CalculatorLoan();
            /*PTI();*/
        });

        /*APPEND TO MODAL SALES PRICE*/
        $('#IconSalesPrice').click(function () {
            $('div#ModalSalesPrice').modal('show');
        });
        /*APPEND TO MODAL SALES PRICE*/
         $('button[name="CancelModalLicenseNo"]').click(function () {
             $('div#ModalLicenseNo').modal('hide');
        });
        /*APPEND TO MODAL ACCESORIES*/
         $('#IconAccesories').click(function () {
             window.auxAmountAccesories = setSplit($('input[name="AccesoriesModel.Amount"]').val());
             $('div#ModalAccesories').modal('show');
         });
        let LoadRecents = 0;
        /*OPEN TO SEARCH MODAL*/
        $('#search-vehicle').click(function () {
            if (PendCma == 1) {
                swal("You have " + Employee.CmaRev + " pending CMA´s ", "", "info");
            } else {
                checkPendingNotINV();
                if (PendNot == 1) {
                    swal("You have pending notifications", "", "info");
                } else {
                    $('select[name="OptionFilter"]').val("CustomerName").change();
                    if (LoadRecents == 0) {
                        SearchVehiclebyEmployeeId("@User.Identity.GetUserId()");
                        $("#titleSearch").text("Latest Modified Deals");
                        LoadRecents = 1;
                    }
                    $('div#ModalSearchVehicle').modal('show');
                }
            }
        });


        function checkPendingNotINV() {
            var ntif = $('p#notifications-pending').text();
            PendNot = 0;
            if (SalesXEmployee != 0) {
                $.each(SalesXEmployee, function (i, item) {
                    if (ntif.includes(item.StockNumber)) {
                        PendNot = 1;
                    }
                });
            } else {
            }
        }



        //OPEN MODAL SALES TAX
         $('#IconSalesTax').click(function () {
             $("#TaxRate_Fees").val(window.TaxRate_Fees);
             $('div#ModalSalesTax').modal('show');
         });


         //Alerts messages new modal
         var iframe = $('#ModalMsgAlert');
         $('#btnCloseAlert', iframe.contents()).click(function () {
             $('#ModalMsgAlert').modal('hide');
         });


            $('#iframe_Lupitas').on("load", function () {
                $('#iframe_Lupitas').children("#navigation").css("display", "none");
                var iframe = $('#iframe_Lupitas');
                $('#navigation', iframe.contents()).css("display", "none");
                $('#navdiv', iframe.contents()).css("display", "none");
                $('#titlediv', iframe.contents()).css("cssText", "margin-top: 0 !important;");
                $('#contentdiv', iframe.contents()).css("cssText", "margin-top: 0 !important;");
                $('#ContenedorLeaderBoard', iframe.contents()).css("cssText", "margin-top: 0 !important;");
                $('#Close_Repair_req_Button', iframe.contents()).css("display", "none");
                $('#MarketingWrapper', iframe.contents()).css("cssText", "margin-top: 0 !important; padding-top:0;");
                $('#AddCarBtn', iframe.contents()).css("display", "none");
                $('#EditCarBtn', iframe.contents()).css("display", "none");
                $('#CustomerService', iframe.contents()).css("display", "none");
                $('#ReqCarBtn', iframe.contents()).css("cssText", "margin-left: 25px !important;");
                $('#CerrarPayment', iframe.contents()).css("display", "none");
            });


        var invocation = new XMLHttpRequest();
        var url = 'https://www.dmv.ca.gov/wasapp/FeeCalculatorWeb';

        function callOtherDomain() {
            if(invocation) {
            }
        }

            //Cargar frame DMV
         $('#DMVFrame').on("load", function () {

             if (DMVhref === "https://www.dmv.ca.gov/wasapp/FeeCalculatorWeb/newResidentForm.do" && DMVRequest==1) {
                 DMVRequest = 0;
                 $('#FeeRequestForm').submit();

                 const iframe = document.getElementById("DMVFrame");
                 callOtherDomain()
                 iframe.contentWindow.postMessage("Hello from iframe", '*');

             } else if(DMVhref!="https://www.dmv.ca.gov/portal/vehicle-registration/registration-fees/vehicle-registration-fee-calculator/calculate-my-fees/"){
                 swal.close();
             }
         });



         $('iframe table tr').click(function () {
              alert("Clicked");
              //your code
            });
         function destroyClickedElement(event)
            {
            // remove the link from the DOM
                document.body.removeChild(event.target);
            }
        // Funciones sin usar de dmv
        function DMVFrame() {
                $("iframe").attr('src', "https://www.dmv.ca.gov");
                $("#myModaliFrane").modal('show');
            }

         function SentDMV() {
             var data = new FormData($('#FeeRequestForm')[0]);
                        $.ajax({
                            type: $('#form').attr('method'),
                            url: $('#form').attr('action'),
                            data:  $('#FeeRequestForm').serialize(),
                            processData: false,
                            contentType: false,
                            success: function (response) {
                                console.log(response);
                                console.log(data + "\n" + $('#FeeRequestForm').serialize());
                         alert("The server says: " + response);
                     }
                 });
         }

        //OPEN MODAL TRADE IN
        $('#IconTradeIn').click(function () {

            $('div#ModalTradeIn').modal('show');
        });
        //Reseat-seach
            $('#Reseat-seach').click(function () {
            $("#titleSearch").text("Search Results");
            $('select[name="OptionFilter"]').val("Model").change();
            $("#Branchets").val(0);
            $("#CarStyle").val(0);
            $('tbody#search-vehicles-result').empty();
            $('tbody#search-name-result').empty();
            $('tbody#search-vehicles-result ').append('<tr id="0"><td colspan="7" class="text-center fontl-bold">NO RESULT FOUND</td></tr > ');
            $('tbody#search-name-result ').append('<tr id="0"><td colspan="10" class="text-center fontl-bold">NO RESULT FOUND</td></tr > ');
        });

        //OPEN MODAL FEES
        changeSelectedCancellationOption = false;
        $('#IconFees').click(function () {
            changeSelectedCancellationOption = false;
            $('div#ModalFees').modal('show');
        });
        //OPEN MODAL SERVICE CONTRACT
        $('#IconServiceCont').click(function () {
            $('div#ModalServiceCont').modal('show');
        });

        //OPEN DIFFER DOWN PAYMENT
        $('#IconDifferDown').click(function () {
            $('div#ModalDifferDown').modal('show');
        });
        //OPEN BUYER PRIMARY PHONE
        $('#BuyerPrimaryPhoneModal').click(function () {
            $('div#ModalSalesPrimaryPhone').modal('show');
        });
        //OPEN CO-BUYER PRIMARY PHONE
        $('#CoPrimaryPhoneModal').click(function () {
            $('div#ModalSalesPrimaryPhone').modal('show');
        });
        //OPEN BUYER SSN
        $('#BuyerSSNModal').click(function () {
            $('div#ModalSSN').modal('show');
        });
        //OPEN CO-BUYER SSN
        $('#CoSSNModal').click(function () {
            $('div#ModalSSN').modal('show');
        });
        //OPEN BUYER DRIVERS LIC / ID
        $('#BuyerDriversLicModal').click(function () {
            $('div#ModalDriversID').modal('show');
        });
        //OPEN CO-BUYER DRIVERS LIC / ID
        $('#CoDriversLicModal').click(function () {
            $('div#ModalDriversID').modal('show');
        });
        //OPEN BUYER REFERRED BY
        $('#BuyerReferredByModal').click(function () {
            $('div#ModalReferredBy').modal('show');
        });
        //OPEN CO-BUYER REFERRED BY
        $('#CoReferredByModal').click(function () {
            $('div#ModalReferredBy').modal('show');
        });
        //BUTTON SAVE MODAL PRIMARY PHONE
        $('div#ModalSalesPrimaryPhone input[name="SecondaryPhone"]').keyup(function () {
            if (!$(this).val() == "" && $('input[name="OtherPhone"]').val() == "") {
                $('div#ModalSalesPrimaryPhone button[name="Save"]').prop("disabled", false);
            } else {
                $('div#ModalSalesPrimaryPhone button[name="Save"]').prop("disabled", true);
            }

        });

        $('div#ModalSalesPrimaryPhone input[name="OtherPhone"]').change(function () {
            if (!$(this).val() == "") {
                $('div#ModalSalesPrimaryPhone button[name="Save"]').prop("disabled", false);
            } else {
                $('div#ModalSalesPrimaryPhone button[name="Save"]').prop("disabled", true);
            }

        });

        //OPEN-CLOSE SALES NOTES
        banSalesNotes = false;
        $('button[name="BtnSalesNotes"]').on('click', function () {
            if (!banSalesNotes) {
                banSalesNotes = true;
                $('#ViewSalesNotes').removeClass('hidden');
                $(this).html("Sales Notes");
            } else {
                banSalesNotes = false;
                $('#ViewSalesNotes').addClass('hidden');
                $(this).html("Sales Notes");
            }

        });
        //Sales notes tabs
            $('#GNtab').on('click', function () {
                $("#GNbody").removeClass("hidden");
                $("#GNbt1").removeClass("hidden");
                $("#GNbt2").removeClass("hidden");

                $("#INbody").addClass("hidden");
                $("#INbt").addClass("hidden");
            });

            $('#INtab').on('click', function () {
                $("#INbody").removeClass("hidden");
                $("#INbt").removeClass("hidden");
                $("#GNbody").addClass("hidden");
                $("#GNbt1").addClass("hidden");
                $("#GNbt2").addClass("hidden");
            });


        //OPEN-CLOSE DUE BILL
        banDueBill = false;
        $('button[name="BtnDueBill"]').click(function () {
            if (!banDueBill) {
                banDueBill = true;
                $('#ViewDueBill').removeClass('hidden');
                $(this).html("Due Bill");
            } else {
                banDueBill = false;
                $('#ViewDueBill').addClass('hidden');
                $(this).html("Due Bill");
            }
        });

        //BTN CANCEL MODAL SWEETALERT
        $('div#ModalSweetAlert button[name="Cancel"]').on('click', function () {
            $('div#ModalSweetAlert').modal('hide');
        });

         $('input[name="Buyer2.Payment"]').on('keyup', function () {
             $('input[name="BuyerPayment"]').val($(this).val());
         });

        $(function () {
            //Initialization connection
            $.connection.hub.start().done(function () {
                console.log('Connected HUB');
            });

            //Restart Conection
            $.connection.hub.disconnected(function () {
                setTimeout(function () {
                    $.connection.hub.start();
                    console.log("Hub - restart connection");
                }, 5000);
            });


            $('a#QDocDL').click(function () {
                $(this).attr('href', "javascript:popUp('/Sales/DescargarArchivo2/' + docDL)");
            });
            $('a#QDocIC').click(function () {
                $(this).attr('href', "javascript:popUp('/Sales/DescargarArchivo2/' + docIC)");
            });
            $('a#QDocPDP').click(function () {
                $(this).attr('href', "javascript:popUp('/Sales/DescargarArchivo2/' + docPDP)");
            });

            //Funcion para guardar el form

            function savingForm(isTrip, e) {
                if (isTrip) {
                    $('input[name="Status"]').val("1");

                }
                else {
                    $('input[name="Status"]').val("0");
                }

                swal({
                    title: 'Saving Data',
                    text: '',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    onOpen: () => {
                        swal.showLoading();
                        e.preventDefault();
                        var data = new FormData(this.form);
                        $.ajax({
                            type: $('#form').attr('method'),
                            url: $('#form').attr('action'),
                            data: data,
                            processData: false,
                            contentType: false,
                            success: function (data) {
                                if (data.success) {
                                    if (isTrip) {
                                        carsHub.server.modifyPendingDocumentList($('input[name="CarId"]').val());
                                    }
                                    SaveChangeLog();
                                    swal.close();

                                    Swal("Saved.", "", "success");
                                    window.location.reload();
                                } else {
                                    swal.close();
                                    swal(data.message, "", "error");
                                }
                            },
                            error: function (response) {
                                Swal("Fail send information...", "", "error");
                            }
                        });
                    }
                });

                if (isTrip) {
                    $('label[name="StatusSave"]').text('Pending Sale');
                }
                else {
                    $('label[name="StatusSave"]').text('Pending Sale');
                }

                    $('div#ModalSweetAlert').modal('hide');
                
            }

            $('div#ModalSweetAlert button[name="Trip"]').on('click', function (e) {
                var btntext = $('#ModalSweetAlert button[name="Trip"]').text();
                window.finacedBy = $('input[name="ServiceContractModal.FinancedBy"]:checked').val();
                var SubTotal = $('input[name="SubTotal"]').val();
                var TDown = $('input[name="DownPaymentPRCO"]').val();
                var SC = $('input[name="ServiceContract"]').val();
                var auxalert1 = false;
                var auxalert2 = false;

                if ((parseFloat(setSplit(TDown)) > parseFloat(setSplit(SubTotal)))) {
                    auxalert1 = true;
                }

                if (!isNull(SC)) {
                    if ((parseFloat(setSplit(TDown)) > parseFloat(setSplit(SubTotal))) && (window.finacedBy.includes("CASH") || window.finacedBy.includes("PAYLINK"))) {
                        auxalert2 = true;
                    }
                }

                if (auxalert1 == true || auxalert2 == true) {
                    $('#ModalMsgAlertSD').modal('show');
                    if (auxalert1 == true) {
                        $('#letraA').addClass('hidden');
                        $('#letraB').addClass('hidden');
                    }

                    if (auxalert2 == true) {
                        $('#letraA').removeClass('hidden');
                        $('#letraB').removeClass('hidden');
                    }

                } else {
                    if (Save(true)) {
                        if (btntext == "Trip") {
                            $('input[name="Formistrip"]').val("1");
                        }
                        savingForm(true, e);
                    }
                    else {
                        $('div#ModalSweetAlert').modal('hide');
                    }
                }
            });

            $('div#ModalSweetAlert button[name="Pending"]').on('click', function (e) {
                window.finacedBy = $('input[name="ServiceContractModal.FinancedBy"]:checked').val();
                var SubTotal = $('input[name="SubTotal"]').val();
                var TDown = $('input[name="DownPaymentPRCO"]').val();
                var SC = $('input[name="ServiceContract"]').val();
                var auxalert1 = false;
                var auxalert2 = false;

                if ((parseFloat(setSplit(TDown)) > parseFloat(setSplit(SubTotal)))) {
                    auxalert1 = true;
                }

                if (!isNull(SC)) {
                    if ((parseFloat(setSplit(TDown)) > parseFloat(setSplit(SubTotal))) && (window.finacedBy.includes("CASH") || window.finacedBy.includes("PAYLINK"))) {
                        auxalert2 = true;
                    }
                }

                if (auxalert1 == true || auxalert2 == true) {
                    $('#ModalMsgAlertSD').modal('show');
                    if (auxalert1 == true) {
                        $('#letraA').addClass('hidden');
                        $('#letraB').addClass('hidden');
                    }

                    if (auxalert2 == true) {
                        $('#letraA').removeClass('hidden');
                        $('#letraB').removeClass('hidden');
                    }

                } else {
                    if (Save(false)) {
                        savingForm(false, e);
                    }
                    else {
                        $('div#ModalSweetAlert').modal('hide');
                    }
                }
                });

            $('div#ModalSweetAlert button[name="Cancel"]').on('click', function () {
                $('div#ModalSweetAlert').modal('hide');
            });
        });


        //Buyers reidence data key events
        $('input[name="Buyer2.Residence[0].Years"]').keyup(function () {
            years = $(this).val();
            months = $('input[name="Buyer2.Residence[0].Months"]').val();
            time = GetTime(years, months);
            
            communityYears = parseInt(time);
        });

        $('input[name="Buyer2.Residence[0].Months"]').keyup(function () {
            years = $('input[name="Buyer2.Residence[0].Years"]').val();
            months = $(this).val();
            time = GetTime(years, months);
            
            communityYears = parseInt(time);
        });

        $('input[name="Buyer2.Job[0].Years"]').keyup(function () {
            years = $(this).val();
            months = $('input[name="Buyer2.Job[0].Months"]').val();
            time = GetTime(years, months);
            
            SameLineWork = parseInt(time);
        });

        $('input[name="Buyer2.Job[0].Months"]').keyup(function () {
            years = $('input[name="Buyer2.Job[0].Years"]').val();
            months = $('input[name="Buyer2.Job[0].Months"]').val();
            time = GetTime(years, months);
            
            SameLineWork = parseInt(time);
        });


        $('input[name="Prev1BuyerPayment"],input[name="Prev2BuyerPayment"],input[name="Co_Buyer.Payment"],input[name="Prev1CoBuyerPayment"],input[name="Prev2CoBuyerPayment"]').keyup(function () {
            $(this).val(ReplaceNumberWithCommasRemoveDecimals($(this).val().toString()));
        });

        $('input[name="Buyer2.Payment"]').keyup(function () {
            $(this).val(ReplaceNumberWithCommasRemoveDecimals($(this).val().toString()));
            
        });

        $('input[name="Buyer2.Job[0].MonthlyIncome"],input[name="Prev1BuyerMonthlyIncome"],input[name="Prev2BuyerMonthlyIncome"], input[name="CoBuyerMonthlyIncome"],input[name="Prev1CoBuyerMonthlyIncome"],input[name="Prev2CoBuyerMonthlyIncome"]').keyup(function () {
            $(this).val(ReplaceNumberWithCommasRemoveDecimals($(this).val().toString()));
        });

        //--------------------------------------------------------------------------------
        //FEES
        $('input[name="FeesModal.DocFee"],input[name="FeesModal.SmogCertificationFee"],input[name="FeesModal.StateEmissionExempti"],' +
            'input[name="FeesModal.CancellationOption"],input[name="FeesModal.TireFee"],input[name="FeesModal.ElectronicRegistrationFee"], input[name="FeesModal.SmogFee"]').keyup(function () {
                auxdf = setSplit($('input[name="FeesModal.DocFee"]').val());
                auxsf = setSplit($('input[name="FeesModal.SmogFee"]').val());
                auxscf = setSplit($('input[name="FeesModal.SmogCertificationFee"]').val());
                auxsee = setSplit($('input[name="FeesModal.StateEmissionExempti"]').val());
                auxco = setSplit($('input[name="FeesModal.CancellationOption"]').val());
                auxtf = setSplit($('input[name="FeesModal.TireFee"]').val());
                auxerf = setSplit($('input[name="FeesModal.ElectronicRegistrationFee"]').val());
                $('input[name="FeesModal.Total"]').val(ReplaceNumberWithCommasRemoveDecimals((parseFloat(auxdf) + parseFloat(auxsf) + parseFloat(auxscf) + parseFloat(auxsee) +
                    parseFloat(auxco) + parseFloat(auxtf) + parseFloat(auxerf)).toFixed(2)));
            });

        //MODAL DMV CALCULATE
        $('input[name="DMVFeesModal.LicenseFee"],input[name="DMVFeesModal.RegistrationTransfer"]').keyup(function () {
            DMVFees();
        });
        //MODAL -SERVICE CONTRACT
        $('input[name="ServiceContractModal.Miles"],input[name="ServiceContractModal.Terms"],input[name="ServiceContractModal.Price"]').keyup(function () {
            $(this).val(ReplaceNumberWithCommasRemoveDecimals($(this).val().toString()));
        });

        //MODAL - DIFFER DOWN PAYMENT
        $('input[name="AmountsPaymentsAndDates[0].Amount"]').keyup(function () {
            SetTotalDifferDownPayments();
        });
        $('input[name="AmountsPaymentsAndDates[1].Amount"]').keyup(function () {
            SetTotalDifferDownPayments();
        });
        $('input[name="AmountsPaymentsAndDates[2].Amount"]').keyup(function () {
            SetTotalDifferDownPayments();
        });
        //ADD REFERENCES STEP 2
         $('button[name="AddReferences"]').click(function () {
             SearchReferencerXCustomer($('input#Vehicle_StockNumber').val());
            $('#ModalReferences').modal('show');

        });
         $('button[name="AddReferencesCo_Buyer"]').click(function () {
        });


        //CLEAN SALES
        $('#resetSale').click(function () {
            CleanStepOne();
            CleanStepTwo();
            
            CleanStepFour();
        });


         /**********    Trade In         **********/
        $('input[name="TradeInModal[0].LicensNONE"]').click(function () {
            if ($(this).is(':checked')) {
                $('input[name="TradeInModal[0].LicensNo"]').val('');
                $('input[name="TradeInModal[0].LicensNo"]').attr('disabled', true);
            } else {
                $('input[name="TradeInModal[0].LicensNo"]').attr('disabled', false);
            }
        });
         $('input[name="TradeInModal[1].LicensNONE"]').click(function () {
            if ($(this).is(':checked')) {
                $('input[name="TradeInModal[1].LicensNo"]').val('');
                $('input[name="TradeInModal[1].LicensNo"]').attr('disabled', true);
            } else {
                $('input[name="TradeInModal[1].LicensNo"]').attr('disabled', false);
            }
        });

        //Code Get VIN
        $('input[name="TradeInModal[0].VIN"]').keyup(function () {
            CleanSearchVIN(0);
            if ($(this).val().length > 16) {
                GETVIN($(this).val(),0);
            }
        });
         $('input[name="TradeInModal[1].VIN"]').keyup(function () {
            CleanSearchVIN(1);
            if ($(this).val().length > 16) {
                GETVIN($(this).val(),1);
            }
        });

        $('input[name="TradeInModal[0].TradeValue"], input[name="TradeInModal[0].LienValue"], input[name="TradeInModal[1].TradeValue"], input[name="TradeInModal[1].LienValue"]').keyup(function () {
            SetAmount();
        });

        $('#ModalTradeIn input[name="TradeInModal[0].Miles"], #ModalTradeIn input[name="TradeInModal[1].Miles"]').keyup(function () {
            $(this).val(ReplaceNumberWithCommas($(this).val() + ''));
        });

        function SaveTradeinfo() {

            //Se modifico esta parte para considerar un segundo posible trade In
            var totalAmount = 0;
            var tradealert = "";
            alert1 = false;
            alert2 = false;
            band = true;
            var comercialVal;
            var stateVal;
            var removed = 0;

            var delval1 = 0;
            var delval2 = 0;

            for (var i = 0; i < window.CountTradeIn; i++) {
                removed = 0;
                removed = $('#ModalTradeIn input[name="TradeInModal[' + i + ']_Removed"]').val();



                if (removed == 1) {

                }
                else
                {
                    stateVal = $('select[name="TradeInModal[' + i + '].State"]').val();
                    comercialVal = $('select[name="TradeInModal[' + i + '].Commercial"]').val();
                    if (isNull($('input[name="TradeInModal[' + i + '].VIN"]').val()) || isNull($('input[name="TradeInModal[' + i + '].Model"]').val())
                        || isNull($('input[name="TradeInModal[' + i + '].Color"]').val()) || isNull($('input[name="TradeInModal[' + i + '].Miles"]').val())
                        || isNull($('input[name="TradeInModal[' + i + '].TradeValue"]').val()) || isNull($('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').val())
                        || isNull($('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').val()) || isNull($('#ModalTradeIn input[name="TradeInModal[' + i + '].Engine"]').val())
                        || isNull($('#ModalTradeIn select[name="TradeInModal[' + i + '].CYL"]').val()) || isNull($('#ModalTradeIn select[name="TradeInModal[' + i + '].FuleType"]').val())) {
                        band = false;
                    }

                    if (!isNull($('input[name="TradeInModal[' + i + '].VIN"]').val())) {
                        if (i == 0) {
                            delval1 = 1;

                        }
                        else {
                            delval2 = 1;
                        }
                    }

                    //Se modifico esta parte para considerar un segundo posible trade In
                    auxvalueTrade = setSplit($('input[name="TradeInModal[' + i + '].TradeValue"]').val());
                    auxlienTrade = setSplit($('input[name="TradeInModal[' + i + '].LienValue"]').val());
                    var auxtotalAmount = auxvalueTrade - auxlienTrade;
                    if (i == 0)
                        totalAmount = auxtotalAmount;
                    else
                        totalAmount += auxtotalAmount;

                    if (!$('input[name="TradeInModal[' + i + '].LicensNONE"]').prop('checked')) {
                        console.log("error");
                        if (isNull($('input[name="TradeInModal[' + i + '].LicensNo"]').val())) {
                            $('input[name="TradeInModal[' + i + '].LicensNONE"]').addClass('validate-error-field');
                            band = false;
                        }
                        else {

                        }
                    } else { }

                    if (parseFloat(auxlienTrade) > 0 && isNull($('input[name="TradeInModal[' + i + '].Bank"]').val())) {
                        $('input[name="TradeInModal[' + i + '].Bank"]').addClass('validate-error-field');
                        band = false;
                    }
                    else {

                    }

                    if (parseFloat(auxlienTrade) > 0 && (isNull($('input[name="TradeInModal[' + i + '].VIN"]').val()) || $('input[name="TradeInModal[' + i + '].VIN"]').val() == "")) {
                        $('input[name="TradeInModal[' + i + '].VIN"]').addClass('validate-error-field');
                        band = false;
                    }
                    else {

                    }

                    if (stateVal == 2) {
                        $('select[name="TradeInModal[' + i + '].State"]').addClass('validate-error-field');
                        band = false;
                    }
                    if (comercialVal == 2) {
                        $('select[name="TradeInModal[' + i + '].Commercial"]').addClass('validate-error-field');
                        band = false;
                    }

                    if (isNull($('input[name="TradeInModal[' + i + '].VIN"]').val())) {
                        $('input[name="TradeInModal[' + i + '].VIN"]').addClass('validate-error-field');
                    }
                    if (isNull($('input[name="TradeInModal[' + i + '].Model"]').val())) {
                        $('input[name="TradeInModal[' + i + '].Model"]').addClass('validate-error-field');
                    }
                    if (isNull($('input[name="TradeInModal[' + i + '].Color"]').val())) {
                        $('input[name="TradeInModal[' + i + '].Color"]').addClass('validate-error-field');
                    }
                    if (isNull($('input[name="TradeInModal[' + i + '].Miles"]').val())) {
                        $('input[name="TradeInModal[' + i + '].Miles"]').addClass('validate-error-field');
                    }
                    if (isNull($('input[name="TradeInModal[' + i + '].TradeValue"]').val())) {
                        $('input[name="TradeInModal[' + i + '].TradeValue"]').addClass('validate-error-field');
                    }
                    if (isNull($('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').val())) {
                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').addClass('validate-error-field');
                    }
                    if (isNull($('#ModalTradeIn input[name="TradeInModal[' + i + '].Engine"]').val())) {
                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].Engine"]').addClass('validate-error-field');
                    }
                    if (isNull($('#ModalTradeIn select[name="TradeInModal[' + i + '].CYL"]').val())) {
                        $('#ModalTradeIn select[name="TradeInModal[' + i + '].CYL"]').addClass('validate-error-field');
                    }
                    if (isNull($('#ModalTradeIn select[name="TradeInModal[' + i + '].FuleType"]').val())) {
                        $('#ModalTradeIn select[name="TradeInModal[' + i + '].FuleType"]').addClass('validate-error-field');
                    }
                }

            }

            if (band) {
                $('input[name="TradeIn"]').val(totalAmount.toFixed(2));
                SetTotalDown();
                $('#ModalTradeIn').modal('hide');

                if (delval1 == 1 || delval2 == 1) {
                    if (parseFloat(auxlienTrade) > 0) {
                        $('#ModalAlert2').modal('show');
                    } else {
                        $('#ModalAlert').modal('show');
                    }
                }


            } else {
                swal("Complete the Trade-In information", "", "error");
            }

        }

        $('#ModalTradeIn button[name="BtnCancelTradeIn"]').click(function () {
            var tradeval = $('input[name="TradeInModal[' + 0 + '].VIN"]').val();
            var tradeamountval = setSplit($('input[name="TradeInModal[' + 0 + '].TradeValue"]').val());
            if (isNull(tradeval) && isNull(tradeamountval)) {
                $.each(window.TradeInValues, function (i, item) {
                    $('#ModalTradeIn input[name="TradeInModal[' + i + '].CardId"]').val(item.CardId);
                    $('#ModalTradeIn input[name="TradeInModal[' + i + '].VIN"]').val(item.VIN);
                    $('#ModalTradeIn select[name="TradeInModal[' + i + '].Year"]').val(item.Year);
                    $('#ModalTradeIn select[name="TradeInModal[' + i + '].Make"]').val(item.Make);
                    $('#ModalTradeIn input[name="TradeInModal[' + i + '].Model"]').val(item.Model);
                    $('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').val(item.SubModel);
                    $('#ModalTradeIn select[name="TradeInModal[' + i + '].CYL"]').val(item.CYL);
                    $('#ModalTradeIn select[name="TradeInModal[' + i + '].FuleType"]').val(item.FuleType);
                    $('#ModalTradeIn select[name="TradeInModal[' + i + '].Transmision"]').val(item.Transmision);
                    $('#ModalTradeIn input[name="TradeInModal[' + i + '].Color"]').val(item.Color);
                    $('#ModalTradeIn input[name="TradeInModal[' + i + '].Miles"]').val(item.Miles);
                    $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').val(item.LicensNo);
                    $('#ModalTradeIn input[name="TradeInModal[' + i + '].Engine"]').val(item.Engine);
                    if (item.LicensNONE) {
                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('checked', true);
                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                    } else {
                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('checked', false);
                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', false);
                    }
                    $('#ModalTradeIn input[name="TradeInModal[' + i + '].TradeValue"]').val(item.TradeValue);
                    $('#ModalTradeIn input[name="TradeInModal[' + i + '].LienValue"]').val(item.LienValue);
                    $('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').val(item.Amount);
                    $('input[name="TradeInModal[' + i + '].Bank"]').val(item.Bank);

                    if (setSplit(item.Amount) < 0) {
                        $('#tradein-bank-' + i).show();
                    } else {
                        $('#tradein-bank-' + i).hide();

                    }
                });
                $('#ModalTradeIn').modal('hide');
            } else {
                SaveTradeinfo();
            }
        });

        $('#ModalTradeIn button[name="BtnResetTradeIn"]').click(function () {
            ResetTradeIn();
        });

        function ResetTradeIn() {
            window.CountTradeIn = 1;
            var ti = 0;
            $('#ModalTradeIn input[name="TradeInModal[' + ti + ']_Removed"]').val(0);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].CardId"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].VIN"]').prop('readonly', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Year"]').prop('disabled', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].State"]').prop('disabled', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Commercial"]').prop('disabled', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Make"]').prop('disabled', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Model"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].SubModel"]').prop('readonly', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].CYL"]').prop('disabled', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].FuleType"]').prop('disabled', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Transmision"]').prop('disabled', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Color"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Miles"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Engine"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].TradeValue"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LienValue"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Amount"]').prop('readonly', false);
            $('input[name="TradeInModal[' + ti + '].Bank"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNONE"]').prop('disabled', false);

            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].VIN"]').val("");
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Year"]').val(2031);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Make"]').val("OTHER");
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Model"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].SubModel"]').val("");
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].CYL"]').val(0);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].FuleType"]').val("GAS");
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Transmision"]').val(0);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Color"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Miles"]').val(0);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Engine"]').val("");

            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNONE"]').prop('checked', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').prop('readonly', false);

            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].TradeValue"]').val(0.00);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LienValue"]').val(0.00);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Amount"]').val(0.00);
            $('input[name="TradeInModal[' + ti + '].Bank"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].State"]').val(0);
            $('#ModalTradeIn input[name="TradeInModal[1].Commercial"]').val(0);
            $('button[name="DeleteTradeIn1"]').addClass("gone");


                $('#tradein-bank-' + ti).hide();

            ti = 1;
            $('#ModalTradeIn input[name="TradeInModal[' + ti + ']_Removed"]').val(0);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].CardId"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].VIN"]').prop('readonly', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Year"]').prop('disabled', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].State"]').prop('disabled', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Commercial"]').prop('disabled', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Make"]').prop('disabled', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Model"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].SubModel"]').prop('readonly', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].CYL"]').prop('disabled', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].FuleType"]').prop('disabled', false);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Transmision"]').prop('disabled', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Color"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Miles"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Engine"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].TradeValue"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LienValue"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Amount"]').prop('readonly', false);
            $('input[name="TradeInModal[' + ti + '].Bank"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNONE"]').prop('disabled', false);

            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].VIN"]').val("");
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Year"]').val(2031);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Make"]').val("OTHER");
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Model"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].SubModel"]').val("");
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].CYL"]').val(0);
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].FuleType"]').val("GAS");
            $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Transmision"]').val(0);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Color"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Miles"]').val(0);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Engine"]').val("");

            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNONE"]').prop('checked', false);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').prop('readonly', false);

            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].TradeValue"]').val(0.00);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LienValue"]').val(0.00);
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Amount"]').val(0.00);
            $('input[name="TradeInModal[' + ti + '].Bank"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + ti + '].State"]').val(0);
            $('button[name="DeleteTradeIn2"]').addClass("gone");

                $('#tradein-bank-' + ti).hide();


            $("a#Span_T2").addClass("gone");
            $("#Span_T1").trigger("click");
            $('button[name="BtnRemoveTradeIn"]').addClass("gone");
            $('button[name="BtnAddTradeIn"]').removeClass("gone");
        }

        //OTHERS
        $('select[name="Buyer2.ITIN_SSN"]').change(function () {
            val = $(this).val();
            
        });

        $('select[name="Buyer2.DriverLicIDType"]').change(function () {
            val = $(this).val();
            
        });

        //more buyer recidence info key events
        $('input[name="Buyer2.Job[0].Address.County"]').keyup(function () {
            county = $(this).val();
            
        });

        $('input[name="Buyer2.Residence[0].Address.County"]').keyup(function () {
            county = $(this).val();
            
            ObtenerElTaxRate();
        });

         $('input[name="Buyer2.Residence[0].Address.City"]').keyup(function () {
             ObtenerElTaxRate();
         });

        


        incomeSelected = 1;
        ytdSelected = 0;
           

        $('select[name="EmployerSelect"]').change(function () {
            EmployerSelector(1);
        });
        $('select[name="CobuyerEmployerSelect"]').change(function () {
            EmployerSelector(2);
        });

        function EmployerSelector (select) {
            if (select == 1) {
                retire_ssi = $('input[name="Buyer2.Job[0].Retire_SSI"]');
                if ($('select[name="EmployerSelect"]').val() == 1) {
                    $(retire_ssi).val(true);
                    $('.retire-ssi-required').empty();
                    $('#MonthlyIncomeReq').html('*');
                    $('input[name="Buyer2.Job[0].Employer"]').val("Unemployed");
                    $('input[name="Buyer2.Job[0].Employer"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].MonthlyIncome"]').val(0);
                    $('input[name="Buyer2.Job[0].MonthlyIncome"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Years"]').val(0);
                    $('input[name="Buyer2.Job[0].Years"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Months"]').val(0);
                    $('input[name="Buyer2.Job[0].Months"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Phone"]').val("(000) 000-0000");
                    $('input[name="Buyer2.Job[0].Phone"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Contact"]').val("--");
                    $('input[name="Buyer2.Job[0].Contact"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Address.Address"]').val("--");
                    $('input[name="Buyer2.Job[0].Address.Address"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Address.ZIPCode"]').val("--");
                    $('input[name="Buyer2.Job[0].Address.ZIPCode"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Address.City"]').val("--");
                    $('input[name="Buyer2.Job[0].Address.City"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Address.State"]').val("--");
                    $('input[name="Buyer2.Job[0].Address.State"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Address.County"]').val("--");
                    $('input[name="Buyer2.Job[0].Address.County"]').attr("readonly", true);
                }

                if ($('select[name="EmployerSelect"]').val() == 2) {
                    $(retire_ssi).val(false);
                    $('.retire-ssi-required').html('*');
                    $('input[name="Buyer2.Job[0].Employer"]').val("");
                    $('input[name="Buyer2.Job[0].Employer"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].MonthlyIncome"]').val(0);
                    $('input[name="Buyer2.Job[0].MonthlyIncome"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Years"]').val(0);
                    $('input[name="Buyer2.Job[0].Years"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Months"]').val(0);
                    $('input[name="Buyer2.Job[0].Months"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Phone"]').val("");
                    $('input[name="Buyer2.Job[0].Phone"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Contact"]').val("");
                    $('input[name="Buyer2.Job[0].Contact"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Address.Address"]').val("");
                    $('input[name="Buyer2.Job[0].Address.Address"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Address.ZIPCode"]').val("");
                    $('input[name="Buyer2.Job[0].Address.ZIPCode"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Address.City"]').val("");
                    $('input[name="Buyer2.Job[0].Address.City"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Address.State"]').val("");
                    $('input[name="Buyer2.Job[0].Address.State"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Address.County"]').val("");
                    $('input[name="Buyer2.Job[0].Address.County"]').attr("readonly", false);
                }

                if ($('select[name="EmployerSelect"]').val() == 3) {
                    $(retire_ssi).val(true);
                    $('.retire-ssi-required').empty();
                    $('input[name="Buyer2.Job[0].Employer"]').val("Retired");
                    $('input[name="Buyer2.Job[0].Employer"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].MonthlyIncome"]').val(0);
                    $('input[name="Buyer2.Job[0].MonthlyIncome"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Years"]').val(0);
                    $('input[name="Buyer2.Job[0].Years"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Months"]').val(0);
                    $('input[name="Buyer2.Job[0].Months"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Phone"]').val("(000) 000-0000");
                    $('input[name="Buyer2.Job[0].Phone"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Contact"]').val("--");
                    $('input[name="Buyer2.Job[0].Contact"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Address.Address"]').val("--");
                    $('input[name="Buyer2.Job[0].Address.Address"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Address.ZIPCode"]').val("--");
                    $('input[name="Buyer2.Job[0].Address.ZIPCode"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Address.City"]').val("--");
                    $('input[name="Buyer2.Job[0].Address.City"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Address.State"]').val("--");
                    $('input[name="Buyer2.Job[0].Address.State"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].Address.County"]').val("--");
                    $('input[name="Buyer2.Job[0].Address.County"]').attr("readonly", true);
                }

                if ($('select[name="EmployerSelect"]').val() == 4) {
                    $(retire_ssi).val(false);
                    $('.retire-ssi-required').empty();
                    $('#MonthlyIncomeReq').html('*');
                    $('#EmployTimeReq').html('*');
                    $('input[name="Buyer2.Job[0].Employer"]').val("Self-Employed");
                    $('input[name="Buyer2.Job[0].Employer"]').attr("readonly", true);
                    $('input[name="Buyer2.Job[0].MonthlyIncome"]').val(0);
                    $('input[name="Buyer2.Job[0].MonthlyIncome"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Years"]').val(0);
                    $('input[name="Buyer2.Job[0].Years"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Months"]').val(0);
                    $('input[name="Buyer2.Job[0].Months"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Phone"]').val("");
                    $('input[name="Buyer2.Job[0].Phone"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Contact"]').val("");
                    $('input[name="Buyer2.Job[0].Contact"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Address.Address"]').val("");
                    $('input[name="Buyer2.Job[0].Address.Address"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Address.ZIPCode"]').val("");
                    $('input[name="Buyer2.Job[0].Address.ZIPCode"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Address.City"]').val("");
                    $('input[name="Buyer2.Job[0].Address.City"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Address.State"]').val("");
                    $('input[name="Buyer2.Job[0].Address.State"]').attr("readonly", false);
                    $('input[name="Buyer2.Job[0].Address.County"]').val("");
                    $('input[name="Buyer2.Job[0].Address.County"]').attr("readonly", false);
                }
            }

            if (select == 2) {

                retire_ssi = $('input[name="Co_Buyer.Job[0].Retire_SSI"]');
                if ($('select[name="CobuyerEmployerSelect"]').val() == 1) {
                    $(retire_ssi).val(true);
                    $('.cb-retire-ssi-required').empty();
                    $('input[name="Co_Buyer.Job[0].Employer"]').val("Unemployed");
                    $('input[name="Co_Buyer.Job[0].Employer"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].MonthlyIncome"]').val(0);
                    $('input[name="Co_Buyer.Job[0].MonthlyIncome"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Years"]').val(0);
                    $('input[name="Co_Buyer.Job[0].Years"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Months"]').val(0);
                    $('input[name="Co_Buyer.Job[0].Months"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Phone"]').val("(000) 000-0000");
                    $('input[name="Co_Buyer.Job[0].Phone"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Contact"]').val("--");
                    $('input[name="Co_Buyer.Job[0].Contact"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Address.Address"]').val("--");
                    $('input[name="Co_Buyer.Job[0].Address.Address"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Address.ZIPCode"]').val("--");
                    $('input[name="Co_Buyer.Job[0].Address.ZIPCode"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Address.City"]').val("--");
                    $('input[name="Co_Buyer.Job[0].Address.City"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Address.State"]').val("--");
                    $('input[name="Co_Buyer.Job[0].Address.State"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Address.County"]').val("--");
                    $('input[name="Co_Buyer.Job[0].Address.County"]').attr("readonly", true);
                }

                if ($('select[name="CobuyerEmployerSelect"]').val() == 2) {
                    $(retire_ssi).val(false);
                    $('.cb-retire-ssi-required').html('*');
                    $('input[name="Co_Buyer.Job[0].Employer"]').val("");
                    $('input[name="Co_Buyer.Job[0].Employer"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].MonthlyIncome"]').val(0);
                    $('input[name="Co_Buyer.Job[0].MonthlyIncome"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Years"]').val(0);
                    $('input[name="Co_Buyer.Job[0].Years"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Months"]').val(0);
                    $('input[name="Co_Buyer.Job[0].Months"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Phone"]').val("");
                    $('input[name="Co_Buyer.Job[0].Phone"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Contact"]').val("");
                    $('input[name="Co_Buyer.Job[0].Contact"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Address.Address"]').val("");
                    $('input[name="Co_Buyer.Job[0].Address.Address"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Address.ZIPCode"]').val("");
                    $('input[name="Co_Buyer.Job[0].Address.ZIPCode"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Address.City"]').val("");
                    $('input[name="Co_Buyer.Job[0].Address.City"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Address.State"]').val("");
                    $('input[name="Co_Buyer.Job[0].Address.State"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Address.County"]').val("");
                    $('input[name="Co_Buyer.Job[0].Address.County"]').attr("readonly", false);
                }

                if ($('select[name="CobuyerEmployerSelect"]').val() == 3) {
                    $(retire_ssi).val(true);
                    $('.cb-retire-ssi-required').empty();
                    $('input[name="Co_Buyer.Job[0].Employer"]').val("Retired");
                    $('input[name="Co_Buyer.Job[0].Employer"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].MonthlyIncome"]').val(0);
                    $('input[name="Co_Buyer.Job[0].MonthlyIncome"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Years"]').val(0);
                    $('input[name="Co_Buyer.Job[0].Years"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Months"]').val(0);
                    $('input[name="Co_Buyer.Job[0].Months"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Phone"]').val("(000) 000-0000");
                    $('input[name="Co_Buyer.Job[0].Phone"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Contact"]').val("--");
                    $('input[name="Co_Buyer.Job[0].Contact"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Address.Address"]').val("--");
                    $('input[name="Co_Buyer.Job[0].Address.Address"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Address.ZIPCode"]').val("--");
                    $('input[name="Co_Buyer.Job[0].Address.ZIPCode"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Address.City"]').val("--");
                    $('input[name="Co_Buyer.Job[0].Address.City"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Address.State"]').val("--");
                    $('input[name="Co_Buyer.Job[0].Address.State"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].Address.County"]').val("--");
                    $('input[name="Co_Buyer.Job[0].Address.County"]').attr("readonly", true);
                }

                if ($('select[name="CobuyerEmployerSelect"]').val() == 4) {
                    $(retire_ssi).val(false);
                    $('.cb-retire-ssi-required').empty();
                    $('input[name="Co_Buyer.Job[0].Employer"]').val("Self-Employed");
                    $('input[name="Co_Buyer.Job[0].Employer"]').attr("readonly", true);
                    $('input[name="Co_Buyer.Job[0].MonthlyIncome"]').val(0);
                    $('input[name="Co_Buyer.Job[0].MonthlyIncome"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Years"]').val(0);
                    $('input[name="Co_Buyer.Job[0].Years"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Months"]').val(0);
                    $('input[name="Co_Buyer.Job[0].Months"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Phone"]').val("");
                    $('input[name="Co_Buyer.Job[0].Phone"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Contact"]').val("");
                    $('input[name="Co_Buyer.Job[0].Contact"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Address.Address"]').val("");
                    $('input[name="Co_Buyer.Job[0].Address.Address"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Address.ZIPCode"]').val("");
                    $('input[name="Co_Buyer.Job[0].Address.ZIPCode"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Address.City"]').val("");
                    $('input[name="Co_Buyer.Job[0].Address.City"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Address.State"]').val("");
                    $('input[name="Co_Buyer.Job[0].Address.State"]').attr("readonly", false);
                    $('input[name="Co_Buyer.Job[0].Address.County"]').val("");
                    $('input[name="Co_Buyer.Job[0].Address.County"]').attr("readonly", false);
                }
            }
        }

        

        $('select[name="ItinSb60Dl"]').change(function () {
            if ($(this).val() == "YES") {
                itinSB60 = 1;
                $('select[name="ItinNoDl"]').prop('disabled', true);
                $('input[name="NoITINorDL"]').prop('disabled', true);
            } else {
                itinSB60 = 0;
                $('select[name="ItinNoDl"]').prop('disabled', false);
                $('input[name="NoITINorDL"]').prop('disabled', false);
            }
        });

        $('select[name="ItinNoDl"]').change(function () {
            if ($(this).val() == "YES") {
                itinNoDL = 1;
                $('select[name="ItinSb60Dl"]').prop('disabled', true);
                $('input[name="NoITINorDL"]').prop('disabled', true);
            } else {
                itinNoDL = 0;
                $('select[name="ItinSb60Dl"]').prop('disabled', false);
                $('input[name="NoITINorDL"]').prop('disabled', false);
            }

        });

        $('select[name="OpenBK"]').change(function () {
            if ($(this).val() == "1") {
                openBK = 1;
                //Desabilitar todo
                alertify.alert('Banks Not Available').setHeader('<em> Alert </em> ');
                deseabledOpenBK();
            } else {
                openBK = 0;
                enabledOpenBK();
            }
        });

        
        $('select[name="SameCommunity"]').change(function () {
            sameCommunity = parseInt($(this).val());
        });

        $('select[name="TaxLiensJudgments"]').change(function () {
            if ($(this).val() == "YES") {
                openTaxLiensJudgments = 1;
                $("#_taxLiensJudgments").modal("show");
            } else {
                openTaxLiensJudgments = 0;
            }
        });

        $("#_taxLiensJudgments .btn-cancel").on('click', function () {
            openTaxLiensJudgments = 0;
            $('select[name="TaxLiensJudgments"]').val("NO");
            $("#_taxLiensJudgments").modal("hide");
        });

        $("#_taxLiensJudgments .btn-ok").on('click', function () {
            openTaxLiensJudgments = 1;
            $('select[name="TaxLiensJudgments"]').val("NO");
            $("#_taxLiensJudgments").modal("hide");
        });


        $('#_balanceAmount').on('hidden.bs.modal', function () {
        })


        //On Cred Bureu
        $("input[name='CredBureu']").change(function () {
            timeCreditBureu = parseInt($(this).val());
        });

        $("select[name='VehicleYears']").change(function () {
            years = $(this).val();
        });

        $("input[name='VehicleMiles']").keyup(function () {
            miles = $(this).val();
        });


        

        $('input[name="ComparableCredit"]').change(function () {
            if (this.checked) {
                comparableCredit = 1;
            } else {
                comparableCredit = 0;
            }
        });

        /**************   INCOME    ********************/
    
        /**********************  LENDER GUIDLINES  AND POSSIBLE STIPS *PTI*******************************/
        //Select bank
        $("select#banks").change(function () {
            var selectedBankId = $(this).children("option:selected").val();

            if (selectedBankId != -1) {
                GetLenderGuidelines(selectedBankId);
                GetPossibleStips(selectedBankId);
                GetRateAndTerms();//This not working, all code is comment
            }
        });

        

         $('.months').on('keyup', function () {
             if (parseInt($(this).val()) > 12) {
                 $(this).val('12');
             }
         });

        
         $('button#removeCoBuyer').on('click', function () {
             RemoveCoBuyer();
         });

            $('#BtnBackOnSearch').on('click', function () {
                document.getElementById("Searchtable1").removeAttribute("hidden");
                document.getElementById("Searchtable2").setAttribute("hidden", true);
                document.getElementById("BtnBackOnSearch").style.visibility = "hidden";
            });

         $(document.body).on("click", 'a[name="SaveSale1"],a[name="SaveSale2"],a[name="SaveSale3"]', function () {
             $('div#ModalSweetAlert').modal('show');
         });


         $('button[name="SaveBuyerMA"]').on('click', function () {
             validateMA = ValidateMailingAddress($('input[name="Buyer2.MailingAddress.Address"]'),
                 $('input[name="Buyer2.MailingAddress.ZIPCode"]'), $('input[name="Buyer2.MailingAddress.City"]'),
                 $('input[name="Buyer2.MailingAddress.State"]'), false);
             if (validateMA) {
                 $('#BuyerMailingAddressModal').modal('hide');
             }
             else {
                 Swal("Requierd Mailing Address", "", "info");
             }
         });

         $('button[name="CancelBuyerMA"]').on('click', function () {
             Swal.fire({
                 title: 'Are you sure the Cancel?',
                 text: "",
                 type: 'question',
                 showCancelButton: true,
                 confirmButtonColor: '#3085d6',
                 cancelButtonColor: '#d33',
                 confirmButtonText: 'Yes',
                 cancelButtonText: 'No',
             }).then((result) => {
                 if (result.value) {
                     $('#BuyerMailingAddressModal input').val('');
                     $('#BuyerMailingAddressModal input').removeClass('validate-error-field');
                     $('#BuyerMailingAddressModal').modal('hide');

                 }
             });

         });

         $('button[name="SaveCo_BuyerMA"]').on('click', function () {
             validateMA = ValidateMailingAddress($('input[name="Co_Buyer.MailingAddress.Address"]'),
                 $('input[name="Co_Buyer.MailingAddress.ZIPCode"]'), $('input[name="Co_Buyer.MailingAddress.City"]'),
                 $('input[name="Co_Buyer.MailingAddress.State"]'), true);
             if (validateMA) {
                 $('#Co_BuyerMailingAddressModal').modal('hide');
             }
             else {
                 Swal("Requierd Mailing Address", "", "info");
             }
         });

         $('button[name="CancelCo_BuyerMA"]').on('click', function () {
             Swal.fire({
                 title: 'Are you sure the Cancel?',
                 text: "",
                 type: 'question',
                 showCancelButton: true,
                 confirmButtonColor: '#3085d6',
                 cancelButtonColor: '#d33',
                 confirmButtonText: 'Yes',
                 cancelButtonText: 'No',
             }).then((result) => {
                 if (result.value) {
                     $('#Co_BuyerMailingAddressModal input').val('');
                     $('#Co_BuyerMailingAddressModal input').removeClass('validate-error-field');
                     $('#Co_BuyerMailingAddressModal').modal('hide');
                 }
             });

         });

         // Redirect to Payments with all information
         $('a[name="Payments"]').click(function () {

             var Id = $('input[name="LoanId_"]').val();

             if (Id > 0) {
                 basicPopup('/PaymentInvoices/IndexOfCarStock/' + Id);

             } else
                 swal("Select a vehicle", "", "info");
         });

         //Butons to PREVIOUS AND NEXT
         $('a#Previous2,a#Previous3').click(function () {
             $("#form").steps('previous');
         });

         $('a#Next1,a#Next2').click(function () {
             $("#form").steps('next');
         });

            //Doc Check List
            $('button.BtnAddDoc').click(function () {
                var id = $(this).attr('id');//Id del Documento
                var con = $('div#' + id + '.Notes').parent().attr('id');//Obtiene la posicion del Doc en el arreglo
                var i = $('div#' + id + '.Notes textarea:last').attr('id');//Obtienen la posicion del ultimo Textarea en ese div
                i++;
                AddNoteToDoc(id, con, i, "",0,1,1);
                $('button#' + id + '.BtnAddDoc').addClass('hidden');
            });
            //Other Banks
            $('button.BtnAddDocBank').click(function () {
                var id = $(this).attr('id');//Id del Documento
                var con = $('div#' + id + '.NotesBank').parent().attr('id');//Obtiene la posicion del Doc en el arreglo
                var i = $('div#' + id + '.NotesBank textarea:last').attr('id');//Obtienen la posicion del ultimo Textarea en ese div
                i++;
                AddNoteToDoc(id, con, i, "", 0, 2,1);
                $('button#' + id +'.BtnAddDocBank').addClass('hidden');
            });

            $('div#Accounting select').change(function () {
                var i = $(this).parent().parent().attr('id');
                var value1 = parseInt($('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_Spanish"]').val());
                var value2 = parseInt($('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_English"]').val());
                var Id = $('input[name="DocsInFinance['+i+'].DocInFinance.IdDocToFinance"]').val();

                if ((value1 >= 3 ) || (value2 >= 3 )) {
                    $('div#' + Id + '.Notes').removeClass('hidden');
                    if ($('div#' + Id + '.Notes:empty').length) {
                        AddNoteToDoc(Id, i, 0, "", 0, 1, 1);
                    }
                } else
                    $('div#' + Id + '.Notes').addClass('hidden');

                //COLOR TO SELECT
                if ($(this).val() == 0)
                    $(this).removeClass('red').removeClass('green').addClass('white');
                else if ($(this).val() == 1)
                    $(this).removeClass('red').addClass('green');
                else if ($(this).val() > 2 && $(this).val() < 15)
                    $(this).removeClass('green').addClass('red');
                else if ($(this).val() == 2 || $(this).val() == 0)
                    $(this).removeClass('red').removeClass('green');
                else if ($(this).val() == 16)
                    $(this).removeClass('red').removeClass('green').addClass('white');
            });

            //Documents In Finance
            $('button[name="SaveDocsInFinance"]').click(function (e) {
                e.preventDefault();
                var IdCar = $('#ModalDocCheckList input[name="IdCar"]').val();
                if (!isNull(IdCar)) {
                    if (ValidateDocumentsInFinance()) {
                        swal({
                            title: 'Update Documents...',
                            text: '',
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            onOpen: () => {
                                swal.showLoading();
                            }
                        });


                        var post_url = $('#formDocsToFinance').attr('action'); //get form action url
                        var request_method = $('#formDocsToFinance').attr('method'); //get form GET/POST method
                        var form_data = $('#formDocsToFinance').serialize(); //Encode form elements for submission
                        $.ajax({
                            url: post_url,
                            type: request_method,
                            data: form_data
                        }).done(function (response) {
                            if (response.success) {
                                swal(response.Message, "", "info");
                                $('div.Notes textarea').attr('readonly', 'readonly');
                            }
                            else {
                                swal(response.Message, "", "error");
                            }
                            $('#ModalDocCheckList').modal('hide');
                        }).fail(function () {
                            swal("No fue posible guardar la Informacion", "", "error");
                        });

                    }
                } else {
                    swal("Select a Car", "", "info");
                }

            });
            $('select[name="Buyer2.Lenguage"]').change(function () {
                if ($(this).val() == 1) {//Si solo habla ingles el cliente, las formas en español no son requeridas
                    $('select.spanish,label#Spanish').addClass('hidden');
                    $('select.spanish').val(2);//N/A
                } else {
                    $('select.spanish,label#Spanish').removeClass('hidden');
                    $('select.spanish').val(1).removeClass('red');//OK
                    $('select.spanish').addClass('green');
                }

                ValidarNoteToFinance();
            });
    });//END DOCUMENT READY

    //----------------------Documents Check list START-------------------
    function previousNext(arrowselected) {
        if (stockNumbersFromPndgReg.length > 0) {
            let valueSeleted;
            let stock = $('#Vehicle_StockNumber').val();
            if (stock == "") {

                if (arrowselected == "right") {
                    indexStockNumbers++;
                }
                else if (arrowselected == "left") {
                    indexStockNumbers--;
                }

                if (indexStockNumbers == -1) {
                    valueSeleted = stockNumbersFromPndgReg[stockNumbersFromPndgReg.length - 1];
                    indexStockNumbers = stockNumbersFromPndgReg.length - 1;
                }
                else if (indexStockNumbers == stockNumbersFromPndgReg.length) {
                    valueSeleted = stockNumbersFromPndgReg[0];
                    indexStockNumbers = 0;
                }
                else {
                    valueSeleted = stockNumbersFromPndgReg[indexStockNumbers];
                }
            }
            else {
                indexStockNumbers = -1;
                for (let i = 0; i < stockNumbersFromPndgReg.length; i++) {
                    if (stockNumbersFromPndgReg[i] == parseInt(stock)) {
                        indexStockNumbers = i;
                        break;
                    }
                }
                if (indexStockNumbers > -1) {
                    if (arrowselected == "right") {
                        indexStockNumbers++;
                    }
                    else if (arrowselected == "left") {
                        indexStockNumbers--;
                    }

                    if (indexStockNumbers == -1) {
                        valueSeleted = stockNumbersFromPndgReg[stockNumbersFromPndgReg.length - 1];
                        indexStockNumbers = stockNumbersFromPndgReg.length - 1;
                    }
                    else if (indexStockNumbers == stockNumbersFromPndgReg.length) {
                        valueSeleted = stockNumbersFromPndgReg[0];
                        indexStockNumbers = 0;
                    }
                    else {
                        valueSeleted = stockNumbersFromPndgReg[indexStockNumbers];
                    }
                }
                else {
                    valueSeleted = stockNumbersFromPndgReg[0];
                    indexStockNumbers = 0;
                }
            }



            //var e = jQuery.Event("keypress", { which: $.ui.keyCode.ENTER });
            $('#Vehicle_StockNumber').val(valueSeleted);


            if (PendCma == 1) {
                swal("You have " + Employee.CmaRev + " pending CMA´s ", "", "info");
            } else {
                /*checkPendingNot();*/
                if (PendNot == 1 && PendNotStock == 0) {
                    swal("You have pending notifications", "", "info");
                } else {
                    CleanStepOne();
                    CleanStepTwo();
                    
                    CleanStepFour();

                    SearchLoan(parseInt(valueSeleted));
                }
            }
        }
        else {
            swal({
                title: 'No vehicle avaibles',
                text: '',
                allowOutsideClick: false,
                showConfirmButton: true,
            });
        }

    }
     function ValidateDocumentsInFinance() {
        $('div#Accounting select,div#ModalDocCheckList textarea').removeClass('validate-error-field');
         var Total = @Html.Raw(Json.Encode(ViewBag.DocsToFinance.Count));
         var con = 0;
             for (var i = 0; i < Total; i++) {
                 var value1 = $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_Spanish"]').val();
                 var value2 = $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_English"]').val();
                 var Id = $('input[name="DocsInFinance[' + i + '].DocInFinance.IdDocToFinance"]').val();
                 var TotalNotesInThisDoc = $('div#' + Id + '.Notes').find('textarea').length;

                 for (j = 0; j < TotalNotesInThisDoc; j++) {
                     var note = $('textarea[name="DocsInFinance[' + i + '].ListDocInFinance_Notes[' + j + '].Note');
                     if (((value1 >= 3 && value1 <= 6) || (value2 >= 3 && value2 <= 6)) && $(note).val() == "")
                         $(note).addClass('validate-error-field');
                 }

             }

         //Documentos del banco externo a Lupitas
        for (var i = 0; i < window.TotalDocBank; i++) {
            var value2 = $('select[name="DocsInFinanceBank[' + i + '].DocInFinance.IdStatus_DocToFinance_English"]').val();
            var Id = $('input[name="DocsInFinance[' + i + '].DocInFinance.IdDocToFinance"]').val();
            var TotalNotesInThisDoc = $('div#' + Id + '.Notes').find('textarea').length;

            if (isNull(value2)) {
                $('select[name="DocsInFinanceBank[' + i + '].DocInFinance.IdStatus_DocToFinance_English"]').addClass('validate-error-field');
            }

            for (j = 0; j < TotalNotesInThisDoc; j++) {
                var note = $('textarea[name="DocsInFinanceBank[' + i + '].ListDocInFinance_Notes[' + j + '].Note');
                if (((value1 >= 3 && value1 <= 6) || (value2 >= 3 && value2 <= 6)) && $(note).val() == "")
                    $(note).addClass('validate-error-field');
            }
        }

        if ($('div#Accounting select.validate-error-field').length > 0 || $('div#ModalDocCheckList textarea.validate-error-field').length > 0 ) {
            Swal("Complete correctly fields!", "", "info");
            return false;
        }
        else return true;

    }
    function ValidarNoteToFinance() {
          var Total = @Html.Raw(Json.Encode(ViewBag.DocsToFinance.Count));
        var con = 0;
        for (var i = 0; i < Total; i++) {
            var value1 = $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_Spanish"]').val();
            var value2 = $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_English"]').val();
            var Id = $('input[name="DocsInFinance[' + i + '].DocInFinance.IdDocToFinance"]').val();
            if (((value1 >= 3 && value1 <= 6) || (value2 >= 3 && value2 <= 6)))
                $('div#' + Id + '.Notes').empty();
            else
                $('div#' + Id + '.Notes').empty();

        }
    }

    function AddNoteToDoc(id, con, i, Note, idNote, opc,add) {
        //id: Id del Documento
        //con: Pocision del documento en el arreglo
        //i: posicion de la nota en el arreglo de Notas
        //Note: Nota
        //IdNote
        //Opc: 1= Lupitas Group, 2 = Other Bank
        //add: 1=Agregar nueva nota, 2= Nota ya existente
        if (opc == 1) {
            if (i == 0 && add==2)
                $('button[name="BtnAddDoc_' + id + '"]').removeClass('hidden');
            if (add == 1)
                $('div#' + con + ' .Notes').append('<textarea name="DocsInFinance[' + con + '].ListDocInFinance_Notes[' + i + '].Note" id="' + i + '" rows="1" >' + Note + '</textarea><input type="hidden" name="DocsInFinance[' + con + '].ListDocInFinance_Notes[' + i + '].Id" value="' + idNote + '"/>');
            else
                $('div#' + con + ' .Notes').append('<textarea name="DocsInFinance[' + con + '].ListDocInFinance_Notes[' + i + '].Note" id="' + i + '" rows="1" readonly>' + Note + '</textarea><input type="hidden" name="DocsInFinance[' + con + '].ListDocInFinance_Notes[' + i + '].Id" value="' + idNote + '"/>');

        } else {
            if (i == 0 && add==2)//Solo se puede agregar otro TA si ya existe uno en ese documento
                $('button[name="BtnAddDoc_' + id + '"]').removeClass('hidden');

            if (add == 1)
                 $('div#' + con + ' .Notes').append('<textarea name="DocsInFinanceBank[' + con + '].ListDocInFinance_Notes[' + i + '].Note" id="' + i + '" rows="1" >' + Note + '</textarea><input type="hidden" name="DocsInFinanceBank[' + con + '].ListDocInFinance_Notes[' + i + '].Id" value="' + idNote + '"/>');
            else
                $('div#' + con + ' .Notes').append('<textarea name="DocsInFinanceBank[' + con + '].ListDocInFinance_Notes[' + i + '].Note" id="' + i + '" rows="1" readonly>' + Note + '</textarea><input type="hidden" name="DocsInFinanceBank[' + con + '].ListDocInFinance_Notes[' + i + '].Id" value="' + idNote + '"/>');
        }

    }

    var con2 = 1;
    function SearchBank(id) {
        $.ajax({
            type: 'GET',
            url: "/AjaxBanks/GetDocToFinancePerBank?id=" + id,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                $('#DocumentsBanks').empty();
                if (response.success) {

                    window.TotalDocBank = response.ListDocInFinance.length;
                    $.each(response.ListDocInFinance, function (i, item) {
                        $('div#DocumentsBanks').append('<div class="grid bg-yellow" id="0">' +
                            '<div class="column-7 Labels-cls">' +
                            '<input type="hidden" name="DocsInFinanceBank[' + i + '].DocInFinance.IdDocToFinance" value="' + item.Id + '">' +
                            '<label name="DocsInFinanceBank[' + i + '].DocInFinance.IdDocToFinance"><span>' + (con2) + '</span>' + item.Document + '</label>' +
                            '</div>' +
                            '<div class="column-5 grid">' +
                            '<select class="form-control" name="DocsInFinanceBank[' + i + '].DocInFinance.IdStatus_DocToFinance_English"></select>' +
                            '</div>' +
                            '<div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 no-padding NotesBank" id="' + item.Id+'">' +
                            '</div>' +
                            '</div>');
                        $.each(item.ListDocInFinance_Notes, function (j, item2) {
                            AddNoteToDoc(item.Id, i, j, item2.Note, item2.Id, 2,2);
                        });
                        $.each(item.ListStatusDocToFinance, function (j, item2) {
                            $('select[name="DocsInFinanceBank[' + i + '].DocInFinance.IdStatus_DocToFinance_English"]').append('<option value="' + item2.Id + '">' + item2.Description + '</option>');
                        });
                        con2 += 1;
                    });
                }


            }//success
        });//$.ajax
        con2 = 1;
    }

    function SetColorAndValueToSelectDocCheckList(bank, value){
        $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_English"]').val(item.DocInFinance.IdStatus_DocToFinance_English).removeClass('green').removeClass('red');
    }
    //--------------------------------------End Doc Check list in Finance-----------------------------------
        $.fn.steps.setStep = function (/*index, */step) {
            var currentIndex = $(this).steps('getCurrentIndex');
            for (var i = 0; i < Math.abs(step - currentIndex); i++) {
                if (step > currentIndex) {
                    $(this).steps('next');
                }
                else {
                    $(this).steps('previous');
                }
            }
        };

    $(window).on('load', function () {
        //Recargar pagin
    $('#miboton').on('click', function () {
        location.reload();
    });

    //Calendario que se manda a llamar en YTD
        $('#data_DATEYTD .input-group.date').datepicker({
            todayBtn: "linked",
            keyboardNavigation: false,
            forceParse: false,
            calendarWeeks: true,
            autoclose: true,
            format: 'mm/dd',
        }).datepicker("setDate", new Date());
    });//END DOCUMENT LOAD

//Lo mas probable es que no se utilice
    function SearchSN(stock) {
        $.ajax({
            type: 'GET',
            url: "/Applications/SearchStock?stockNumber=" + stock,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                if (response.success) {
                    console.log(response);
                    /*cleanFYI();*/
                    $('input[name="VehicleMiles"]').val(ReplaceNumberWithCommasRemoveDecimals(response.miles.toString()));
                    $("#VehicleYears").val(response.years);
                    $("select[name='VehicleCommercial']").val(response.commercial);
                    $('span#ExistStockNumber').show();
                    $('span#ExistStockNumber').text(response.message);
                    $('span#ExistStockNumber').css("color", "green");
                    $('span#ExistStockNumber').css("margin-bottom", "5px");

                    miles = parseInt(response.miles);
                    years = parseInt(response.years);
                    $('input[name="DifferDownPayment"]').val(ReplaceNumberWithCommasRemoveDecimals(response.defferdownpayment.toString()));
                    
                    $('input[name="AmountFinanced"]').val(ReplaceNumberWithCommasRemoveDecimals(response.amountFinanced.toString()));
                    
                }
                else {
                    $('input[name="DifferDownPayment"]').val('');
                    $('input[name="AmountFinanced"]').val('');
                    
                    $("#VehicleYears").val(0);
                    $('input[name="VehicleMiles"]').val('');
                    $('span#ExistStockNumber').show();
                    $('span#ExistStockNumber').text('');
                    miles = 0;
                    years = 0;
                }
            }
        });
        }

        function ROSDATEValidate() {
            if (!isNull($('input[name="CarId"]').val())) {
                var parts = $('input[name="SoldDate"]').val().split('/');
                var soldDate_ = new Date(parts[2], parts[0] - 1, parts[1]).getTime();

                parts = $('input[name="Date"]').val().split('/');
                var rosDate_ = new Date(parts[2], parts[0] - 1, parts[1]).getTime();

                var diff = soldDate_ - rosDate_;
                days = diff / (1000 * 60 * 60 * 24);
                //Se puede agregar la venta
                if (days >= 0 && days <= 3 && ( @Html.Raw(Json.Encode(User.IsInRole("Salesperson")))  == true
                    || @Html.Raw(Json.Encode(User.IsInRole("Administrator")))  == true
                    || @Html.Raw(Json.Encode(User.IsInRole("Supervisor")))  == true)) {
                    return 1;
                }
                //No se puede agregar la venta
                if (days < 0) {
                    return -1;
                }
                else if (days > 3) {
                    //No puede agregar la venta
                    if (@Html.Raw(Json.Encode(User.IsInRole("Salesperson")))  == true) {
                        return 0;
                    }
                    //Pueden agregar la venta
                    else if (@Html.Raw(Json.Encode(User.IsInRole("Administrator")))  == true ||
                    @Html.Raw(Json.Encode(User.IsInRole("Supervisor")))  == true) {
                        return 1;
                    }
                    //No puede agregar l aventa
                    else {
                        return 2;
                    }
                }


            }
        }

    function NaN2Zero(n) {
        if (n == "") { return 0; }
        else { return n; }
    }
    $.fn.VerifySalePrice = function () {
            if (!isNull($('input[type="hidden"][name="CarId"]').val())) {

                verifyPrice = $('input[type="hidden"][name="VerifySalePrice"]');
                if (parseFloat(window.salePrice) < parseFloat(window.priceMin)) {

                    window.salePrice = window.priceMin
                    $('input[name="SalePrice"]').val(formatearNumero(parseFloat(priceMin).toFixed(2)));
                    /*swal("The minimum suggested price is $ " + formatearNumero(parseFloat(priceMin).toFixed(2)), "", "error");*/
                    $(verifyPrice).val(1);
                } else {
                    $(verifyPrice).val(1);
                    swal("Verify Sale Price", "", "success");

                }
            }
            else {
                swal("Enter a Stock Number", "Field required", "info");
            }
        }



    function BackSteps(step) {
        if (step == 0) {
            $('#form-t-0').click();
        }
        else if (step == 1) {
            $('#form-t-1').click();
        }
        else if (step == 2) {
            $('#form')[0].reset();
            $('#form-t-2').click();
        }
        }

    function SameAddressThatBuyer() {
        $('input[name="Co_Buyer.Residence[0].Address.ZIPCode"]').val($('input[name="Buyer2.Residence[0].Address.ZIPCode"]').val());
        $('input[name="Co_Buyer.Residence[0].Address.Address"]').val($('input[name="Buyer2.Residence[0].Address.Address"]').val());
        $('input[name="Co_Buyer.Residence[0].Address.City"]').val($('input[name="Buyer2.Residence[0].Address.City"]').val());
        $('input[name="Co_Buyer.Residence[0].Address.State"]').val($('input[name="Buyer2.Residence[0].Address.State"]').val());
        $('input[name="Co_Buyer.Residence[0].Address.County"]').val($('input[name="Buyer2.Residence[0].Address.County"]').val());
        $('input[name="Co_Buyer.Payment"]').val($('input[name="Buyer2.Payment"]').val());
        $('input[name="Co_Buyer.Residence[0].Years"]').val($('input[name="Buyer2.Residence[0].Years"]').val());
        $('input[name="Co_Buyer.Residence[0].Months"]').val($('input[name="Buyer2.Residence[0].Months"]').val());
    }

    function SearchZipCode(zipcode, position, option) {
        //1 - Buyer Residece - //2 - Buyer Mailing Address - //3- Buyer Employement - //4 - CoBuyer Residence - //5 - CoBuyer Mailing Address - //6- Cobuyer Employment -//7 - Referecenses Buyer
        var ban = 0;
        if (!isNull(zipcode) && zipcode.length == 5 && !isNaN(zipcode)) {
            swal({
                title: 'Verifying Zip Code...',
                text: '',
                timer: 20000,
                allowOutsideClick: false,
                showConfirmButton: false,
                onOpen: () => {
                    swal.showLoading();

                    $('#search-zipcode-' + option + '-' + position).
                        html('<div class="spiner-example">' +
                            '<div class="sk-spinner sk-spinner-fading-circle">' +
                            '<div class="sk-circle1 sk-circle"></div>' +
                            '<div class="sk-circle2 sk-circle"></div>' +
                            '<div class="sk-circle3 sk-circle"></div>' +
                            '<div class="sk-circle4 sk-circle"></div>' +
                            '<div class="sk-circle5 sk-circle"></div>' +
                            ' <div class="sk-circle6 sk-circle"></div>' +
                            ' <div class="sk-circle7 sk-circle"></div>' +
                            '<div class="sk-circle8 sk-circle"></div>' +
                            ' <div class="sk-circle9 sk-circle"></div>' +
                            '<div class="sk-circle10 sk-circle"></div>' +
                            ' <div class="sk-circle11 sk-circle"></div>' +
                            ' <div class="sk-circle12 sk-circle"></div>' +
                            ' </div>' +
                            '</div>');

                    $.ajax({
                        //url: 'http://api.positionstack.com/v1/forward?access_key=96361685da63618560bf82db36bd19a7&query=USA' + zipcode + '&limit=1'
                        url: "/AjaxAPI/GetZipCode?zipcode=" + zipcode,
                        type: "GET",
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                    }).done(function (data) {
                        console.log(data);
                        try {
                            if (data != null) {
                                ban = 1;
                                $.each(data.results2.data, function (i, r) {
                                    if (r.length <= 0 || (r.county == null && r.locality == null && r.region_code == null)) {
                                        swal({
                                            title: 'Zip Code not found!',
                                            type: 'info',
                                            timer: 1000,
                                            showConfirmButton: false
                                        });
                                    } else {
                                        console.log(r);
                                        var county = r.county;

                                        if (county == null) {
                                            county = data.val.city;
                                        }
                                        if (county.includes(" County")) {
                                            county = county.replace(' County', '');
                                        }


                                        if (data.val == null) {

                                            if (option == 1) {
                                                $('input[name="Buyer2.Residence[' + position + '].Address.City"').val(county.toUpperCase());
                                                $('input[name="Buyer2.Residence[' + position + '].Address.State"]').val(r.region_code);
                                            }
                                            else if (option == 3) {
                                                $('input[name="Buyer2.Job[' + position + '].Address.City"').val(county.toUpperCase());
                                                $('input[name="Buyer2.Job[' + position + '].Address.State"]').val(r.region_code);
                                            }
                                            else if (option == 4) {
                                                $('input[name="Co_Buyer.Residence[' + position + '].Address.City"').val(county.toUpperCase());
                                                $('input[name="Co_Buyer.Residence[' + position + '].Address.State"]').val(r.region_code);
                                            }
                                            else if (option == 6) {
                                                $('input[name="Co_Buyer.Job[' + position + '].Address.City"').val(county.toUpperCase());
                                                $('input[name="Co_Buyer.Job[' + position + '].Address.State"]').val(r.region_code);
                                            }
                                            else if (option == 7) {
                                                $('input[name="References[' + position + '].Addresses.City"').val(county.toUpperCase());
                                                $('input[name="References[' + position + '].Addresses.State"').val(r.region_code);
                                            }
                                            else if (option == 8) {
                                                $('input[name="Buyer2.MailingAddress.City"').val(county.toUpperCase());
                                                $('input[name="Buyer2.MailingAddress.State"').val(r.region_code.toUpperCase());
                                            }
                                            else if (option == 9) {
                                                $('input[name="Co_Buyer.MailingAddress.City"').val(county.toUpperCase());
                                                $('input[name="Co_Buyer.MailingAddress.State"').val(r.region_code);
                                            }
                                            else if (option == 10) {
                                                $('input[name="ReferencesCoBuyer[' + position + '].Addresses.City"').val(county.toUpperCase());
                                                $('input[name="ReferencesCoBuyer[' + position + '].Addresses.State"').val(r.region_code);
                                            }

                                        } else {

                                            if (option == 1) {
                                                $('input[name="Buyer2.Residence[' + position + '].Address.City"').val(data.val.city.toUpperCase());
                                                $('input[name="Buyer2.Residence[' + position + '].Address.State"]').val(r.region_code);
                                            }
                                            else if (option == 3) {
                                                $('input[name="Buyer2.Job[' + position + '].Address.City"').val(data.val.city.toUpperCase());
                                                $('input[name="Buyer2.Job[' + position + '].Address.State"]').val(r.region_code);
                                            }
                                            else if (option == 4) {
                                                $('input[name="Co_Buyer.Residence[' + position + '].Address.City"').val(data.val.city.toUpperCase());
                                                $('input[name="Co_Buyer.Residence[' + position + '].Address.State"]').val(r.region_code);
                                            }
                                            else if (option == 6) {
                                                $('input[name="Co_Buyer.Job[' + position + '].Address.City"').val(data.val.city.toUpperCase());
                                                $('input[name="Co_Buyer.Job[' + position + '].Address.State"]').val(r.region_code);
                                            }
                                            else if (option == 7) {
                                                $('input[name="References[' + position + '].Addresses.City"').val(data.val.city.toUpperCase());
                                                $('input[name="References[' + position + '].Addresses.State"').val(r.region_code);
                                            }
                                            else if (option == 8) {
                                                $('input[name="Buyer2.MailingAddress.City"').val(data.val.city.toUpperCase());
                                                $('input[name="Buyer2.MailingAddress.State"').val(r.region_code);
                                            }
                                            else if (option == 9) {
                                                $('input[name="Co_Buyer.MailingAddress.City"').val(data.val.city.toUpperCase());
                                                $('input[name="Co_Buyer.MailingAddress.State"').val(r.region_code);
                                            }
                                            else if (option == 10) {
                                                $('input[name="ReferencesCoBuyer[' + position + '].Addresses.City"').val(data.val.city.toUpperCase());
                                                $('input[name="ReferencesCoBuyer[' + position + '].Addresses.State"').val(r.region_code);
                                            }
                                        }

                                        if (option != 8 && option != 9) {

                                            if (option == 1) {
                                                $('input[name="Buyer2.Residence[' + position + '].Address.County"]').val(county.toUpperCase());
                                            }
                                            else if (option == 3) {
                                                $('input[name="Buyer2.Job[' + position + '].Address.County"]').val(county.toUpperCase());
                                            }
                                            else if (option == 4) {
                                                $('input[name="Co_Buyer.Residence[' + position + '].Address.County"]').val(county.toUpperCase());
                                            }
                                            else if (option == 6) {
                                                $('input[name="Co_Buyer.Job[' + position + '].Address.County"]').val(county.toUpperCase());
                                            }

                                        }

                                        swal({
                                            title: 'Zip Code verified!',
                                            type: 'success',
                                            timer: 1000,
                                            showConfirmButton: false
                                        });

                                    }

                                });
                                if (option != 8) {
                                    ObtenerElTaxRate();
                                }

                            }
                            else {
                                if (option == 1)
                                    $('span[data-valmsg-for="Buyer.Residence[' + position + '].Address.ZIPCode"]').text('ZIP Code Not Found');
                                else if (option == 3)
                                    $('span[data-valmsg-for="Buyer.Job[' + position + '].Address.ZIPCode"').text('ZIP Code Not Found');
                                else if (option == 4)
                                    $('span[data-valmsg-for="Co_Buyer.Residence[' + position + '].Address.City"').text('ZIP Code Not Found');
                                else if (option == 6)
                                    $('span[data-valmsg-for="Co_Buyer.Residence[' + position + '].Address.City"').text('ZIP Code Not Found');
                                else if (option == 7)
                                    $('span[data-valmsg-for="References[' + position + '].Addresses.ZipCode"').text('ZIP Code Not Found');
                                else if (option == 8)
                                    $('span[data-valmsg-for="Buyer.MailingAddress.ZIPCode"').text('ZIP Code Not Found');
                                else if (option == 9)
                                    $('span[data-valmsg-for="Co_Buyer.MailingAddress.ZIPCode"').text('ZIP Code Not Found');

                                swal({
                                    title: 'Zip Code not found!',
                                    type: 'info',
                                    timer: 1000,
                                    showConfirmButton: false
                                });
                            }
                        }
                        catch (error) {
                            swal({
                                title: 'Zip Code not found!',
                                type: 'info',
                                timer: 1000,
                                showConfirmButton: false
                            });
                        }


                    });
                    $('#search-zipcode-' + option + '-' + position).empty();

                }
            }).then(function () {
                if (ban == 0) {
                    swal({
                        title: 'Service noy available, check if your current session hasn´t expired or please try again later!',
                        type: 'info',
                        timer: 3000,
                        showConfirmButton: false
                    });
                }
            });


        }

    }

    //funcion para calcular el pago mensual del prestamo
    function CalculatorLoan() {
        console.log($('input[name="AmountFinanced"]').val());
        console.log($('input[name="APR"]').val());
        console.log($('input[name="Terms"]').val());
        console.log($('input[name="DaysDue"]').val());
        console.log($('input[name="SoldDate"]').val());
        console.log($('input[name="DownPaymentPRCO"]').val());

    var infopago = {
        prestamo: $('input[name="AmountFinanced"]').val(),
        interes: $('input[name="APR"]').val(),
        meses: $('input[name="Term"]').val(),
        dias: $('input[name="DaysDue"]').val(),
        pinicial: $('input[name="SoldDate"]').val(),
        downpay: $('input[name="DownPaymentPRCO"]').val(),
    };
        var url= "@Url.Action("calcularpago","LoanCalculator")";
        if (FirstLoad == 1)
        {
            $.ajax({
                type: 'GET',
                url: url,
                data: infopago,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.success) {
                        if (data.pagomensual == 0) {
                            
                            $("input[name='Payment']").val(0.0);
                            $("input[name='CarPayment']").val(0.0);
                            $("input[name='FinalPayment']").val(0.0);
                        } else {
                            
                            $("input[name='Payment']").val(data.pagomensual.toFixed(2));
                            $("input[name='CarPayment']").val(formatearNumero(parseFloat(data.pagomensual).toFixed(2)));
                            $("input[name='FinalPayment']").val(formatearNumero(parseFloat(data.pagomensual).toFixed(2)));
                        }

                        if (data.totalpagos == 0) {
                            $("input[name='TotalPayment']").val(0.0);
                        } else {
                            $("input[name='TotalPayment']").val(formatearNumero(parseFloat(data.totalpagos).toFixed(2)));
                        }

                        if (data.totalsale == 0) {
                            $("input[name='TotalSalesPrice']").val(0.0);
                        } else {
                            $("input[name='TotalSalesPrice']").val(formatearNumero(parseFloat(data.totalsale).toFixed(2)));
                        }

                        if (data.fcharges == 0) {
                            $("input[name='FinanceCharges']").val(0.0);
                        } else {
                            $("input[name='FinanceCharges']").val(formatearNumero(parseFloat(data.fcharges).toFixed(2)));
                        }
                        console.log(data);
                    } else {

                    }


                }//success
            });
        }

    }

    //Function Sales Associate
    var salesAssociateOne = $('select[name="SalesAssociateOne"]').val();
    var salesAssociateTwo = $('select[name="SalesAssociateTwo"]').val();
    SelectedSalesAssociate();
    function SelectedSalesAssociate() {
        auxsalesAssociateOne = $('select[name="SalesAssociateOne"]').val();
        auxsalesAssociateTwo = $('select[name="SalesAssociateTwo"]').val();

        if (!isNull(auxsalesAssociateOne) && isNull(auxsalesAssociateTwo)) {
            $('select[name="SalesAssociateTwo"]').show();
        }
        else if (!isNull(auxsalesAssociateOne) && !isNull(auxsalesAssociateTwo)) {
            $('select[name="SalesAssociateTwo"]').show();
        }
        else if (isNull(auxsalesAssociateOne) && isNull(auxsalesAssociateTwo)) {
            $('select[name="SalesAssociateTwo"]').hide();
        }

         if (!isNull(auxsalesAssociateOne) && !isNull(auxsalesAssociateTwo)) {
             if (auxsalesAssociateOne == auxsalesAssociateTwo) {
                 swal('Select a Different Associate','','info');
                $('select[name="SalesAssociateTwo"]').val('');
            }
        }
    }



    //Search Stock Number
    //Esta funcion solo obtiene la información relacionada con el vehiculo
    function SearchStock(stock, Load) {
        swal({
            title: 'Searching...',
            text: '',
            timer: 2000,
            allowOutsideClick: false,
            showConfirmButton: false,
            onOpen: () => {
                swal.showLoading();
                $.ajax({
                    type: 'GET',
                    url: "/AjaxPrices/SearchStockNumber?stocknumber=" + stock,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (!response.success) {
                            $('span.i-fa').empty();
                            $('span.i-fa').append("<i class='fas fa-times-circle'></i>");
                            $('button[name="btnCreate"]').prop('disabled', true);
                            swal("Invalid Stock Number "+stock,"","error");
                        }
                        else
                        {

                            FirstLoad = 0;
                            SmartFunding(false, false, false, false, false, false, false, false, false, false, false, false, false, false,false);
                            $('span.i-fa').empty();
                            $('span.i-fa').append("<i class='fas fa-check-circle'></i>");
                            $('button[name="btnCreate"]').prop('disabled', false);

                            if (response.Vehicle.Status.match("9") && !response.pendingCMA) {
                                $('a#linkCRM').attr('href', '/Marketing/Edit/' + response.Vehicle.Id);
                                window.existFandId = true;
                                $('select[name="StoreId"]').val(7);//atwater

                                $('input[name="Vehicle.StockNumber"]').prop('readonly', false);
                                $('input[name="CarId"]').val(response.Vehicle.Id);



                                $('input[type=hidden][name="LoanId_"]').val(response.LoanId);
                                $('input[name="Vehicle.StockNumber"]').val(response.Vehicle.StockNumber);

                                $("#gallery").prop("href", "/VehicleGallery?stockNumber=" + response.Vehicle.StockNumber);


                                $('input[name="Vehicle.Year"]').val(response.Vehicle.Year);
                                $('input[name="Vehicle.Make"]').val(response.Vehicle.Make);
                                $('input[name="Vehicle.Make1"]').val(response.Vehicle.Make);
                                $('input[name="Vehicle.Model"]').val(response.Vehicle.Model);
                                $('input[name="Vehicle.Model1"]').val(response.Vehicle.Model);
                                $('input[name="Vehicle.Type"]').val(response.Vehicle.Type);
                                $('input[name="Vehicle.Color"]').val(response.Vehicle.Color);
                                $('input[name="Vehicle.Miles"]').val(response.Vehicle.Miles);
                                $('input[name="Vehicle.VIN"]').val(response.Vehicle.VIN);
                                $('input[name="Vehicle.CYL"]').val(response.Vehicle.CYL);
                                $('input[name="VehicleStatusName"]').val(response.Vehicle.StatusName);
                                dateexp = response.Vehicle.TagExpAux;




                                $('input[name="SalesPricesModal.CommisionCost"]').val(response.Vehicle.CommisionCost);
                                $('input[name="FeesModal.SmogFee"]').val(formatearNumero(parseFloat(response.Vehicle.Smog).toFixed(2)));
                                miles = parseInt(response.Vehicle.Miles);
                                yearsV = parseInt(response.Vehicle.Year);
                                $('#ModalDocCheckList input[name="IdCar"]').val(response.Vehicle.Id);

                                //Transmissión
                                if ($.isNumeric(response.Vehicle.Transmission)) {
                                    if (parseInt(response.Vehicle.Transmission) == 0) {
                                        $('input[name="Vehicle.Transmission"]').val('Manual');
                                    }
                                    else if (parseInt(response.Vehicle.Transmission) == 1) {
                                        $('input[name="Vehicle.Transmission"]').val('Automatic');
                                    }
                                } else {
                                    $('input[name="Vehicle.Transmission"]').val('Not Defined');
                                }

                                $('input[name="Vehicle.LicenseNo"]').val(response.Vehicle.LicenseNo);
                                if (response.Vehicle.TagExpAux == "" || response.Vehicle.TagExpAux == null) {
                                    $('input[name="Vehicle.TagExp"]').val("Not Defined");
                                } else {
                                    $('input[name="Vehicle.TagExp"]').val(response.Vehicle.TagExpAux);
                                }

                                $('input[name="Vehicle.KeyNo"]').val(response.Vehicle.KeyNo);
                                $('input[name="SalesPricesModal.CommisionCost"]').val(formatearNumero(parseFloat(response.Vehicle.CommisionCost).toFixed(2)));
                                //Sales Prices
                                if (response.Prices != null) {
                                priceMax = response.Prices.MaxPrice;
                                priceMin = response.Prices.MinPrice;
                                salePrice = response.Prices.MaxPrice;

                           
                                    $('input[name="SalesPricesModal.Retail"]').val(formatearNumero(parseFloat(response.Prices.KBBRetail).toFixed(2)));
                                    $('input[name="SalesPricesModal.Whosale"]').val(formatearNumero(parseFloat(response.Prices.Whosale).toFixed(2)));
                                

                                $('input[name="SalesPricesModal.CMA"]').val(formatearNumero(parseFloat(response.Prices.CMA).toFixed(2)));
                                $('input[name="SalesPricesModal.Competitors"]').val(formatearNumero(parseFloat(response.Prices.Competitors).toFixed(2)));
                                $('input[name="SalesPricesModal.SuggestedPrice"]').val(formatearNumero(parseFloat(response.Prices.SuggestedPrice).toFixed(2)));
                             
                                $('input[name="SalesPricesModal.MaxPrice"]').val(formatearNumero(parseFloat(response.Prices.MaxPrice).toFixed(2)));
                                $('input[name="SalesPricesModal.MinPrice"]').val(formatearNumero(parseFloat(response.Prices.MinPrice).toFixed(2)));

                                    $('input[name="SalePrice"]').val(formatearNumero(parseFloat(response.Prices.MaxPrice).toFixed(2)));
                                }
                                //Fees
                                if (Load) {
                                    docFee = response.Fees.DocFee;
                                    smogFee = response.Vehicle.Smog;
                                    if (isNull(response.Vehicle.Smog)) { smogFee = 0; }
                                    fees = (parseFloat(docFee) + parseFloat(smogFee)).toFixed(2);
                                    cancellationOption = 0;
                                    $('input[name="FeesModal.DocFee"]').val(response.Fees.DocFee);
                                    $('input[name="FeesModal.SmogCertificationFee"]').val(response.Fees.SmogCertificationFee);
                                    $('input[name="FeesModal.CancellationOption"]').val('0.00');
                                    $('input[name="FeesModal.TireFee"]').val(response.Fees.TireFee);
                                    $('input[name="FeesModal.ElectronicRegistrationFee"]').val(response.Fees.ElectronicRegistrationFee);
                                    $('input[name="FeesModal.StateEmissionExempti"]').val(response.Fees.StateEmissionExempti);
                                    totalFees = parseFloat(docFee) + parseFloat(smogFee) + parseFloat(response.Fees.SmogCertificationFee)
                                        + parseFloat(response.Fees.TireFee) + parseFloat(response.Fees.ElectronicRegistrationFee) + parseFloat(response.Fees.StateEmissionExempti);
                                    $('input[name="FeesModal.Total"]').val(formatearNumero((totalFees).toFixed(2)));
                                    $('input[name="Fees"]').val(formatearNumero((totalFees).toFixed(2)));

                                    ObtenerElTaxRate();
                                }
                                SetFirstPaymentDueAndDaysDue($('input[name="SoldDate"]').val());
                                //Photo
                                $('#ModalViewPhoto img').attr('src', '');
                                if (response.Photo.ExistImage) {
                                    $('#ModalViewPhoto img').attr('src', response.Photo.Hyperlink);
                                }

                                ///STEP 3
                                window.miles = response.Vehicle.Miles;
                                window.years = response.Vehicle.Year;

                                window.WholeSale = response.LTVWhosale;
                                window.retailValue = response.LTVRetail;
                                if (response.Prices != null) {
                                    
                                    $('input[name="SalesPricesModal.Retail"]').val(formatearNumero(parseFloat(response.Prices.KBBRetail).toFixed(2)));
                                    $('input[name="SalesPricesModal.Wholesale"]').val(formatearNumero(parseFloat(response.Prices.Whosale).toFixed(2)));
                                }


                                
                                ObtenerElTaxRate();
                            }
                            else {
                                $('span.i-fa').empty();
                                $('span.i-fa').append("<i class='fas fa-times-circle'></i>");
                                $('button[name="btnCreate"]').prop('disabled', true);
                                if (response.Vehicle.Status.match("8") || response.pendingCMA) {
                                    if (response.pendingCMA) {
                                        $('a#linkCRM').attr('href', '/Marketing/Edit/' + response.Vehicle.Id);
                                    }
                                    else if (response.marketingId > 0) { $('a#linkCRM').attr('href', '/Marketing/Create/' + response.marketingId);
                                    }
                                    swal("Expired CMA", "", "info");
                                }
                                else if (response.Vehicle.Status.match("5")) {
                                    swal("Pending Reconditioning", "", "info");
                                }
                                else if (response.Vehicle.Status.match("4")) {
                                    swal("Pending Check In", "", "info");
                                }
                            }
                            getChanges(0);
                        }
                        FirstLoad = 1;

                    }//success

                })//$.ajax
                }
            });
    }


    function SearchStockByName(stock, Load) {
        swal({
            title: 'Searching...',
            text: '',
            timer: 2000,
            allowOutsideClick: false,
            showConfirmButton: false,
            onOpen: () => {
                swal.showLoading();
                $.ajax({
                    type: 'GET',
                    url: "/AjaxPrices/SearchStockNumberByName?stocknumber=" + stock,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (!response.success) {
                            $('span.i-fa').empty();
                            $('span.i-fa').append("<i class='fas fa-times-circle'></i>");
                            $('button[name="btnCreate"]').prop('disabled', true);
                            swal("Invalid Stock Number " + stock, "", "error");
                        }
                        else {

                            FirstLoad = 0;
                            SmartFunding(false, false, false, false, false, false, false, false, false, false, false, false, false, false,false);
                            $('span.i-fa').empty();
                            $('span.i-fa').append("<i class='fas fa-check-circle'></i>");
                            $('button[name="btnCreate"]').prop('disabled', false);

                            if (response.Vehicle.Status.match("9") && !response.pendingCMA) {
                                $('a#linkCRM').attr('href', '/Marketing/Edit/' + response.Vehicle.Id);
                                window.existFandId = true;
                                $('select[name="StoreId"]').val(7);//atwater

                                $('input[name="Vehicle.StockNumber"]').prop('readonly', false);
                                $('input[name="CarId"]').val(response.Vehicle.Id);
                                $('input[type=hidden][name="LoanId_"]').val(response.LoanId);
                                $('input[name="Vehicle.StockNumber"]').val(response.Vehicle.StockNumber);
                                $('input[name="Vehicle.Year"]').val(response.Vehicle.Year);
                                $('input[name="Vehicle.Make"]').val(response.Vehicle.Make);
                                $('input[name="Vehicle.Make1"]').val(response.Vehicle.Make);
                                $('input[name="Vehicle.Model"]').val(response.Vehicle.Model);
                                $('input[name="Vehicle.Model1"]').val(response.Vehicle.Model);
                                $('input[name="Vehicle.Type"]').val(response.Vehicle.Type);
                                $('input[name="Vehicle.Color"]').val(response.Vehicle.Color);
                                $('input[name="Vehicle.Miles"]').val(response.Vehicle.Miles);
                                $('input[name="Vehicle.VIN"]').val(response.Vehicle.VIN);
                                $('input[name="Vehicle.CYL"]').val(response.Vehicle.CYL);
                                $('input[name="VehicleStatusName"]').val(response.Vehicle.StatusName);
                                $('input[name="SalesPricesModal.CommisionCost"]').val(response.Vehicle.CommisionCost);
                                $('input[name="FeesModal.SmogFee"]').val(formatearNumero(parseFloat(response.Vehicle.Smog).toFixed(2)));
                                miles = parseInt(response.Vehicle.Miles);
                                yearsV = parseInt(response.Vehicle.Year);
                                $('#ModalDocCheckList input[name="IdCar"]').val(response.Vehicle.Id);

                                //Transmissión
                                if ($.isNumeric(response.Vehicle.Transmission)) {
                                    if (parseInt(response.Vehicle.Transmission) == 0) {
                                        $('input[name="Vehicle.Transmission"]').val('Manual');
                                    }
                                    else if (parseInt(response.Vehicle.Transmission) == 1) {
                                        $('input[name="Vehicle.Transmission"]').val('Automatic');
                                    }
                                } else {
                                    $('input[name="Vehicle.Transmission"]').val('Not Defined');
                                }

                                $('input[name="Vehicle.LicenseNo"]').val(response.Vehicle.LicenseNo);
                                if (response.Vehicle.TagExpAux == "" || response.Vehicle.TagExpAux == null) {
                                    $('input[name="Vehicle.TagExp"]').val("Not Defined");
                                } else {
                                    $('input[name="Vehicle.TagExp"]').val(response.Vehicle.TagExpAux);
                                }

                                $('input[name="Vehicle.KeyNo"]').val(response.Vehicle.KeyNo);

                                //Sales Prices
                                priceMax = response.Prices.MaxPrice;
                                priceMin = response.Prices.MinPrice;
                                salePrice = response.Prices.MaxPrice;

                                if (response.prices != null) {
                                    $('input[name="SalesPricesModal.Retail"]').val(formatearNumero(parseFloat(response.Prices.KBBRetail).toFixed(2)));
                                    $('input[name="SalesPricesModal.Whosale"]').val(formatearNumero(parseFloat(response.Prices.Whosale).toFixed(2)));
                               

                                $('input[name="SalesPricesModal.CMA"]').val(formatearNumero(parseFloat(response.Prices.CMA).toFixed(2)));
                                $('input[name="SalesPricesModal.Competitors"]').val(formatearNumero(parseFloat(response.Prices.Competitors).toFixed(2)));
                                $('input[name="SalesPricesModal.SuggestedPrice"]').val(formatearNumero(parseFloat(response.Prices.SuggestedPrice).toFixed(2)));
                                $('input[name="SalesPricesModal.CommisionCost"]').val(formatearNumero(parseFloat(response.Vehicle.CommisionCost).toFixed(2)));
                                $('input[name="SalesPricesModal.MaxPrice"]').val(formatearNumero(parseFloat(response.Prices.MaxPrice).toFixed(2)));
                                $('input[name="SalesPricesModal.MinPrice"]').val(formatearNumero(parseFloat(response.Prices.MinPrice).toFixed(2)));

                                    $('input[name="SalePrice"]').val(formatearNumero(parseFloat(response.Prices.MaxPrice).toFixed(2)));
                                }
                                //Fees
                                if (Load) {
                                    docFee = response.Fees.DocFee;
                                    smogFee = response.Vehicle.Smog;
                                    if (isNull(response.Vehicle.Smog)) { smogFee = 0; }
                                    fees = (parseFloat(docFee) + parseFloat(smogFee)).toFixed(2);
                                    cancellationOption = 0;
                                    $('input[name="FeesModal.DocFee"]').val(response.Fees.DocFee);
                                    $('input[name="FeesModal.SmogCertificationFee"]').val(response.Fees.SmogCertificationFee);
                                    $('input[name="FeesModal.CancellationOption"]').val('0.00');
                                    $('input[name="FeesModal.TireFee"]').val(response.Fees.TireFee);
                                    $('input[name="FeesModal.ElectronicRegistrationFee"]').val(response.Fees.ElectronicRegistrationFee);
                                    $('input[name="FeesModal.StateEmissionExempti"]').val(response.Fees.StateEmissionExempti);
                                    totalFees = parseFloat(docFee) + parseFloat(smogFee) + parseFloat(response.Fees.SmogCertificationFee)
                                        + parseFloat(response.Fees.TireFee) + parseFloat(response.Fees.ElectronicRegistrationFee) + parseFloat(response.Fees.StateEmissionExempti);
                                    $('input[name="FeesModal.Total"]').val(formatearNumero((totalFees).toFixed(2)));
                                    $('input[name="Fees"]').val(formatearNumero((totalFees).toFixed(2)));
                                    ObtenerElTaxRate();
                                }
                                SetFirstPaymentDueAndDaysDue($('input[name="SoldDate"]').val());
                                //Photo
                                $('#ModalViewPhoto img').attr('src', '');
                                if (response.Photo.ExistImage) {
                                    $('#ModalViewPhoto img').attr('src', response.Photo.Hyperlink);
                                }

                                ///STEP 3
                                window.miles = response.Vehicle.Miles;
                                window.years = response.Vehicle.Year;

                                window.WholeSale = response.LTVWhosale;
                                window.retailValue = response.LTVRetail;
                                if (response.prices != null) {
                                    
                                    $('input[name="SalesPricesModal.Retail"]').val(formatearNumero(parseFloat(response.Prices.KBBRetail).toFixed(2)));
                                    $('input[name="SalesPricesModal.Wholesale"]').val(formatearNumero(parseFloat(response.Prices.Whosale).toFixed(2)));
                                }


                                
                                ObtenerElTaxRate();
                            }
                            else {
                                $('span.i-fa').empty();
                                $('span.i-fa').append("<i class='fas fa-times-circle'></i>");
                                $('button[name="btnCreate"]').prop('disabled', true);
                                if (response.Vehicle.Status.match("8") || response.pendingCMA) {
                                    if (response.pendingCMA) {
                                        $('a#linkCRM').attr('href', '/Marketing/Edit/' + response.Vehicle.Id);
                                    }
                                    else if (response.marketingId > 0) {
                                        $('a#linkCRM').attr('href', '/Marketing/Create/' + response.marketingId);
                                    }
                                    swal("Expired CMA", "", "info");
                                }
                                else if (response.Vehicle.Status.match("5")) {
                                    swal("Pending Reconditioning", "", "info");
                                }
                                else if (response.Vehicle.Status.match("4")) {
                                    swal("Pending Check In", "", "info");
                                }
                            }
                            getChanges(0);
                        }
                        FirstLoad = 1;
                    }//success

                })//$.ajax
            }
        });
    }


    function ObtenerElTaxRate() {
        var taxVal = $("select[name='TaxRate_Fees']").val();
        if (taxVal == 0) {
        window.salesTax = 0;
        window.salesTaxRate = 0;
        ban = false;
        buyeyCity_ = $("input[name='Buyer2.Residence[0].Address.City']").val();
        buyerCounty_ = $("input[name='Buyer2.Residence[0].Address.County']").val();
        buyerAddress_= $('input[name="Buyer2.Residence[0].Address.Address"]').val();
        buyerZIP_ = $('input[name="Buyer2.Residence[0].Address.ZIPCode"]').val();
            amount = parseFloat(setSplit($('input[name="SalePrice"]').val())) + parseFloat(setSplit($('input[name="Accessories"]').val())) +
                parseFloat(setSplit($('input[name="FeesModal.SmogFee"]').val())) +
                parseFloat(setSplit($('input[name="FeesModal.DocFee"]').val()));

            if (!isNull(buyeyCity_) && !isNull(buyerAddress_) && !isNull(buyerZIP_)) {
                ban = true;
                window.salesTaxRate = $.SearchTaxRateJSONAPI();
                if (rate == 0) {
                    ban = false;

                }
            }

        if (!ban) {
            storeId_ = $("select[name='StoreId']").val();
            $.each(@Html.Raw(Json.Encode(Model.Stores)), function (i, item) {
                if (parseInt(storeId_) == parseInt(item.Id)) {
                    window.salesTaxRate = $.SearchTaxRateCity(item.StoreName);
                }
            });
        }

        
        window.salesTax = parseFloat(amount) * (parseFloat(window.salesTaxRate) / 100);
        $('span#Rate').text( window.salesTaxRate + '%');
            $('input[type="hidden"][name="SalesTaxRate"]').val(window.salesTaxRate);
            if (FirstLoad == 1) {
                $('input[name="SalesTax"]').val(formatearNumero(parseFloat(window.salesTax).toFixed(2)));
            }

        }
        SetSubTotal();
    }

    //función para obtener SubTotal
    function SetSubTotal() {
        window.salePrice = setSplit($('input[name="SalePrice"]').val());
        window.gapInsurance = setSplit($('input[name="GapInsurance"]').val());
        window.accessories = setSplit($('input[name="Accessories"]').val());
        window.finacedBy = $('input[name="ServiceContractModal.FinancedBy"]:checked').val();
        totalSubtotal = parseFloat(window.salePrice) + parseFloat(accessories) + parseFloat(setSplit($('input[name="Fees"]').val())) +
            parseFloat(setSplit($('input[name="SalesTax"]').val())) + parseFloat(dmvAutoCalculate) + parseFloat(window.gapInsurance);

        if (!isNull(window.finacedBy) && ( window.finacedBy.includes("BANK"))) {
            totalSubtotal = parseFloat(totalSubtotal) + parseFloat(serviceContract);
        }

        if ($.isNumeric(totalSubtotal)) {
            $('input[name="SubTotal"]').val(formatearNumero(parseFloat(totalSubtotal).toFixed(2)));

        } else {
            $('input[name="SubTotal"]').val('0');
        }
        SetTotalDown();
        if (IsSaleFinanced()) {
            if ($.isNumeric($('input[name="Term"]').val()) && parseFloat($('input[name="Term"]').val()) == 1)
                $('input[name="Term"]').val('0');
            CalculatorLoan();

            //$.fn.AddOrRemoveServiceContract($('input[name="FandI.AddServiceContract"]').val());
            //$.fn.AddOrRemoveGapInsurance($('input[name="FandI.AddGapInsurance"]').val());
        }
    }

    function GetTime(years, months) {
        if (years == undefined || years == "")
            years = 0;

        if (months == undefined || months == "")
            months = 0;

        aux = (parseInt(years) * 12) + parseInt(months);
        return aux;
    }


    function SetAmountPayments() {
        terms = setSplit($('input[name="Term"]').val());
        amountFinanced = setSplit($('input[name="AmountFinanced"]').val());
        firstPayment = $('input[name="FirstPaymentDue"]').val();
        if (existDate(firstPayment)) {
            var fechaf = firstPayment.split("/");
            var m = fechaf[0];
            var d = fechaf[1];
            var y = fechaf[2];
            var newDate = new Date(y, m - 1, d);
            var fechaInicio = new Date(y + '-' + m + '-' + d).getTime();
            var endDate = new Date(newDate.setMonth(newDate.getMonth() + terms)).getTime();

            var diff = endDate - fechaInicio;

            console.log(diff / (1000 * 60 * 60 * 24));

            console.log('new Date: ' + newDate);
            newDate.setMonth(newDate.getMonth() + terms);

            console.log('end Date: ' + newDate);
            var totalDaysIntoMonths = endDate - newDate;
            console.log('total days: ' + totalDaysIntoMonths);
            for (i = 0; i < terms; i++) {

            }
        }
    }

     function SetDownPaymentPercent() {
        subt = setSplit($('input[name="SubTotal"]').val());
        down = setSplit($('input[name="TotalDown"]').val());
         aux = down / subt;
         total = aux * 100;
         if ($.isNumeric(total)) {
            $('label#DownPayment').text(total.toFixed(2)+"%");
             /*$('input[name="FandI.IncomeFandI.DownPaymentPercent"]').val(total.toFixed(2));*/
        }
    }

    function setPayment() {
        /* PTI();*/
    }

    //function setDown() {
    function SetTotalDown() {

        SetAmount();
        tradeIn = setSplit($('input[name="TradeIn"]').val());
        differDownPayment = setSplit($('input[name="DifferDownPayment"]').val());
        downPaymentPRCO = setSplit($('input[name="DownPaymentPRCO"]').val());
        sub = setSplit($('input[name="SubTotal"]').val());
        totalPayment = setSplit($('input[name="TotalPayment"]').val());
        financeCharges = setSplit($('input[name="FinanceCharges"]').val());

        totalDown = parseFloat(tradeIn) + parseFloat(differDownPayment) + parseFloat(downPaymentPRCO);
        totalAmount = sub - totalDown;

        var Retail1 = setSplit($('input[name="SalesPricesModal.Retail"]').val());
        var Whosale1 = setSplit($('input[name="SalesPricesModal.Whosale"]').val());
        var RetailP = (Retail1 / totalAmount) * 100;
        var WhosaleP = (Whosale1 / totalAmount) * 100;

        $('input[name="SalesPricesModal.RetailP"]').val(RetailP.toFixed(0) + '%');
        $('input[name="SalesPricesModal.LTVWhosaleP"]').val(WhosaleP.toFixed(0) + '%');

        downP = (downPaymentPRCO / sub) * 100;
            $('#DownPayment').val(downP);
        if ($.isNumeric(totalDown)) {
            $('input[name="TotalDown"]').val(formatearNumero(totalDown.toFixed(2)));
            $('input[name="AmountFinanced"]').val(formatearNumero(totalAmount.toFixed(2)));

            /*$('input[name="FYIFinalAmount"]').val(formatearNumero(totalAmount.toFixed(2)));*/
        } else {
            $('input[name="TotalDown"]').val('0');
            $('input[name="AmountFinanced"]').val(formatearNumero(totalAmount.toFixed(2)));
            /*$('input[name="FYIFinalAmount"]').val(formatearNumero(totalAmount.toFixed(2)));*/
        }
        /*FinalAmount();*/
        SetDownPaymentPercent();
        if (!IsSaleFinanced()) {
            $('input[name="Term"]').val('1');
            $("input[name='APR'],input[name='Payment'],input[name='FinalPayment'],input[name='TotalPayment'],input[name='FinanceCharges']").val('0.00');
            $("input[name='TotalSalesPrice']").val(formatearNumero(totalAmount.toFixed(2)));
        }

        if ($.isNumeric(downPaymentPRCO)) {
        }
    }
        /***********     START  SALES NOTE  ***********/
        $(document.body).on("click", 'button[name="SaveNoteFinance"]', function () {
            $.fn.SaveNoteFinance();
        });
        $(document.body).on("click", 'button[name="CancelSaleNote"]', function () {
            var notcount = $('input[name="efficientCommunication.NotifCount"]').val();

            if (notcount > 0) {
                Swal({
                    title: "You have pending confirmations",
                    text: "",
                    type: "info",
                    showConfirmButton: false,
                    timer: 3000
                }, function () { });
            } else {
                $.fn.CancelSaleNote();
            }
            $.GetPendingNotifications(5);
        });


        $.fn.SaveNoteFinance = function () {
            id = $('input[name="LoanId"]').val();
            note = $('textarea[name="SalesNotes"]').val();
            if (isNull(id)) {
                swal("It is not possible to send the note to save.", "", "info");
            }
            else if (isNull(note)) {
                swal("Enter the note!", "", "info");
            } else {
                swal({
                    title: 'Saving Note...',
                    text: '',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    onOpen: () => {
                        swal.showLoading();
                        $.ajax({
                            type: 'POST',
                            url: "/AjaxSales/SaveNote?id=" + id + "&note=" + note,
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                if (response.success) {
                                    swal(response.message, "", "success");
                                    $('textarea[name="SalesNotes"]').val('');
                                    $.fn.SetSalesNotes(response.salesNotes);
                                }
                                else {
                                    swal(response.message, "", "error");
                                }
                            }
                        });
                    }
                });
            }
        }
        $.fn.CancelSaleNote = function () {
            $('textarea[name="SalesNotes"]').val('');
            $('#ModalSalesNotes').modal('hide');
        }


        $.fn.SetSalesNotes = function (salesNotes) {
            existNote = false;
            $('tbody#sales-notes').empty();
            $.each(salesNotes, function (i, item) {
                existNote = true;
                message = "";
                notif = "";
                if (item.SalesDeptNotif != null && item.SalesDeptNotif.SalesNotesId > 0) {
                    notif = ' <span class="badge badge-info parpadea">Notification Send</span><br />';

                    if (!item.SalesDeptNotif.Status) {
                        message = ' <span class="badge badge-danger">Not Confirmed Per Finance Dept.</span>';
                    }
                    else {
                        message = ' Reception Date: ' + item.SalesDeptNotif.ReceptionDateTime_ + '</p>';
                    }
                }
                $('tbody#sales-notes').append('<tr>' +
                    '<td>' + notif + item.Note + '</td>' +
                    '<td>' + item.DateAux + '</td>' +
                    '<td>' + item.EmployeeName + '</td>' +
                    '</tr>');
            });
            if (!existNote) {
                $('tbody#sales-notes').append('<tr><td colspan="3" class="text-center">NO DATA RESULT</td></tr>');
            }
        }

    /***********     END  SALES NOTES   ***********/
    /***********     START  Search Vehicle   ***********/
    var search_vehicles_result_Id = 0;
        var search_name_result_Id = 0;
        var selltype = 0;
        var operator = 0;
        var vehistatus = 0;
        var salestatus = 2;


    function GETValuesModalSearchVehicle()
    {
        year = $('#ModalSearchVehicle input[name="Year"]').val();
        make = $('#ModalSearchVehicle input[name="Make"]').val();
        model = $('#ModalSearchVehicle input[name="Model"]').val();
        vin = $('#ModalSearchVehicle input[name="VIN"]').val();
        SearchVehicles(make, model, year, vin);
    }

        $(document).ready(function ()
        {
            $('input[name="searchname"],input[name="searchlastname"],input[name="searchmiddlename"]').keyup(function (e) {
                if (e.keyCode == 13) {
                    SearchVehiclebyName($('input[name="searchname"]').val(), "", "", "");
                    $("#titleSearch").text("Search Results");

                }
            });

            $('#SellTypeR').click(function () {
                selltype = 1;
                document.getElementById("SellTypeW").checked = false;
                document.getElementById("SellTypeA").checked = false;
                UpdTable();
            });

            $('#SellTypeW').click(function () {
                selltype = 2;
                document.getElementById("SellTypeR").checked = false;
                document.getElementById("SellTypeA").checked = false;
                UpdTable();
            });

            $('#SellTypeA').click(function () {
                selltype = 0;
                document.getElementById("SellTypeR").checked = false;
                document.getElementById("SellTypeW").checked = false;
                UpdTable();
            });


            $('#VehiStatusT').click(function () {
                vehistatus = 1;
                document.getElementById("VehiStatusA").checked = false;
                document.getElementById("VehiStatusNT").checked = false;
                UpdTable();
            });
            $('#VehiStatusA').click(function () {
                vehistatus = 0;
                document.getElementById("VehiStatusT").checked = false;
                document.getElementById("VehiStatusNT").checked = false;
                UpdTable();
            });
            $('#VehiStatusNT').click(function () {
                vehistatus = 2;
                document.getElementById("VehiStatusA").checked = false;
                document.getElementById("VehiStatusT").checked = false;
                UpdTable();
            });


            $('#SaleStatusS').click(function () {
                salestatus = 1;
                document.getElementById("SaleStatusA").checked = false;
                document.getElementById("SaleStatusU").checked = false;


                document.getElementById("SellTypeW").checked = false;
                document.getElementById("SellTypeA").checked = true;
                document.getElementById("SellTypeR").checked = false;

                document.getElementById("SellTypeW").disabled = false;
                document.getElementById("SellTypeA").disabled = false;
                document.getElementById("SellTypeR").disabled = false;

                UpdTable();

            });
            $('#SaleStatusU').click(function () {
                salestatus = 2;
                document.getElementById("SaleStatusS").checked = false;
                document.getElementById("SaleStatusA").checked = false;


                document.getElementById("SellTypeW").checked = false;
                document.getElementById("SellTypeA").checked = true;
                document.getElementById("SellTypeR").checked = false;

                document.getElementById("SellTypeW").disabled = true;
                document.getElementById("SellTypeA").disabled = true;
                document.getElementById("SellTypeR").disabled = true;
                UpdTable();
            });

            $('#SaleStatusA').click(function () {
                salestatus = 0;
                document.getElementById("SaleStatusS").checked = false;
                document.getElementById("SaleStatusU").checked = false;


                document.getElementById("SellTypeW").checked = false;
                document.getElementById("SellTypeA").checked = true;
                document.getElementById("SellTypeR").checked = false;

                document.getElementById("SellTypeW").disabled = false;
                document.getElementById("SellTypeA").disabled = false;
                document.getElementById("SellTypeR").disabled = false;
                UpdTable();
            });

            $('#EqualCheck').click(function () {
                operator = 0;
                document.getElementById("MoreCheck").checked = false;
                document.getElementById("LessCheck").checked = false;

            });

            $('#MoreCheck').click(function () {
                operator = 1;
                document.getElementById("EqualCheck").checked = false;
                document.getElementById("LessCheck").checked = false;

            });

            $('#LessCheck').click(function () {
                operator = 2;
                document.getElementById("EqualCheck").checked = false;
                document.getElementById("MoreCheck").checked = false;

            });

            $("#search-vehicle-action").click(() => {

                var OptionFilter = $('select[name="OptionFilter"]').val();
                if (OptionFilter == "Year" || OptionFilter == "StockNumber" || OptionFilter == "Maker" || OptionFilter == "Model" || OptionFilter == "VIN" || OptionFilter == "Color" || OptionFilter == "Miles") {
                    UpdTable();

                }
                else if (OptionFilter == "SSN") {
                    SearchVehiclebyName("", "", "", $('#SearchValueSSN').val());
                }
                else if (OptionFilter == "FinanceCo") {
                    SearchVehiclebyFinanceCo($('#SearchValueBank').val());
                }
                else if (OptionFilter == "DateSold") {
                    SearchVehiclebyDateSold($('#SearchValueDate').val(), operator);
                }
                else if (OptionFilter == "CustomerName")
                {
                    let name = $('input[name="searchname"]').val();
                    SearchVehiclebyName(name, "", "", "");
                }

            });
            $("#button-search-search-value").click(() => {
                UpdTable();
                $("#titleSearch").text("Search Results");
            });
            $("#button-search-search-SSN").click(() => {
                SearchVehiclebyName("", "", "", $('#SearchValueSSN').val());
                $("#titleSearch").text("Search Results");

            });
            $("#button-search-search-name").click(() => {
                let name = $('input[name="searchname"]').val();
                SearchVehiclebyName(name, "", "", "");
                $("#titleSearch").text("Search Results");


            });
            $("#button-search-search-date").click(() => {
                SearchVehiclebyDateSold($('#SearchValueDate').val(), operator);
                $("#titleSearch").text("Search Results");

            });
            $('input[name="Search"]').keyup(function (e) {
                if (e.keyCode == 13)
                {
                    var OptionFilter = $('select[name="OptionFilter"]').val();
                    UpdTable();
                    $("#titleSearch").text("Search Results");
                    //GetVehicle();
                }
            });
            $('#SearchValueSSN').keyup(function (e) {
                let OptionFilter = $('select[name="OptionFilter"]').val();
                if (e.keyCode == 13) {

                    if (OptionFilter == "SSN")
                    {
                        SearchVehiclebyName("", "", "", $('#SearchValueSSN').val());
                        $("#titleSearch").text("Search Results");
                    }
                }
            });
            $('#SearchValueDate').keyup(function (e) {
                let OptionFilter = $('select[name="OptionFilter"]').val();
                if (e.keyCode == 13) {

                    if (OptionFilter == "DateSold") {
                        SearchVehiclebyDateSold($('#SearchValueDate').val(), operator);
                        $("#titleSearch").text("Search Results");
                    }
                }
            });
            $('#SearchValueBank').on('change', function () {
                let OptionFilter = $('select[name="OptionFilter"]').val();
                if ($('#SearchValueBank').val()!= 0) {

                    if (OptionFilter == "FinanceCo") {
                        SearchVehiclebyFinanceCo($('#SearchValueBank').val());
                        $("#titleSearch").text("Search Results");
                    }
                }
            });

            $('select[name="OptionFilter"]').change(function () {
                var OptionFilter = $(this).val();
                $("#titleSearch").text("Search Results");
                $('tbody#search-vehicles-result').empty();
                $('tbody#search-name-result').empty();
                $('tbody#search-vehicles-result ').append('<tr id="0"><td colspan="7" class="text-center fontl-bold">NO RESULT FOUND</td></tr > ');
                $('tbody#search-name-result ').append('<tr id="0"><td colspan="10" class="text-center fontl-bold">NO RESULT FOUND</td></tr > ');

                $('input[name="Search"]').val("");
                if (OptionFilter == "CustomerName")
                {
                    $("#Searchtable1").addClass("hidden-lp");
                    $('#CarStyle,#Branchets,#SearchValue').addClass("disabled-lp bg-disable-lp");
                     document.getElementById("SaleStatusS").disabled = true;
                     document.getElementById("SaleStatusU").disabled = true;
                    document.getElementById("SaleStatusA").disabled = true;
                    $("#sale-status-container").addClass("disabled-lp bg-disable-lp");
                    $("#Searchtable2").removeClass("hidden-lp");
                    $("#nameContainer").removeClass("hidden-lp");
                    $("#allContainer").addClass("hidden-lp");
                    $("#ssnContainer").addClass("hidden-lp");
                    $("#dateContainer").addClass("hidden-lp");
                    $("#financeContainer").addClass("hidden-lp");
                    operator = 0;
                    document.getElementById("MoreCheck").checked = false;
                    document.getElementById("LessCheck").checked = false;
                    document.getElementById("EqualCheck").checked = true;

                    document.getElementById("MoreCheck").disabled = true;
                    document.getElementById("LessCheck").disabled = true;
                    document.getElementById("EqualCheck").disabled = true;


                }
                else if (OptionFilter == "SSN") {
                    $("#Searchtable1").addClass("hidden-lp");
                    $('#CarStyle,#Branchets,#SearchValue').addClass("disabled-lp bg-disable-lp");
                    $("#sale-status-container").addClass("disabled-lp bg-disable-lp");
                    document.getElementById("SaleStatusS").disabled = true;
                    document.getElementById("SaleStatusU").disabled = true;
                    document.getElementById("SaleStatusA").disabled = true;
                    $("#Searchtable2").removeClass("hidden-lp");
                    $("#nameContainer").addClass("hidden-lp");
                    $("#allContainer").addClass("hidden-lp");
                    $("#ssnContainer").removeClass("hidden-lp");
                    $("#dateContainer").addClass("hidden-lp");
                    $("#financeContainer").addClass("hidden-lp");
                    operator = 0;
                    document.getElementById("MoreCheck").checked = false;
                    document.getElementById("LessCheck").checked = false;
                    document.getElementById("EqualCheck").checked = true;

                    document.getElementById("MoreCheck").disabled = true;
                    document.getElementById("LessCheck").disabled = true;
                    document.getElementById("EqualCheck").disabled = true;

                }
                else if (OptionFilter == "DateSold")
                {
                    $("#Searchtable1").addClass("hidden-lp");
                    $('#CarStyle,#Branchets,#SearchValue').addClass("disabled-lp bg-disable-lp");
                    $("#sale-status-container").addClass("disabled-lp bg-disable-lp");
                    document.getElementById("SaleStatusS").disabled = true;
                    document.getElementById("SaleStatusU").disabled = true;
                    document.getElementById("SaleStatusA").disabled = true;
                    $("#Searchtable2").removeClass("hidden-lp");
                    $("#nameContainer").addClass("hidden-lp");
                    $("#allContainer").addClass("hidden-lp");
                    $("#ssnContainer").addClass("hidden-lp");
                    $("#dateContainer").removeClass("hidden-lp");
                    $("#financeContainer").addClass("hidden-lp");
                    operator = 0;
                    document.getElementById("MoreCheck").checked = false;
                    document.getElementById("LessCheck").checked = false;
                    document.getElementById("EqualCheck").checked = true;

                    document.getElementById("MoreCheck").disabled = false;
                    document.getElementById("LessCheck").disabled = false;
                    document.getElementById("EqualCheck").disabled = false;

                }
                else if (OptionFilter == "FinanceCo")
                {
                    $("#Searchtable1").addClass("hidden-lp");
                    $('#CarStyle,#Branchets,#SearchValue').addClass("disabled-lp bg-disable-lp");
                    $("#sale-status-container").addClass("disabled-lp bg-disable-lp");
                    document.getElementById("SaleStatusS").disabled = true;
                    document.getElementById("SaleStatusU").disabled = true;
                    document.getElementById("SaleStatusA").disabled = true;
                    $("#Searchtable2").removeClass("hidden-lp");
                    $("#nameContainer").addClass("hidden-lp");
                    $("#allContainer").addClass("hidden-lp");
                    $("#ssnContainer").addClass("hidden-lp");
                    $("#dateContainer").addClass("hidden-lp");
                    $("#financeContainer").removeClass("hidden-lp");
                    operator = 0;
                    document.getElementById("MoreCheck").checked = false;
                    document.getElementById("LessCheck").checked = false;
                    document.getElementById("EqualCheck").checked = true;

                    document.getElementById("MoreCheck").disabled = true;
                    document.getElementById("LessCheck").disabled = true;
                    document.getElementById("EqualCheck").disabled = true;
                }
                else {
                    if (OptionFilter == "Year" || OptionFilter == "Miles" || OptionFilter == "BuyPrice") {
                        operator = 0;
                        document.getElementById("MoreCheck").checked = false;
                        document.getElementById("LessCheck").checked = false;
                        document.getElementById("EqualCheck").checked = true;

                        document.getElementById("MoreCheck").disabled = false;
                        document.getElementById("LessCheck").disabled = false;
                        document.getElementById("EqualCheck").disabled = false;
                    }
                    else {
                        operator = 0;
                        document.getElementById("MoreCheck").checked = false;
                        document.getElementById("LessCheck").checked = false;
                        document.getElementById("EqualCheck").checked = true;

                        document.getElementById("MoreCheck").disabled = true;
                        document.getElementById("LessCheck").disabled = true;
                        document.getElementById("EqualCheck").disabled = true;
                    }
                    $("#Searchtable1").removeClass("hidden-lp");
                    $('#CarStyle,#Branchets,#SearchValue').removeClass("disabled-lp bg-disable-lp");
                    $("#sale-status-container").removeClass("disabled-lp bg-disable-lp");
                    document.getElementById("SaleStatusS").disabled = false;
                    document.getElementById("SaleStatusU").disabled = false;
                    document.getElementById("SaleStatusA").disabled = false;
                    $("#Searchtable2").addClass("hidden-lp");
                    $("#nameContainer").addClass("hidden-lp");
                    $("#allContainer").removeClass("hidden-lp");
                    $("#ssnContainer").addClass("hidden-lp");
                    $("#dateContainer").addClass("hidden-lp");
                    $("#financeContainer").addClass("hidden-lp");
                }
            });
            $('#EmployeesProgress').change(() => {
            
                $('select[name="OptionFilter"]').val("CustomerName").change();
                $("#titleSearch").text("Latest Modified Deals");
                $('tbody#search-vehicles-result').empty();
                $('tbody#search-name-result').empty();
                $('tbody#search-vehicles-result ').append('<tr id="0"><td colspan="7" class="text-center fontl-bold">NO RESULT FOUND</td></tr > ');
                $('tbody#search-name-result ').append('<tr id="0"><td colspan="10" class="text-center fontl-bold">NO RESULT FOUND</td></tr > ');
                SearchVehiclebyEmployeeId($('#EmployeesProgress').val());
            });
        });
   

        function UpdTable()
        {
           if ($('input[name="Search"]').val() != "") {
               swal({
                   title: 'Searching...',
                   text: '',
                   allowOutsideClick: false,
                   showConfirmButton: false,
                   onOpen: () => {
                       swal.showLoading();
                   }
               });
               var data = {
                   'filter1': $('select[name="OptionFilter"]').val(),
                   'value1': $('input[name="Search"]').val(),
                   'style': $('select[name="CarStyle"]').val(),
                   'lot': $('select[name="Branchets"]').val(),
                   'salestatus': salestatus,
                   'op': operator
               }


               $.ajax({
                   type: "GET",
                   url: "/AjaxCars/SearchVehicleFilter",
                   data: data,
                   contentType: 'application/json',
                   dataType: 'json',
                   success: function (response) {
                       $('tbody#search-vehicles-result').empty();
                       swal.close();
                       if (response.success)
                       {
                           $('tbody#search-vehicles-result').empty();
                           console.log(response.vehiclesViewModels);
                           if (response.vehiclesViewModels.length > 0)
                           {
                               response.vehiclesViewModels.forEach((r, i) => {

                                   $('tbody#search-vehicles-result').append('<tr id="' + r.StockNumber + '">' +
                                       '<td>' + r.StockNumber + '</td>' +
                                       '<td>' + r.Year + '</td>' +
                                       '<td>' + r.Make + '</td>' +
                                       '<td>' + r.Model + '</td>' +
                                       '<td>' + r.Color + '</td>' +
                                       '<td>' + r.Miles + '</td>' +
                                       '<td>' + r.VIN + '</td>' +
                                       '</tr>');
                               })
                           }
                           else {
                               $('tbody#search-name-result').append('<tr id="0">' +
                                   '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                                   '</tr>');
                               swal("Unable to find data");
                           }
                       }
                       else {
                           $('tbody#search-name-result').append('<tr id="0">' +
                               '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                               '</tr>');
                           swal("Unable to find data");
                       }
                   }
               });
           }
           else {
               //TODO
           }
       }

    $(document.body).on("click", '#ModalSearchVehicle tbody#search-vehicles-result tr', function () {
        if (!isNull($(this).attr('id'))) {
            window.search_vehicles_result_Id = $(this).attr('id');
            if ($.isNumeric(window.search_vehicles_result_Id) && parseInt(window.search_vehicles_result_Id) > 0) {
                CleanStepOne();
                CleanStepTwo();
                
                CleanStepFour();

                SearchVehicleSales(parseInt(window.search_vehicles_result_Id));
                document.getElementById("BtnBackOnSearch").style.visibility = "visible";
                window.search_vehicles_result_Id = 0;
                window.search_vehicles_result_Id = 0;
                $('tbody#search-vehicles-result').html('<tr><td colspan="7" class="font-bold text-center">NO DATA RESULT</td></tr>');
                $('#ModalSearchVehicle input').val('');
            }
        }
        else {
            window.search_vehicles_result_Id = 0;
        }
    });

    $(document.body).on("click", '#ModalSearchVehicle tbody#search-name-result tr', function () {
        if (!isNull($(this).attr('id'))) {
            window.search_name_result_Id = $(this).attr('id');
            console.log($(this).attr('id'));
            if ($.isNumeric(window.search_name_result_Id) && parseInt(window.search_name_result_Id) > 0) {
                CleanStepOne();
                CleanStepTwo();
                
                CleanStepFour();
                SearchLoanByName(parseInt(window.search_name_result_Id));
                window.search_name_result_Id = 0;

                window.search_name_result_Id = 0;
                $('tbody#search-name-result').html('<tr><td colspan="7" class="font-bold text-center">NO DATA RESULT</td></tr>');
                $('#ModalSearchVehicle input').val('');
                $('#ModalSearchVehicle').modal('hide');
            }
        }
        else {
            window.search_vehicles_result_Id = 0;
        }
    });

    $(document.body).on("click", '#ModalSearchVehicle button#CancelSearch', function () {
        window.search_vehicles_result_Id = 0;
        $('tbody#search-vehicles-result').html('<tr><td colspan="7" class="font-bold text-center">NO DATA RESULT</td></tr>');
        $('#ModalSearchVehicle tbody#search-vehicles-result tr').css("background-color", '#ffffff');
        $('#ModalSearchVehicle button[name="Save"]').prop('disabled', true);
        $('#ModalSearchVehicle input').val('');
    });

    $('.modal').on('shown.bs.modal', function () {
        $(this).find('[autofocus]').focus();
    });
    /*************     START - DMV AUTOCALCULATE   ******************/
    var licenseFee = 0, auxlicenseFee = 0;
    var registrationTransfer = 0, auxregistrationTransfer = 0;

    function DMVFees() {
        auxlicenseFee = setSplit($('input[name="DMVFeesModal.LicenseFee').val());
        auxregistrationTransfer = setSplit($('input[name="DMVFeesModal.RegistrationTransfer').val());
        totalPublicOfficialFees = auxregistrationTransfer + auxlicenseFee;
        $('input[name="DMVFeesModal.PublicOfficialFees"]').val(ReplaceNumberWithCommasRemoveDecimals(totalPublicOfficialFees.toFixed(2)));

    };

    $(document.body).on("click", '#ModalDMV button[name="BtnCancelDMV"]', function () {
        SaveDmvModalInfo();
    });

    $(document.body).on("click", '#ModalDMV button[name="BtnResetDMV"]', function () {
        $('input[name="DMVFeesModal.LicenseFee"]').val('0.00');
        $('input[name="DMVFeesModal.RegistrationTransfer"]').val('0.00');
        $('input[name="DMVFeesModal.PublicOfficialFees"]').val('0.00');
        licenseFee = 0;
        registrationTransfer = 0;
        TotalDMVAutocalculate(0, 0);
        SetSubTotal();
        ObtenerElTaxRate();
        window.clearInterval(window.DMVInterval);
        DMVhref = "https://www.dmv.ca.gov/portal/vehicle-registration/registration-fees/vehicle-registration-fee-calculator/calculate-my-fees/";
        $('iframe[name="DMVFrame"]').attr('src', DMVhref);
    });

    function SaveDmvModalInfo() {
        var AuxRegVal = setSplit($('input[name="DMVFeesModal.RegistrationTransfer"]').val());
        var auxLicFee = setSplit($('input[name="DMVFeesModal.LicenseFee"]').val());
        var val = 0;
        $('input[name="DMVFeesModal.RegistrationTransfer"]').removeClass('validate-error-field');
        $('input[name="DMVFeesModal.LicenseFee"]').removeClass('validate-error-field');
        if (window.TaxRate_Fees == 0 && isNull(AuxRegVal)) {
            $('input[name="DMVFeesModal.RegistrationTransfer"]').addClass('validate-error-field');
            swal("Complete the required fields", "", "info");
            val = 1;
        }

        if(val==0) {
            DMVFees();
            licenseFee = auxlicenseFee;
            registrationTransfer = auxregistrationTransfer;
            TotalDMVAutocalculate(licenseFee, registrationTransfer);
            SetSubTotal();
            ObtenerElTaxRate();
            $('div#ModalDMV').modal('hide');
            window.clearInterval(window.DMVInterval);
            DMVhref = "https://www.dmv.ca.gov/portal/vehicle-registration/registration-fees/vehicle-registration-fee-calculator/calculate-my-fees/";
            $('iframe[name="DMVFrame"]').attr('src', DMVhref);

        }
    }

    function TotalPublicOfficialFees() {
        totalPublicOfficialFees = auxregistrationTransfer + auxlicenseFee;
        $('input[name="DMVFeesModal.PublicOfficialFees"]').val(ReplaceNumberWithCommasRemoveDecimals(totalPublicOfficialFees.toFixed(2)));
    }

    function TotalDMVAutocalculate(licenseFee, registrationTransfer) {
        totalDMVAutocalculate = licenseFee + registrationTransfer;
        if ($.isNumeric(totalDMVAutocalculate)) {
            dmvAutoCalculate = totalDMVAutocalculate;
            $('input[name="DMVAutoCalculate"]').val(totalDMVAutocalculate.toFixed(2));
        } else {
            dmvAutoCalculate = 0;
            $('input[name="DMVAutoCalculate"], input[name="DMVFeesModal.PublicOfficialFees"]').val(0);
        }
    }

    /*************       END - DMV AUTOCALCULATE   ******************/
     /**************** Start - Fees ***********/

    $(document.body).on("click", '#ModalFees input[name="FeesModal.SelectedCancellationOption"]', function () {
        if ($(this).is(':checked')) {
            changeSelectedCancellationOption = true;
            $('input[name="FeesModal.CancellationOption"]').attr('readonly', false);
        }
        else {
            changeSelectedCancellationOption = false;
            $('input[name="FeesModal.CancellationOption"]').attr('readonly', true);
            $('input[name="FeesModal.CancellationOption"]').val(cancellationOption);
            auxdf = setSplit($('input[name="FeesModal.DocFee"]').val());
            auxsf = setSplit($('input[name="FeesModal.SmogFee"]').val());
            auxscf = setSplit($('input[name="FeesModal.SmogCertificationFee"]').val());
            auxsee = setSplit($('input[name="FeesModal.StateEmissionExempti"]').val());
            auxco = setSplit($('input[name="FeesModal.CancellationOption"]').val());
            auxtf = setSplit($('input[name="FeesModal.TireFee"]').val());
            auxerf = setSplit($('input[name="FeesModal.ElectronicRegistrationFee"]').val());
            $('input[name="FeesModal.Total"]').val((parseFloat(auxdf) + parseFloat(auxsf) + parseFloat(auxscf) + parseFloat(auxsee) +
                parseFloat(auxco) + parseFloat(auxtf) + parseFloat(auxerf)).toFixed(2));
        }
    });

    $(document.body).on("click", '#ModalFees button[name=BtnResetFees]', function () {
        if (changeSelectedCancellationOption) {
            $('input[name="FeesModal.SelectedCancellationOption"]').prop('checked', false);
            $('input[name="FeesModal.SelectedCancellationOption"]').val(false);
            $('input[name="FeesModal.CancellationOption"]').attr('readonly', true);
            $('input[name="FeesModal.CancellationOption"]').val(cancellationOption);
        }
        else {
            $('input[name="FeesModal.CancellationOption"]').val(cancellationOption);
        }
        ObtenerElTaxRate();
    });

    $(document.body).on("click", '#ModalFees button[name=BtnCancelFeesModal]', function () {
        SaveFeesModal();
    });

    function SaveFeesModal() {
        auxCancellationOption = setSplitWithDecimals($('input[name="FeesModal.CancellationOption"]').val());
        $('input[name="Fees"]').val($('input[name="FeesModal.Total"]').val());
        cancellationOption = auxCancellationOption;
        ObtenerElTaxRate();
        $('div#ModalFees').modal('hide');
    }
    /********     END - MODAL FEES          *********/

    function SaveSaleTaxModal() {
        window.TaxRate_Fees = $("#TaxRate_Fees").val();
        if (isNull($('input[name="SalesTax"]').val())) ObtenerElTaxRate();
        if ($("#TaxRate_Fees").val() == 0) {
            if (isNull($('input[name="SalesTax"]').val())) ObtenerElTaxRate();

            window.salesTax = 0;
            window.salesTaxRate = 0;
            ban = false;
            amount = parseFloat(setSplit($('input[name="SalePrice"]').val())) + parseFloat(setSplit($('input[name="Accessories"]').val())) + parseFloat(setSplit($('input[name="FeesModal.SmogFee"]').val())) + parseFloat(setSplit($('input[name="FeesModal.DocFee"]').val()));
            window.salesTax = parseFloat(amount) * (parseFloat(window.salesTaxRate) / 100);
        } else {
            CleanFees();
        }
        if ($('select[name="TaxRate_Fees"]').val() == 0) {
            restoreFees();
        }
        else { }
        SetSubTotal();
    }
        $(document.body).on("click", "button[name=BtnResetTaxModal]", function () {
            $("#TaxRate_Fees").val(0);
            window.TaxRate_Fees = 0;
            restoreFees();
        });
        $(document.body).on("click", "button[name=BtnCancelTaxModal]", function () {
            SaveSaleTaxModal();
        });

    $(document.body).on("click", 'button[name="BtnCancelServiceCont"]', function () {
        SaveServiceContract();
    });

    function SaveServiceContract() {

        $('select[name="ServiceContractModal.Company"]').removeClass('validate-error-field');
        $('select[name="ServiceContractModal.Coverage"]').removeClass('validate-error-field');
        $('input[name="ServiceContractModal.Terms"]').removeClass('validate-error-field');
        $('input[name="ServiceContractModal.Miles"]').removeClass('validate-error-field');
        $('input[name="ServiceContractModal.Price"]').removeClass('validate-error-field');
        $('input[name="ServiceContractModal.ContractNo"]').removeClass('validate-error-field');


        auxcompany = $('select[name="ServiceContractModal.Company"]').val();
        auxcoverage = $('select[name="ServiceContractModal.Coverage"]').val();
        auxterms = $('input[name="ServiceContractModal.Terms"]').val();
        auxatMiles = setSplit($('input[name="ServiceContractModal.Miles"]').val());
        auxprice = setSplit($('input[name="ServiceContractModal.Price"]').val());
        auxFinancedBy = $('input[name="ServiceContractModal.FinancedBy"]:checked').val();
        var serviceAlert = "<strong>-</strong>Complete required fields.<br>";
        var serviceValid = true;
        ServiceContNum = $('input[name="ServiceContractModal.ContractNo"]').val().toUpperCase();
        ServicePrice = parseFloat(setSplit($('input[name="ServiceContractModal.Price"]').val()));
        var substring = "";
        var substring2 = "";
        var prefixban = 0;
        substring = ServiceContNum.substring(0, 3);
        substring2 = ServiceContNum.substring(3, ServiceContNum.length);

        var serp = 0;
        $.each(SalePrefixes, function (i, item) {
            if (item.Type == "Service Contract") {
                serp++;
            }
        });



        if (isNull(auxcoverage) && isNull(auxterms) && isNull(auxatMiles) && isNull(auxprice) && isNull(ServiceContNum)) {

        } else {

            if (ServicePrice > 0 && ServiceContNum == "") {
                serviceValid = false;
                $('input[name="ServiceContractModal.ContractNo"]').addClass('validate-error-field');
            } else if (ServicePrice > 0 && ServiceContNum != "") {
                if (ServiceContNum.length < SaleConditions.SCNMin || ServiceContNum.length > SaleConditions.SCNMax) {
                    serviceValid = false;
                    serviceAlert = "<strong>-</strong>Invalid Contract No.<br>";
                    $('input[name="ServiceContractModal.ContractNo"]').addClass('validate-error-field');
                }

                $.each(SalePrefixes, function (i, item) {
                    if (item.Type == "Service Contract") {
                        if (substring == item.Prefix) {
                            prefixban = 1;
                        }
                    }
                });

                if (prefixban == 0 && serp > 0) {
                    serviceValid = false;
                    serviceAlert = "<strong>-</strong>Invalid Contract No..<br>";
                    $('input[name="ServiceContractModal.ContractNo"]').addClass('validate-error-field');
                }
            }

            if (ServicePrice == 0 && ServiceContNum != 0) {

                serviceValid = false;
                $('input[name="ServiceContractModal.Price"]').addClass('validate-error-field');
            } else {
            }

            if (SaleConditions.SC_Coverage == 1) {
                if (isNull(auxcoverage)) {
                    serviceValid = false;
                    $('select[name="ServiceContractModal.Coverage"]').addClass('validate-error-field');
                }
            }

            if (SaleConditions.SC_Terms == 1) {
                if (isNull(auxterms)) {
                    serviceValid = false;
                    $('input[name="ServiceContractModal.Terms"]').addClass('validate-error-field');
                }
            }

            if (SaleConditions.SC_Miles == 1) {
                if (isNull(auxatMiles)) {
                    serviceValid = false;
                    $('input[name="ServiceContractModal.Miles"]').addClass('validate-error-field');
                }
            }

            if (isNull(auxcompany)) {
                serviceValid = false;
                $('select[name="ServiceContractModal.Company"]').addClass('validate-error-field');
            }
            if (isNull(auxFinancedBy)) {
                serviceValid = false;
                $('input[name="ServiceContractModal.FinancedBy"]:checked').addClass('validate-error-field');
            }
        }

        if (serviceValid == true) {
            window.company = auxcompany;
            window.coverage = auxcoverage;
            window.terms = auxterms;
            window.atMiles = auxatMiles;
            window.price = auxprice;
            window.finacedBy = auxFinancedBy;
            window.serviceContract = setSplit($('input[name="ServiceContractModal.Price"]').val());
            $('input[name="ServiceContract"]').val($('input[name="ServiceContractModal.Price"]').val());
            
            $('span#serviceContractFinancedBy').text(auxFinancedBy);
            SetSubTotal();
            $('div#ModalServiceCont').modal('hide');
        } else {

            swal(serviceAlert, "", "info");
        }
    }

    $(document.body).on("click", 'button[name="BtnResetServiceCont"]', function () {
        window.company = 0;
        window.coverage = 0;
        window.terms = 0;
        window.atMiles = 0;
        window.price = 0;
        window.finacedBy = '';
        window.serviceContract = 0;
        $('select[name="ServiceContractModal.Company"]').val('Portfolio Protection');
        $('select[name="ServiceContractModal.Coverage"]').val('');
        $('input[name="ServiceContractModal.Terms"]').val('0');
        $('input[name="ServiceContractModal.Miles"]').val('0');
        $('input[name="ServiceContractModal.Price"]').val('0.00');
        $('input[name="ServiceContractModal.Price"]').val('0.00');
        $('input[name="ServiceContractModal.FinancedBy"]').prop('checked', false);
        $('span#serviceContractFinancedBy').text('');
        
        $('input[name="ServiceContractModal.ContractNo"]').val('');
        SetSubTotal();
    });

    /**************** End - SERVICE CONTRACT *************/
    function isNan_(n) {
        if (isNaN(n)) { return 0; }
        else { return n; }
    }
    // Iframe
    function popUp(URL) {
        modal_height = $(window).height();
        modal_height = $(window).height() - ($(window).height() * 0.25);
        var w = $(window).width() - ($(window).width() * 0.25);
        var h = $(window).height() - ($(window).height() * 0.25);
        var left = Number((screen.width / 2) - (w / 2));
        var tops = Number((screen.height / 2) - (h / 2));
        window.open(URL, '', 'toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=' + w + ', height=' + h + ', top=' + tops + ', left=' + left)
    }

    //clean iframe when be close
    function CloseIFrame() {
        $("iframe").attr('src', '');
        $("#myModaliFrane").modal('hide');

    }

    //Pop up
    function basicPopup(url) {
        $("iframe").attr('src', url);
        $("#myModaliFrane").modal('show');
    }

    function SetHeightModal() {
    }
    SetHeightModal();

    // muestra que esta cargando la alerta
    const showLoading = function () {
        swal({
            title: 'Now loading',
            allowEscapeKey: false,
            allowOutsideClick: false,
            timer: 2000,
            onOpen: () => {
                swal.showLoading();
            }
        }).then(
            () => { },
            (dismiss) => {
                if (dismiss === 'timer') {
                    swal({
                        title: 'Finished!',
                        type: 'success',
                        timer: 2000,
                        showConfirmButton: true
                    })
                }
            }
        )
    };


        $("#form").steps({
            bodyTag: "fieldset",
            transitionEffect: "slideLeft",
            onStepChanging: function (event, currentIndex, newIndex) {

                if (newIndex >= 0 && newIndex <= 2 && currentIndex >= 0 && currentIndex <= 2) {
                    if ($('input[type="hidden"][name="CarId"]').val() == 0) {
                        swal("Missing Stock Number", "", "info");
                        return false;
                    }
                    else {
                        //verifyPrice = $('input[type="hidden"][name="VerifySalePrice"]').val();
                        //if (currentIndex == 0 && newIndex == 1 && verifyPrice == 0) {
                        //    swal("The Sale Price has not yet been verified.", "", "info");
                        //    return false;
                        //}
                        //else 
                        if (currentIndex == 1 && newIndex == 2) {


                            return true;

                        }
                        else {
                            return true;
                        }
                    }
                }
                else {
                    alert('NO ES POSIBLE EL PASO 4 -FALSE * Paso ' + currentIndex + ' a Paso ' + newIndex);
                    return false;
                }

                $(this).validate().settings.ignore = ":disabled,:hidden";
                return $(this).valid();
            },
            onStepChanged: function (event, currentIndex, priorIndex) {
                // currentIndex es el nuevo paso al que se cambio
                // priorindex es el paso anterior
                //Aquí se pueden agregar situaciones o funcionamientos
                //inicializaciones o algo al cambiar al paso solicitado
                if (currentIndex == 0) {
                     /*$('li[name="cleanFYI"]').closest('li').remove();*/
                }
                else if (currentIndex == 1) {

                    //if is possible the sale has been financed.

                }
                else if (currentIndex == 2) {
                    
                }
                else if (currentIndex == 3) {
                }
                $('a[href="#finish"]').hide();
            },
            onFinishing: function (event, currentIndex) {
                $('a[name="SaveSale3"]').show();
                $(this).validate().settings.ignore = ":disabled";
                return $('#form').valid();
            },
            onFinished: function (event, currentIndex) {
                alert("Submitted!");
            },
            goToCustomStep: function (step) {
                var currentStep = $("div[id$=Sections]").steps("getCurrentIndex");

                if (currentStep < step) {
                    while (currentStep !== step) {
                        $("div[id$=Sections]").steps("next");
                        currentStep++;
                    }
                } else if (currentStep > step) {
                    while (currentStep !== step) {
                        $("div[id$=Sections]").steps("previous");
                        currentStep--;
                    }
                }
            }
        });

    //BUTTON SAVE
        function Save(isTrip) {
            if (validationFieldsStepOne(isTrip)) {
                if (validationFieldsStepTwo(isTrip)) {
                    if (/*window.existFandId && */IsSaleFinanced()) {

                        return true;
                    }
                    else {
                        return true;
                    }
                }
                else {
                    return false;
                }
            }
            else {
                return false;
            }
        }

    function DeleteTradeIn(tradeindex) {
        var carid = 0;
        var LoanId = $('input[name="LoanId"]').val();
        if (tradeindex == 1) {
            carid = $('input[name="TradeInModal[0].CardId"]').val();
        }

        if (tradeindex == 2) {
            carid = $('input[name="TradeInModal[1].CardId"]').val();
        }

        if (carid != null && carid != "" && carid != 0) {
            $.ajax({
                url: "/AjaxSales/DeleteTradeIn?CarId=" + carid + "&LoanId=" + LoanId,
                type: "GET",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    window.TradeInValues = response.tradeinlist;
                    ResetTradeIn2();
                    var totalAmount = 0;
                    var financedamount = 0;
                    if (response.tradeinvalue != 0 && response.tradeinvalue != null) {
                        financedamount = response.tradeinvalue;
                    }


                    if (response.tradeinlist.length > 0 && parseFloat(response.tradeinlist[0].Id) > 0) {
                        window.valueTrade = setSplit(response.tradeinlist[0].TradeValue);
                        window.lienTrade = setSplit(response.tradeinlist[0].LienValue);
                        totalAmount = 0;

                        $.each(response.tradeinlist, function (i, item) {

                            if (i == 0) {
                                $('button[name="DeleteTradeIn1"]').removeClass("gone");
                                window.CountTradeIn = 1;
                            }
                            if (i == 1) {
                                window.AddTradeIn();
                            }
                            auxvalueTrade = setSplit(item.TradeValue);
                            auxlienTrade = setSplit(item.LienValue);
                            var auxtotalAmount = auxvalueTrade - auxlienTrade;
                            if (i == 0 && item.Removed != 1)
                                totalAmount = auxtotalAmount;
                            else if (item.Removed != 1)
                                totalAmount += auxtotalAmount;
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].CardId"]').val(item.CardId);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].VIN"]').val(item.VIN);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Year"]').val(item.Year);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].State"]').val(item.State);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Commercial"]').val(item.Commercial);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Make"]').val(item.Make);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Model"]').val(item.Model);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').val(item.SubModel);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].CYL"]').val(item.CYL);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].FuleType"]').val(item.FuleType);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Transmision"]').val(item.Transmision);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Color"]').val(item.Color);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Miles"]').val(item.Miles);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').val(item.LicensNo);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Engine"]').val(item.Engine);
                            if (item.LicensNONE) {
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('checked', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                            } else {
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('checked', false);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', false);
                            }
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].TradeValue"]').val(item.TradeValue);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].LienValue"]').val(item.LienValue);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').val(item.Amount);
                            console.log(item.Amount);
                            console.log($('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').val());
                            if (!isNull(item.Bank)) {
                                $('#tradein-bank-' + i).show();
                                $('input[name="TradeInModal[' + i + '].Bank"]').val(item.Bank);
                            } else {
                                $('#tradein-bank-' + i).hide();
                            }

                            if (item.Removed == 1) {
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].CardId"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].VIN"]').prop('readonly', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Year"]').prop('disabled', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].State"]').prop('disabled', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Commercial"]').prop('disabled', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Make"]').prop('disabled', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Model"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').prop('readonly', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].CYL"]').prop('disabled', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].FuleType"]').prop('disabled', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Transmision"]').prop('disabled', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Color"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Miles"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Engine"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].TradeValue"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LienValue"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').prop('readonly', true);
                                $('input[name="TradeInModal[' + i + '].Bank"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('disabled', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + ']_Removed"]').val(1);

                                $('button[name="DeleteTradeIn' + (i + 1) + '"]').addClass("gone");
                                $('button[name="RestoreTradeIn' + (i + 1) + '"]').removeClass("gone");
                            }
                            else {
                                $('button[name="DeleteTradeIn' + (i + 1) + '"]').removeClass("gone");
                                $('button[name="RestoreTradeIn' + (i + 1) + '"]').addClass("gone");
                            }
                        });
                        $('input[name="TradeIn"]').val(totalAmount.toFixed(2));
                        $('input[name="AmountFinanced"]').val(formatearNumero(parseFloat(financedamount).toFixed(2)));
                        SetAmount();
                    }
                    else {
                        $('input[name="TradeIn"]').val(totalAmount.toFixed(2));
                        $('input[name="AmountFinanced"]').val(formatearNumero(parseFloat(financedamount).toFixed(2)));
                    }

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.status);
                    console.log(thrownError);
                }
            });
        }

        }

        function RestoreTradeIn(tradeindex) {
        var carid = 0;
        var LoanId = $('input[name="LoanId"]').val();
        if (tradeindex == 1) {
            carid = $('input[name="TradeInModal[0].CardId"]').val();
        }

        if (tradeindex == 2) {
            carid = $('input[name="TradeInModal[1].CardId"]').val();
        }

        if (carid != null && carid != "" && carid != 0) {
            $.ajax({
                url: "/AjaxSales/RestoreTradeIn?CarId=" + carid + "&LoanId=" + LoanId,
                type: "GET",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    window.TradeInValues = response.tradeinlist;
                    ResetTradeIn2();
                    var totalAmount = 0;
                    var financedamount = 0;
                    if (response.tradeinvalue != 0 && response.tradeinvalue != null) {
                        financedamount = response.tradeinvalue;
                    }


                    if (response.tradeinlist.length > 0 && parseFloat(response.tradeinlist[0].Id) > 0) {
                        window.valueTrade = setSplit(response.tradeinlist[0].TradeValue);
                        window.lienTrade = setSplit(response.tradeinlist[0].LienValue);
                        totalAmount = 0;

                        $.each(response.tradeinlist, function (i, item) {

                            if (i == 0) {
                                $('button[name="DeleteTradeIn1"]').removeClass("gone");
                                window.CountTradeIn = 1;
                            }
                            if (i == 1) {
                                window.AddTradeIn();
                            }
                            auxvalueTrade = setSplit(item.TradeValue);
                            auxlienTrade = setSplit(item.LienValue);
                            var auxtotalAmount = auxvalueTrade - auxlienTrade;
                            if (i == 0 && item.Removed != 1)
                                totalAmount = auxtotalAmount;
                            else if (item.Removed != 1)
                                totalAmount += auxtotalAmount;
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].CardId"]').val(item.CardId);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].VIN"]').val(item.VIN);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Year"]').val(item.Year);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].State"]').val(item.State);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Commercial"]').val(item.Commercial);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Make"]').val(item.Make);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Model"]').val(item.Model);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').val(item.SubModel);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].CYL"]').val(item.CYL);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].FuleType"]').val(item.FuleType);
                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Transmision"]').val(item.Transmision);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Color"]').val(item.Color);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Miles"]').val(item.Miles);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').val(item.LicensNo);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Engine"]').val(item.Engine);
                            if (item.LicensNONE) {
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('checked', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                            } else {
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('checked', false);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', false);
                            }
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].TradeValue"]').val(item.TradeValue);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].LienValue"]').val(item.LienValue);
                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').val(item.Amount);
                            console.log(item.Amount);
                            console.log($('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').val());
                            if (!isNull(item.Bank)) {
                                $('#tradein-bank-' + i).show();
                                $('input[name="TradeInModal[' + i + '].Bank"]').val(item.Bank);
                            } else {
                                $('#tradein-bank-' + i).hide();
                            }

                            if (item.Removed == 1) {
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].CardId"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].VIN"]').prop('readonly', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Year"]').prop('disabled', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].State"]').prop('disabled', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Commercial"]').prop('disabled', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Make"]').prop('disabled', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Model"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').prop('readonly', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].CYL"]').prop('disabled', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].FuleType"]').prop('disabled', true);
                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Transmision"]').prop('disabled', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Color"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Miles"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Engine"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].TradeValue"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LienValue"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').prop('readonly', true);
                                $('input[name="TradeInModal[' + i + '].Bank"]').prop('readonly', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('disabled', true);
                                $('#ModalTradeIn input[name="TradeInModal[' + i + ']_Removed"]').val(1);

                                $('button[name="DeleteTradeIn' + (i + 1) + '"]').addClass("gone");
                                $('button[name="RestoreTradeIn' + (i + 1) + '"]').removeClass("gone");
                            }
                            else
                            {
                                $('button[name="DeleteTradeIn' + (i + 1) + '"]').removeClass("gone");
                                $('button[name="RestoreTradeIn' + (i + 1) + '"]').addClass("gone");
                            }
                        });
                        $('input[name="TradeIn"]').val(totalAmount.toFixed(2));
                        $('input[name="AmountFinanced"]').val(formatearNumero(parseFloat(financedamount).toFixed(2)));
                        SetAmount();
                    }
                    else {
                        $('input[name="TradeIn"]').val(totalAmount.toFixed(2));
                        $('input[name="AmountFinanced"]').val(formatearNumero(parseFloat(financedamount).toFixed(2)));
                    }

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.status);
                    console.log(thrownError);
                }
            });
        }

    }

    function ResetTradeIn2() {
        window.CountTradeIn = 1;
        var ti = 0;
        $('#ModalTradeIn input[name="TradeInModal[' + ti + ']_Removed"]').val(0);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].CardId"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].VIN"]').prop('readonly', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Year"]').prop('disabled', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].State"]').prop('disabled', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Commercial"]').prop('disabled', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Make"]').prop('disabled', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Model"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].SubModel"]').prop('readonly', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].CYL"]').prop('disabled', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].FuleType"]').prop('disabled', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Transmision"]').prop('disabled', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Color"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Miles"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Engine"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].TradeValue"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LienValue"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Amount"]').prop('readonly', false);
        $('input[name="TradeInModal[' + ti + '].Bank"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNONE"]').prop('disabled', false);

        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].CardId"]').val("");
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].VIN"]').val("");
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Year"]').val(2031);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Make"]').val("OTHER");
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Model"]').val("");
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].SubModel"]').val("");
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].CYL"]').val(0);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].FuleType"]').val("GAS");
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Transmision"]').val(0);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Color"]').val("");
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Miles"]').val(0);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').val("");
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Engine"]').val("");

        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNONE"]').prop('checked', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').prop('readonly', false);

        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].TradeValue"]').val(0.00);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LienValue"]').val(0.00);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Amount"]').val(0.00);
        $('input[name="TradeInModal[' + ti + '].Bank"]').val("");
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].State"]').val(0);
        $('#ModalTradeIn input[name="TradeInModal[1].Commercial"]').val(0);
        $('button[name="DeleteTradeIn1"]').addClass("gone");
        $('button[name="RestoreTradeIn1"]').addClass("gone");


            $('#tradein-bank-' + ti).hide();

        ti = 1;

        $('#ModalTradeIn input[name="TradeInModal[' + ti + ']_Removed"]').val(0);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].CardId"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].VIN"]').prop('readonly', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Year"]').prop('disabled', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].State"]').prop('disabled', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Commercial"]').prop('disabled', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Make"]').prop('disabled', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Model"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].SubModel"]').prop('readonly', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].CYL"]').prop('disabled', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].FuleType"]').prop('disabled', false);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Transmision"]').prop('disabled', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Color"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Miles"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Engine"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].TradeValue"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LienValue"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Amount"]').prop('readonly', false);
        $('input[name="TradeInModal[' + ti + '].Bank"]').prop('readonly', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNONE"]').prop('disabled', false);


        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].CardId"]').val("");
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].VIN"]').val("");
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Year"]').val(2031);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Make"]').val("OTHER");
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Model"]').val("");
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].SubModel"]').val("");
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].CYL"]').val(0);
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].FuleType"]').val("GAS");
        $('#ModalTradeIn select[name="TradeInModal[' + ti + '].Transmision"]').val(0);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Color"]').val("");
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Miles"]').val(0);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').val("");
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Engine"]').val("");

        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNONE"]').prop('checked', false);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LicensNo"]').prop('readonly', false);

        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].TradeValue"]').val(0.00);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].LienValue"]').val(0.00);
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].Amount"]').val(0.00);
        $('input[name="TradeInModal[' + ti + '].Bank"]').val("");
        $('#ModalTradeIn input[name="TradeInModal[' + ti + '].State"]').val(0);
        $('button[name="DeleteTradeIn2"]').addClass("gone");
        $('button[name="RestoreTradeIn2"]').addClass("gone");

            $('#tradein-bank-' + ti).hide();


        $("a#Span_T2").addClass("gone");
        $("#Span_T1").trigger("click");
        $('button[name="BtnRemoveTradeIn"]').addClass("gone");
        $('button[name="BtnAddTradeIn"]').removeClass("gone");
    }
   

        function validationFieldsStepOne(isTrip) {
            validate = true;
            message = "Require Fields <br><br> ";

            $('input,select').removeClass('validate-error-field');
            $('span[data-valmsg-for]').empty();

            carId_ = $('input[name="CarId"]').val();
            stockNumber__ = $('input[name="Vehicle.StockNumber"]').val();
            milesAtSale = setSplit($('input[name="MilesAtSale"]').val());
            ros = $('input[name="ROS"]').val();
            roseDate_ = $('input[name="Date"]').val();

            //TempTag
            tempTag_ = $('input[name="TimeTags"]').val();
            licenseNo_ = $('input[name="Vehicle.LicenseNo"]').val();

            store_ = $('select[name="StoreId"]').val();
            downPayment_ = setSplit($('input[name="DownPaymentPRCO"]').val());
            associates_ = $('select[name="SalesAssociateOne"]').val();
            bankId_ = $('select[name="BankId"]').val();
            dmvAutocalcultae_ = setSplit($('input[name="DMVAutoCalculate"]').val());
            bank_ = $("select[name='BankId']").val();

            apr_ = $('input[name="APR"]').val();
            terms_ = $('input[name="Term"]').val();
            TradeIn = $("input[name='SmartFundingFiles.TradeInValue']");
            TradeInCertfile = $("input[name='SmartFundingFiles.TradeInCertificate']");

            TI = setSplit($('input[name="TradeIn"]').val());
            TI_0 = setSplit($('input[name="TradeInModal[0].TradeValue"]').val());
            TI_0_lien = setSplit($('input[name="TradeInModal[0].LienValue"]').val());

            if (TI != 0 &&  window.TradeInDoc == 0 && ($(TradeIn)[0].files == null || $(TradeIn)[0].files.length == 0)) {
                message = 'Upload Trade-In "Reg262" <br>';
                validate = false;
            }
            if (TI_0 > 0 && TI_0_lien <= 0 && window.TradeInCert == 0 && ($(TradeInCertfile)[0].files == null || $(TradeInCertfile)[0].files.length == 0)) {
                message = 'Upload Trade-In "Reg227" or Certificate of Title <br>';
                validate = false;
            }




            if ($.isNumeric(carId_) && parseInt(carId_) <= 0) {
                validate = false;
                message = message + " <strong>1.- </strong> Enter a vehicle stocknumber. <br>";

                $('input[name="Vehicle.StockNumber"]').addClass('validate-error-field');
            }


            if (isTrip)
            {
                if (window.TaxRate_Fees == 0  && (isNull(dmvAutocalcultae_) || !$.isNumeric(dmvAutocalcultae_))) {
                    validate = false;
                    console.log('DMV ERROR');
                    message = "DMV Auto Calculate is Required.<br>";

                    $('span[data-valmsg-for="DMVAutoCalculate"]').text('DMV Auto Calculate is Required!');

                }

                if (isNull(stockNumber__)) {
                    validate = false;
                    message = message + " <strong>1.- </strong> Vehicle stock number cant be empty. <br>";
                    $('input[name="Vehicle"]').addClass('validate-error-field');
                }


                if (isNull(milesAtSale)) {
                    validate = false;
                    message = message + " <strong>14.- </strong> Miles at sale can´t be empty. <br>";
                    $('input[name="MilesAtSale"]').addClass('validate-error-field');
                }

                if (SaleConditions.ROSRequired == 1) {
                    var RosPrefix = "";
                    var prefban = 0;
                    RosPrefix = ros.substring(0, 2);
                    var rosinvalid = 0;

                    var rosp = 0;
                    $.each(SalePrefixes, function (i, item) {
                        if (item.Type == "ROS") {
                            rosp++;
                        }
                    });


                    if (isNull(ros)) {
                        validate = false;
                        message = message + " ROS cant be empty.<br>";
                        $('input[name="ROS"]').addClass('validate-error-field');
                    } else {
                        if (ros.length < SaleConditions.ROSMin || ros.length > SaleConditions.ROSMax) {
                            rosinvalid = 1;
                        }

                        $.each(SalePrefixes, function (i, item) {
                            if (item.Type == "ROS") {
                                if (RosPrefix == item.Prefix) {
                                    prefban = 1;
                                }
                            }
                        });

                        if (prefban == 0 && rosp > 0) {
                            rosinvalid = 1;
                        }
                    }

                    if (rosinvalid == 1) {
                        validate = false;
                        message = message + "Invalid ROS.<br>";
                        $('input[name="ROS"]').addClass('validate-error-field');
                    }

                }

                if (isNull(roseDate_) || !existDate(roseDate_)) {
                    $('input[name="Date"]').datepicker('setDate', new Date(@Html.Raw(Json.Encode(DateTime.Now.ToString("MM/dd/yyyy")))));

                    aux = ROSDATEValidate();
                    if (aux == -1) {
                        message = message + "<strong>16.-</strong> ROS DATE must be not highest of Sold Date.<br>";
                        validate = false;
                        $('input[name="Date"]').addClass('validate-error-field');

                    }
                    else if (aux == 0) {
                        message = message + @Html.Raw(Json.Encode(ViewBag.UserFullName))+"! Unable to upload. Contact management for assistance.<br>";
                        validate = false;
                        $('input[name="Date"]').addClass('validate-error-field');
                    }
                }

                if (isNull(licenseNo_) || licenseNo_.includes("NONE")) {
                    if (isNull(tempTag_) || tempTag_.includes("NONE") || $('input[name="SelectTimeTags"]').prop('checked')) {
                        validate = false;
                        message = message + "<strong>17.-</strong>  Specify a temporary tag.<br>";
                        $('input[name="TimeTags"]').addClass('validate-error-field');
                    }
                }

                if (isNull(store_) || ($.isNumeric(store_) && parseInt(store_) <= 0)) {
                    validate = false;
                    message = message + "<strong>---</strong> Selected a Sales Lot.<br>";
                    $('select[name="StoreId"]').addClass('validate-error-field');

                }

                if (isNull(associates_) || ($.isNumeric(associates_) && parseInt(associates_) <= 0)) {
                    validate = false;
                    message = message + "<strong> ---</strong> Selected a Sales Associate.<br>";
                    $('select[name="SalesAssociateOne"]').addClass('validate-error-field');
                    $('select[name="SalesAssociateTwo"]').addClass('validate-error-field');
                }

                window.finacedBy = $('input[name="ServiceContractModal.FinancedBy"]:checked').val();
                var SC = $('input[name="ServiceContract"]').val();

                if (!isNull(SC)) {
                    if (window.finacedBy.includes("CASH") || window.finacedBy.includes("PAYLINK")) {
                        countReceives = 0;
                        $('input[name="ReceivesNotebook[0].Type"]').val(1);
                        $('input[name="ReceivesNotebook[1].Type"]').val(2);
                        $('input[name="ReceivesNotebook[2].Type"]').val(3);
                        $('input[name="ReceivesNotebook[3].Type"]').val(3);
                        $('input[name="ReceivesNotebook[4].Type"]').val(3);
                        var d = $('input[name="DownPaymentPRCO"]').val();
                        var s = setSplit(d);
                        $('input[name="ReceivesNotebook[0].PRCO"]').val(parseFloat(s).toFixed(2));
                        for (i = 0; i < 5; i++) {
                            if (!isNull($('input[name="ReceivesNotebook[' + i + '].PRCO"]').val())
                                && !isNull($('input[name="ReceivesNotebook[' + i + '].Notebook"]').val())) {
                                countReceives++;
                            }
                        }
                        if (countReceives == 0) {
                            validate = false;
                            $('input[name="ReceivesNotebook[1].PRCO"]').addClass('validate-error-field');
                            $('input[name="ReceivesNotebook[1].Notebook"]').addClass('validate-error-field');
                            $('input[name="ReceivesNotebook[0].Notebook"]').addClass('validate-error-field');
                        }
                    }
                }

                if (IsSaleFinanced()) {
                    bank_ = $("select[name='BankId'] option:selected").text();
                    if ($("select[name='BankId']").val() == 0) {
                        message = message + "<strong>33.-</strong> Selected a Bank.<br>";
                        validate = false;
                        $("select[name='BankId']").addClass('validate-error-field');

                    }
                    if (isNull(apr_) && $("select[name='BankId']").val() != "31") {
                        message = message + "<strong>34.-</strong> APR cant be 0.<br>";
                        validate = false;
                        $('input[name="APR"]').addClass('validate-error-field');

                    }

                    if (isNull(terms_) && $("select[name='BankId']").val() != "31") {
                        message = message + "<strong>35.-</strong> Month term cant be 0.<br>";
                        validate = false;
                        $('input[name="Term"]').addClass('validate-error-field');

                    }
                }
            }// End if(isTrip)


            var amount = 0;
            var accAlert = "";
            var accValid = true;
            var substring = "";
            var substring2 = "";
            var substring3 = "";
            var prefixban = 0;

            var tfp = 0;
            var spp = 0;
            var evp = 0;

            $.each(SalePrefixes, function (i, item) {
                if (item.Type == "Theft Code") {
                    tfp++;
                }
            });
            $.each(SalePrefixes, function (i, item) {
                if (item.Type == "Surface Protection") {
                    spp++;
                }
            });
            $.each(SalePrefixes, function (i, item) {
                if (item.Type == "EV Charge") {
                    evp++;
                }
            });


            $('input[name="Accesories[0].AmountAux"]').removeClass('validate-error-field');
            $('input[name="Accesories[1].AmountAux"]').removeClass('validate-error-field');
            $('input[name="Accesories[2].AmountAux"]').removeClass('validate-error-field');

            $('input[name="Accesories[0].ContractNo"]').removeClass('validate-error-field');
            $('input[name="Accesories[1].ContractNo"]').removeClass('validate-error-field');
            $('input[name="Accesories[2].ContractNo"]').removeClass('validate-error-field');



            Accesorie1 = setSplit($('input[name="Accesories[0].AmountAux"]').val());
            Accesorie2 = setSplit($('input[name="Accesories[1].AmountAux"]').val());
            Accesorie3 = setSplit($('input[name="Accesories[2].AmountAux"]').val());

            AccesorieCont1 = $('input[name="Accesories[0].ContractNo"]').val().toUpperCase();
            AccesorieCont2 = $('input[name="Accesories[1].ContractNo"]').val().toUpperCase();
            AccesorieCont3 = $('input[name="Accesories[2].ContractNo"]').val().toUpperCase();

            substring = AccesorieCont1.substring(0, 3);
            substring2 = AccesorieCont2.substring(0, 3);
            substring3 = AccesorieCont3.substring(0, 3);



            for (var i = 0; i < 3; i++) {
                var AccesoriePrice = setSplit($('input[name="Accesories[' + i + '].AmountAux"]').val());
                amount = parseFloat(parseFloat(amount) + parseFloat(AccesoriePrice));
            }
            //--------Theft code validation
            if (Accesorie1 > 0 && AccesorieCont1 == 0) {
                accValid = false;
                $('input[name="Accesories[0].ContractNo"]').addClass('validate-error-field');
            } else if (Accesorie1 > 0 && AccesorieCont1 != 0) {
                if (AccesorieCont1.length < SaleConditions.TfCNMin || AccesorieCont1.length > SaleConditions.TfCNMax) {
                    accValid = false;
                    $('input[name="Accesories[0].ContractNo"]').addClass('validate-error-field');
                }

                $.each(SalePrefixes, function (i, item) {
                    if (item.Type == "Theft Code") {
                        if (substring == item.Prefix) {
                            prefixban = 1;
                        }
                    }
                });
                if (prefixban == 0 && tfp > 0) {
                    accValid = false;
                    $('input[name="Accesories[0].ContractNo"]').addClass('validate-error-field');
                }
            }

            if (Accesorie1 == 0 && AccesorieCont1 != 0) {
                accValid = false;
                $('input[name="Accesories[0].AmountAux"]').addClass('validate-error-field');
            } else {
            }
            //---------Surface Protect. Validation
            prefixban = 0;
            if (Accesorie2 > 0 && AccesorieCont2 == 0) {
                accValid = false;
                $('input[name="Accesories[1].ContractNo"]').addClass('validate-error-field');
            } else if (Accesorie2 > 0 && AccesorieCont2 != 0) {
                if (AccesorieCont2.length < SaleConditions.SpCNMin || AccesorieCont2.length > SaleConditions.SpCNMax) {
                    accValid = false;
                    $('input[name="Accesories[1].ContractNo"]').addClass('validate-error-field');
                }

                $.each(SalePrefixes, function (i, item) {
                    if (item.Type == "Surface Protection") {
                        if (substring2 == item.Prefix) {
                            prefixban = 1;
                        }
                    }
                });

                if (prefixban == 0 && spp > 0) {
                    accValid = false;
                    $('input[name="Accesories[1].ContractNo"]').addClass('validate-error-field');
                }
            }


            if (Accesorie2 == 0 && AccesorieCont2 != 0) {
                accValid = false;
                $('input[name="Accesories[1].AmountAux"]').addClass('validate-error-field');
            } else {
            }

            prefixban = 0;
            //-----------EV Charge Validation
            if (Accesorie3 > 0 && AccesorieCont3 == 0) {
                accValid = false;
                $('input[name="Accesories[2].ContractNo"]').addClass('validate-error-field');
            } else if (Accesorie3 > 0 && AccesorieCont3 != 0) {
                if (AccesorieCont3.length < SaleConditions.EvCNMin || AccesorieCont3.length > SaleConditions.EvCNMax) {
                    accValid = false;
                    $('input[name="Accesories[2].ContractNo"]').addClass('validate-error-field');
                }

                $.each(SalePrefixes, function (i, item) {
                    if (item.Type == "EV Charge") {
                        if (substring3 == item.Prefix) {
                            prefixban = 1;
                        }
                    }
                });

                if (prefixban == 0 && evp > 0) {
                    accValid = false;
                    $('input[name="Accesories[2].ContractNo"]').addClass('validate-error-field');
                }
            }


            if (Accesorie3 == 0 && AccesorieCont3 != 0) {
                accValid = false;
                $('input[name="Accesories[2].AmountAux"]').addClass('validate-error-field');
            } else {
            }

            if (accValid == true) {

            } else {
                validate = false;
                message = message + "<strong>-</strong>Accesories.<br>";
            }


            $('select[name="ServiceContractModal.Company"]').removeClass('validate-error-field');
            $('select[name="ServiceContractModal.Coverage"]').removeClass('validate-error-field');
            $('input[name="ServiceContractModal.Terms"]').removeClass('validate-error-field');
            $('input[name="ServiceContractModal.Miles"]').removeClass('validate-error-field');
            $('input[name="ServiceContractModal.Price"]').removeClass('validate-error-field');
            $('input[name="ServiceContractModal.ContractNo"]').removeClass('validate-error-field');


            var auxcompany = $('select[name="ServiceContractModal.Company"]').val();
            var auxcoverage = $('select[name="ServiceContractModal.Coverage"]').val();
            var auxterms = $('input[name="ServiceContractModal.Terms"]').val();
            var auxatMiles = setSplit($('input[name="ServiceContractModal.Miles"]').val());
            var auxprice = setSplit($('input[name="ServiceContractModal.Price"]').val());
            var auxFinancedBy = $('input[name="ServiceContractModal.FinancedBy"]:checked').val();
            var serviceAlert = "<strong>-</strong>Complete required fields.<br>";
            var serviceValid = true;
            var ServiceContNum = $('input[name="ServiceContractModal.ContractNo"]').val().toUpperCase();
            var ServicePrice = parseFloat(setSplit($('input[name="ServiceContractModal.Price"]').val()));
            var substringser = "";
            var prefixban = 0;
            substringser = ServiceContNum.substring(0, 3);

            var serp = 0;
            $.each(SalePrefixes, function (i, item) {
                if (item.Type == "Service Contract") {
                    serp++;
                }
            });



            if (isNull(auxcoverage) && isNull(auxterms) && isNull(auxatMiles) && isNull(auxprice) && isNull(ServiceContNum)) {

            } else {

                if (ServicePrice > 0 && ServiceContNum == "") {
                    serviceValid = false;
                    $('input[name="ServiceContractModal.ContractNo"]').addClass('validate-error-field');
                } else if (ServicePrice > 0 && ServiceContNum != "") {
                    if (ServiceContNum.length < SaleConditions.SCNMin || ServiceContNum.length > SaleConditions.SCNMax) {
                        serviceValid = false;
                        $('input[name="ServiceContractModal.ContractNo"]').addClass('validate-error-field');
                    }

                    $.each(SalePrefixes, function (i, item) {
                        if (item.Type == "Service Contract") {
                            if (substringser == item.Prefix) {
                                prefixban = 1;
                            }
                        }
                    });

                    if (prefixban == 0 && serp > 0) {
                        serviceValid = false;
                        $('input[name="ServiceContractModal.ContractNo"]').addClass('validate-error-field');
                    }
                }

                if (ServicePrice == 0 && ServiceContNum != 0) {

                    serviceValid = false;
                    $('input[name="ServiceContractModal.Price"]').addClass('validate-error-field');
                } else {
                }

                //------------------------------------------------------------------------------------------------------
                if (SaleConditions.SC_Coverage == 1) {
                    if (isNull(auxcoverage)) {
                        serviceValid = false;
                        $('select[name="ServiceContractModal.Coverage"]').addClass('validate-error-field');
                    }
                }

                if (SaleConditions.SC_Terms == 1) {
                    if (isNull(auxterms)) {
                        serviceValid = false;
                        $('input[name="ServiceContractModal.Terms"]').addClass('validate-error-field');
                    }
                }

                if (SaleConditions.SC_Miles == 1) {
                    if (isNull(auxatMiles)) {
                        serviceValid = false;
                        $('input[name="ServiceContractModal.Miles"]').addClass('validate-error-field');
                    }
                }

                if (isNull(auxcompany)) {
                    serviceValid = false;
                    $('select[name="ServiceContractModal.Company"]').addClass('validate-error-field');
                }
                if (isNull(auxFinancedBy)) {
                    serviceValid = false;
                    $('input[name="ServiceContractModal.FinancedBy"]:checked').addClass('validate-error-field');
                }

            }

            if (serviceValid == true) {

            } else {
                validate = false;
                message = message + "<strong>-</strong>Service Contract.<br>";
            }


            var gapVal = true;
            var gapAlert = "<strong>-</strong>Complete required fields.<br>";
            var bankLobel = false;
            var Gapamount = parseFloat(setSplit($('input[name="GapIncurance.Amount"]').val()));
            var GapContract = $('input[name="GapInsurance_ContractNo"]').val().toUpperCase();
            var GapCompany = $('select[name="GapInsurance_Company"]').val();
            var GapProPlan = $('select[name="Protection_Plan"]').val();

            var substringgap = "";
            var prefixban = 0;
            substringgap = GapContract.substring(0, 3);

            var gapp = 0;
            $.each(SalePrefixes, function (i, item) {
                if (item.Type == "Gap Incurance") {
                    gapp++;
                }
            });



            if (isNull(Gapamount) && isNull(GapContract)) {

            } else {
                if ($("input[name='GapRadio_Lobel']").is(':checked')) {
                    bankLobel = true;
                }

                if (Gapamount > 0 && bankLobel == false && GapContract == "") {
                    gapVal = false;
                    $('input[name="GapInsurance_ContractNo"]').addClass('validate-error-field');
                } else if (Gapamount > 0 && GapContract != "") {
                    if (GapContract.length < SaleConditions.GapCNMin || GapContract.length > SaleConditions.GapCNMax) {
                        gapVal = false;
                        $('input[name="GapInsurance_ContractNo"]').addClass('validate-error-field');
                    }


                    $.each(SalePrefixes, function (i, item) {
                        if (item.Type == "Gap Incurance") {
                            if (substringgap == item.Prefix) {
                                prefixban = 1;
                            }
                        }
                    });

                    if (prefixban == 0 && gapp > 0) {
                        gapVal = false;
                        $('input[name="GapInsurance_ContractNo"]').addClass('validate-error-field');
                    }

                }

                if (Gapamount == 0 && GapContract != 0) {
                    gapVal = false;
                    $('input[name="GapIncurance.Amount"]').addClass('validate-error-field');
                } else {
                }

                if (SaleConditions.Gap_PaidTo == 1) {
                    if (isNull(GapCompany)) {
                        serviceValid = false;
                        $('select[name="GapInsurance_Company"]').addClass('validate-error-field');
                    }
                }

                if (SaleConditions.Gap_ProtPlan == 1) {
                    if (isNull(GapProPlan)) {
                        serviceValid = false;
                        $('select[name="Protection_Plan"]').addClass('validate-error-field');
                    }
                }

            }

            if (gapVal == true) {
            } else {
                validate = false;
                message = message + "<strong>-</strong>Gap Incurance.<br>";
            }
            //------------------

            if (!validate) {
                Swal.fire({
                    title: '<div style="display:flex; flex-direction: row; justify-content: center; width:300px;"> <p style="line-height: 30px;"><br> ' + message + ' </p> </div>',
                    text: '',
                    type: 'info',
                    customClass: 'swal-wide',
                    });
                //info error warning success
            }
            return validate
        }

        //Función para validar el Step 2
        function validationFieldsStepTwo(isTrip) {

            message = "Require Fields <br><br>";

            //remover el background de validacion de error del field
            $('input,select').removeClass('validate-error-field');
            $('span[data-valmsg-for="BuyerReferences"]').empty();
            var validation = true;
            var validationAux = false;
            var isLoanFinanced = IsSaleFinanced();

            var ProofDPval = $("input[name='SmartFundingFiles.ProofOfDownPayment']");
            var TradeInval = $("input[name='SmartFundingFiles.TradeInValue']");
            var driverlicenseval = $("input[name='SmartFundingFiles.DriversLicense']");
            var insurancecardval = $("input[name='SmartFundingFiles.InsuranceCard']");
            var cobuydriverlicenseval = $("input[name='SmartFundingFiles.DriversLicenseCB']");
            var cobuyrernameval = $("input[name='Co_Buyer.Name']").val();
            var buyernameval = $("input[name='Buyer2.Name']").val();
            var TI = setSplit($('input[name="TradeIn"]').val());

            var LTI = (TI != 0 && window.TradeInDoc == 0 && ($(TradeInval)[0].files == null || $(TradeInval)[0].files.length == 0));
            //proofDownPayment
            if (downPaymentPRCO > 0 && window.POI == 0 && ($(ProofDPval)[0].files == null || $(ProofDPval)[0].files.length == 0)) {
                //ProofDifferDownPayment
                message = message + "Upload Proof of Down Payment <br>";
                validation = false;
            }
            else if (TI != 0 && window.TradeInDoc == 0 && ($(TradeInval)[0].files == null || $(TradeInval)[0].files.length == 0)) {
                message = message + 'Upload Trade-In "Reg262" <br>';
                validation = false;
            }
            else {

            }

            if (isTrip) {
                if (buyernameval != "") {
                    if (window.driverLicense == 0 && ($(driverlicenseval)[0].files == null || $(driverlicenseval)[0].files.length == 0)) {
                        message = message + 'Upload Driver´s License <br>';
                        validation = false;
                    }
                }

                if (buyernameval != "") {
                    if (window.insuranceCard == 0 && ($(insurancecardval)[0].files == null || $(insurancecardval)[0].files.length == 0)) {
                        message = message + 'Upload Insurance Card Doc. <br>';
                        validation = false;
                    }
                }


                if (cobuyrernameval != "") {
                    if (window.driverLicenseCB == 0 && ($(cobuydriverlicenseval)[0].files == null || $(cobuydriverlicenseval)[0].files.length == 0)) {
                        message = message + 'Upload CoBuyer Driver´s License <br>';
                        validation = false;
                    }
                }
            }


            // PRINCIPAL INFO BUYER
            for (i = 0; i < 2; i++) {
                customer = "Buyer2";
                var customeraux = "Buyer's";
                cobuyerIsRequired = false;

                if (i == 1) {
                    customer = "Co_Buyer";
                    customeraux = "Co_Buyer";
                }

                buyer_name = $('input[name="' + customer + '.Name"]');
                buyer_lastName = $('input[name="' + customer + '.LastName"]');
                buyer_ssnNum = $('input[name="' + customer + '.ITIN_Number"]');
                buyer_ssnType = $('select[name="' + customer + '.ITIN_SSN"]');
                buyer_Exp = $('input[name="' + customer + '.Expiration"]');
                buyer_drivLicNum = $('input[name="' + customer + '.DriverLic_Number"]');
                buyer_drivLicType = $('select[name="' + customer + '.DriverLicIDType"]');
                buyer_Phone = $('input[name="' + customer + '.Phone"]');
                buyer_Ref = $('select[name="' + customer + '.ReferredBy"]');
                buyer_Birth = $('input[name="' + customer + '.DateBirth"]');
                buyer_Ownership = $('select[name="' + customer + '.Ownership"]');
                buyer_Payment = $('input[name="' + customer + '.Payment"]');
                buyer_lenguage = $("select[name='Buyer2.Lenguage']");

                if (i == 1) {
                    //if the name and lastname of the cobuyer are different of null , de cobuyer is required
                    if (!isNull($(buyer_name).val()) || !isNull($(buyer_lastName).val())) {
                        cobuyerIsRequired = true;
                    }
                }
                if (i == 0 || (i == 1 && cobuyerIsRequired)) {
                    if (isNull($(buyer_name).val())) {
                       /* message = message + "1.- " + customeraux + " name cant be empty <br>";*/
                        validation = false;
                        validationAux = true;
                        $(buyer_name).addClass('validate-error-field');
                    }
                    if (isNull($(buyer_lastName).val())) {
                    /* message = message + "2.- " + customeraux + " last name cant be empty <br>";*/
                        validationAux = true;
                        validation = false;
                        $(buyer_lastName).addClass('validate-error-field');
                    }
                    if (isTrip && isLoanFinanced && isNull($(buyer_ssnNum).val())) {
                    /*message = message + "4.- Specify social secure number for the " + customeraux + " <br>";*/
                        validationAux = true;
                        validation = false;
                        $(buyer_ssnNum).addClass('validate-error-field');
                    }
                    if (isTrip && isLoanFinanced && isNull($(buyer_ssnType).val())) {
                        /*message = message + "4.- Specify social secure type for the " + customeraux + " <br>";*/
                        validation = false;
                        $(buyer_ssnType).addClass('validate-error-field');
                    }
                    if (isNull($(buyer_Birth).val()) || !existDate($(buyer_Birth).val())) {
                    /*  message = message + "5.- Select a valid birth date for the " + customeraux + " <br>";*/
                        validationAux = true;
                        validation = false;
                        $(buyer_Birth).addClass('validate-error-field');
                    }
                    if (isTrip && isLoanFinanced && isNull($(buyer_drivLicNum).val())) {
                    /*  message = message + "6.- Specify driver license number for the " + customeraux + " <br>";*/
                        validationAux = true;
                        validation = false;
                        $(buyer_drivLicNum).addClass('validate-error-field');
                    }
                    if (isTrip && isLoanFinanced && isNull($(buyer_drivLicType).val())) {
                    /*message = message + "6.- Specify driver license type for the " + customeraux + " <br>";*/
                        validationAux = true;
                        validation = false;
                        $(buyer_drivLicType).addClass('validate-error-field');
                    }
                    if (isTrip && (isNull($(buyer_Exp).val()) || !existDate($(buyer_Exp).val()))) {
                    /*message = message + "7.- Select a valid license expiration date for the " + customeraux + "  <br>";*/
                        validationAux = true;
                        validation = false;
                        $(buyer_Exp).addClass('validate-error-field');
                    }
                    if (/*isTrip && */isNull($(buyer_Phone).val())) {
                    /* message = message + "8.- " + customeraux + " primary phone cant be empty <br>";*/
                        validationAux = true;
                        validation = false;
                        $(buyer_Phone).addClass('validate-error-field');
                    }
                    if (isNull($(buyer_Ref).val())) {
                    /* message = message + "11.- " + customeraux + " reference cant be empty <br>";*/
                        validationAux = true;
                        validation = false;
                        $(buyer_Ref).addClass('validate-error-field');
                    }

                    if (isTrip && isLoanFinanced && isNull($(buyer_Ownership).val())) {
                    /*message = message + "25.- " + customeraux + " housing ownership fail <br>";*/
                        validationAux = true;
                        validation = false;
                        console.log('Owner ship fail');
                        $(buyer_Ownership).addClass('validate-error-field');
                    }

                    if (!$.isNumeric(setSplit($(buyer_Payment).val()))) {
                    /*message = message + "26.- " + customeraux + " housing payment must contain only numbers <br>";*/
                        validationAux = true;
                        validation = false;
                        $(buyer_Payment).addClass('validate-error-field');
                    }

                    if (isNull($(buyer_Payment).val()) && ($(buyer_Ownership).val() == "RENT" || $(buyer_Ownership).val() == "SPLIT RENT WITH OTHERS" )) {
                    /*message = message + "26.- " + customeraux + " housing payment cant be empty <br>";*/
                        validationAux = true;
                        validation = false;
                        $(buyer_Payment).addClass('validate-error-field');
                    }

                    // RESIDENCE
                    for (j = 0; j < 3; j++) {
                        isNullField = true;
                        buyer_residence_address = $('input[name="' + customer + '.Residence[' + j + '].Address.Address"]');
                        buyer_residence_zipcode = $('input[name="' + customer + '.Residence[' + j + '].Address.ZIPCode"]');
                        buyer_residence_city = $('input[name="' + customer + '.Residence[' + j + '].Address.City"]');
                        buyer_residence_state = $('input[name="' + customer + '.Residence[' + j + '].Address.State"]');
                        buyer_residence_county = $('input[name="' + customer + '.Residence[' + j + '].Address.County"]');
                        buyer_residence_years = $('input[name="' + customer + '.Residence[' + j + '].Years"]');
                        buyer_residence_month = $('input[name="' + customer + '.Residence[' + j + '].Months"]');

                        if (j > 0 && (!isNull($(buyer_residence_address).val()) && isTrip) || !isNull($(buyer_residence_zipcode).val()) ||
                            (isLoanFinanced &&  GetTotalTime($(buyer_residence_years).val(), $(buyer_residence_month).val()) > 0) || !isNull($(buyer_residence_city).val())
                            || !isNull($(buyer_residence_state).val()) || !isNull($(buyer_residence_county).val())) {
                            isNullField = false;
                        }

                        if (j == 0 || (j > 0 && !isNullField)) {
                            if (isTrip && isNull($(buyer_residence_address).val())) {
                            /* message = message + "20.- " + customeraux + " address cant be empty <br>";*/
                                validationAux = true;
                                validation = false;
                                $(buyer_residence_address).addClass('validate-error-field');
                            }
                            if (isNull($(buyer_residence_zipcode).val())) {
                            /* message = message + "Missing " + customeraux + "\'s zip code <br> ";*/
                                validationAux = true;
                                validation = false;
                                $(buyer_residence_zipcode).addClass('validate-error-field');
                            }
                            if (isNull($(buyer_residence_city).val())) {
                            /*message = message + "Missing" + customeraux + "'s city  <br>";*/
                                validationAux = true;
                                validation = false;
                                $(buyer_residence_city).addClass('validate-error-field');
                            }
                            if (isNull($(buyer_residence_state).val())) {
                            /*message = message + "23.- " + customeraux + " residence state cant be empty <br>";*/
                                validationAux = true;
                                validation = false;
                                $(buyer_residence_state).addClass('validate-error-field');
                            }
                            if (isNull($(buyer_residence_county).val())) {
                            /*message = message + "24.- " + customeraux + " residence county cant be empty <br>";*/
                                validationAux = true;
                                validation = false;
                                $(buyer_residence_county).addClass('validate-error-field');
                            }
                            if (isLoanFinanced && GetTotalTime($(buyer_residence_years).val(), $(buyer_residence_month).val()) == 0) {
                            /*message = message + "27.- Specify residence years and month for the " + customeraux + "<br>";*/
                                validationAux = true;
                                validation = false;
                                $(buyer_residence_years).addClass('validate-error-field');
                                $(buyer_residence_month).addClass('validate-error-field');
                            }
                        }
                    }// end for - RESIDENCE

                    // EPLOYMENT/JOB
                    if (isLoanFinanced) {
                        for (j = 0; j <= 3; j++) {
                            isNullField = true;
                            buyer_job_employer = $('input[name="' + customer + '.Job[' + j + '].Employer"]');
                            buyer_job_retire_ssi = $('input[name="' + customer + '.Job[' + j + '].Retire_SSI"]');
                            buyer_job_monthlyIncome = $('input[name="' + customer + '.Job[' + j + '].MonthlyIncome"]');
                            buyer_job_years = $('input[name="' + customer + '.Job[' + j + '].Years"]');
                            buyer_job_months = $('input[name="' + customer + '.Job[' + j + '].Months"]');
                            buyer_job_workPhone = $('input[name="' + customer + '.Job[' + j + '].Phone"]');
                            buyer_job_empAddress = $('input[name="' + customer + '.Job[' + j + '].Address.Address"]');
                            buyer_job_zipcode = $('input[name="' + customer + '.Job[' + j + '].Address.ZIPCode"]');
                            buyer_job_city = $('input[name="' + customer + '.Job[' + j + '].Address.City"]');
                            buyer_job_job_state = $('input[name="' + customer + '.Job[' + j + '].Address.State"]');
                            buyer_county = $('input[name="' + customer + '.Job[' + j + '].Address.County"]');


                            if (j > 0 && (!isNull($(buyer_job_employer).val()) && isTrip) || !isNull($(buyer_job_monthlyIncome).val()) || GetTotalTime($(buyer_job_years).val(), $(buyer_job_months).val()) > 0
                                || !isNull($(buyer_job_workPhone).val()) || !isNull($(buyer_job_empAddress).val()) || !isNull($(buyer_job_zipcode).val()) || !isNull($(buyer_job_city).val())
                                || !isNull($(buyer_job_job_state).val()) || !isNull($(buyer_county).val())) {
                                isNullField = false;
                            }

                            if (j == 0 || (j > 0 && !isNullField)) {
                                if (isNull($(buyer_job_employer).val()) && isTrip) {
                                /*message = message + "31.- Specify " + customeraux + " employer <br>";*/
                                    validationAux = true;
                                    validation = false;
                                    $(buyer_job_employer).addClass('validate-error-field');
                                }
                                if (isNull($(buyer_job_monthlyIncome).val()) && $(buyer_job_employer).val() != "Unemployed") {
                                /*message = message + "32.- Specify " + customeraux + " monthly income <br>";*/
                                    validationAux = true;
                                    validation = false;
                                    $(buyer_job_monthlyIncome).addClass('validate-error-field');
                                }

                                if (j==0 && $(buyer_job_retire_ssi).val() != "true" || j > 0) {
                                    if (GetTotalTime($(buyer_job_years).val(), $(buyer_job_months).val()) == 0) {
                                        /*message = message + "33.- Specify " + customeraux + " time at employment <br>";*/
                                        validation = false;
                                        validationAux = true;
                                        $(buyer_job_years).addClass('validate-error-field');
                                        $(buyer_job_months).addClass('validate-error-field');
                                    }
                                    if (isTrip && isNull($(buyer_job_workPhone).val()) && $(buyer_job_employer).val() != "Self-Employed" ) {
                                        /*message = message + "34.- " + customeraux + " employers´s phone cant be empty <br>";*/
                                        validation = false;
                                        validationAux = true;
                                        $(buyer_job_workPhone).addClass('validate-error-field');
                                        $(buyer_job_employer).addClass('validate-error-field');
                                    }
                                    if (isTrip && isNull($(buyer_job_empAddress).val()) && $(buyer_job_employer).val() != "Self-Employed" ) {
                                        /*message = message + "36.- Specify " + customeraux + " employment address <br>";*/
                                        validation = false;
                                        validationAux = true;
                                        $(buyer_job_empAddress).addClass('validate-error-field');
                                    }
                                    if (isTrip && isNull($(buyer_job_zipcode).val()) && $(buyer_job_employer).val() != "Self-Employed" ) {
                                        /*message = message + "37.- Specify " + customeraux + " employment zipcode <br>";*/
                                        validation = false;
                                        validationAux = true;
                                        $(buyer_job_zipcode).addClass('validate-error-field');
                                    }
                                    if (isTrip && isNull($(buyer_job_city).val()) && $(buyer_job_employer).val() != "Self-Employed" ) {
                                        /*message = message + "38.- Specify " + customeraux + " employment city <br>";*/
                                        validation = false;
                                        validationAux = true;
                                        $(buyer_job_city).addClass('validate-error-field');
                                    }
                                    if (isTrip && isNull($(buyer_job_job_state).val()) && $(buyer_job_employer).val() != "Self-Employed" ) {
                                       /* message = message + "39.- Specify " + customeraux + " employment state <br>";*/
                                        validation = false;
                                        validationAux = true;
                                        $(buyer_job_job_state).addClass('validate-error-field');
                                    }
                                    if (isTrip && isNull($(buyer_county).val()) && $(buyer_job_employer).val() != "Self-Employed" ) {
                                        /*message = message + "40.- Specify " + customeraux + " employment county <br>";*/
                                        validation = false;
                                        validationAux = true;
                                        $(buyer_county).addClass('validate-error-field');
                                    }

                                }

                            }
                        }// end for - EMPLOYMENT/JOB
                    }
                    if (validationAux) {
                        message = message + "1.-" + customeraux + " Info.<br>";
                    }
                }//end if


            }// end for
          
           
            //References
            if (isLoanFinanced) {
                if (isTrip && (!ValidateReferences() || !window.twoReferences)) {
                    validation = false;
                    $('span[data-valmsg-for="BuyerReferences"]').text("References Required!");
                    $('button[name="AddReferences"]').removeClass('btn-success');
                    $('button[name="AddReferences"]').addClass('btn-danger');
                } else {
                    $('button[name="AddReferences"]').addClass('btn-success');
                    $('button[name="AddReferences"]').removeClass('btn-danger');
                }
            }

            if (($('div.fields-buyer input.validate-error-field').length > 0 || $('div.fields-buyer select.validate-error-field').length > 0) && !cobuyerIsRequired) {
                if (!validation) {
                    message = message + "<br>";
                }
            }
            else if (($('div.fields-buyer input.validate-error-field').length > 0 || $('div.fields-buyer select.validate-error-field').length > 0) && cobuyerIsRequired
                && ($('div.fields-co-buyer input.validate-error-field').length > 0 || $('div.fields-co-buyer select.validate-error-field').length > 0)) {
                if (!validation) {
                    message = message + " <br>";
                }
            }
            else if (cobuyerIsRequired && ($('div.fields-co-buyer input.validate-error-field').length > 0 || $('div.fields-co-buyer select.validate-error-field').length > 0)) {
                if (!validation) {
                    message = message + "<br>";

                }
            }

            if ($("select[name='Buyer2.Lenguage']").val() == 0 || $("select[name='Buyer2.Lenguage']").val() == null) {
                message = message + "Select a lenguage for the buyer \r\n";
                validation = false;
                $("select[name='Buyer2.Lenguage']").addClass('validate-error-field');
            }
            var a = $("select[name='Buyer2.Lenguage']").val();

            if (!validation) {
                Swal.fire({
                    title: '<div style="display:flex; flex-direction: row; justify-content: center; width:300px;"> <p style="line-height: 30px;"><br> ' + message + ' </p> </div>'    ,
                    text: '',
                    type: 'info',
                    customClass: 'swal-wide',
                });
            }

            return validation;
        }



        function CleanSalesModal() {
            $('input[name="StoreModel.Name"],input[name="StoreModel.AddressStore"],input[name="StoreModel.ZipCodeStore"],input[name="StoreModel.SalesTaxRate"]').val('');
            $('span#Rate').text('Tax Rate:');
            salesTaxRate = 0;
        }

</script>

    <!-- STEP ONE -->
    <script type="text/javascript">

        function IsSaleFinanced() {
            subTotal = setSplit($('input[name="SubTotal"]').val());
            totalDown = setSplit($('input[name="TotalDown"]').val());
            if (parseFloat(subTotal) == parseFloat(totalDown)) {
                
                $('input[name="Term"],input[name="APR"],input[name="FinalPayment"],input[name="FinanceCharges"').prop('readonly', true);
                return false;
            }
            $('input[name="Term"],input[name="APR"],input[name="FinalPayment"],input[name="FinanceCharges"').prop('readonly', false);
            
            return true;
        }

        $.fn.DontVerifySalePrice = function () {
            verifyPrice = $('input[type="hidden"][name="VerifySalePrice"]');
            if (parseFloat(window.salePrice) < parseFloat(window.priceMin)) {
                $(verifyPrice).val(0);
            }
        }

        function SendNotifToFinanceDep(loanId, note) {
            swal({
                title: 'Sending notification...',
                text: '',
                allowOutsideClick: false,
                showConfirmButton: false,
                onOpen: () => {
                    swal.showLoading();

                    var data = new FormData();
                    console.log($('input[name="DMVRegistration"]').attr('name'));
                    data.append('loanId', loanId);
                    data.append('note', note);

                    $.ajax({
                        type: 'POST',
                        url: "/AjaxSales/SendNotification/",
                        data: data,
                        contentType: false,
                        processData: false,
                        cache: false,
                        dataType: "json",
                        error: function (err) {
                            Swal("It wasn't possible send notification!", "", "error");
                        },
                        success: function (response) {
                            if (response.success) {
                                Swal(response.message, "", "success");
                                $.fn.SetSalesNotes(response.salesNotes);
                            }
                            else {
                                Swal(response.message, "", "error");
                            }
                        }
                    });
                }
            });
        }

        /***********     START - accesories modal   ***************** */
        function ResetAccesories() {
            $('input[name="Accesories[0].AmountAux"],input[name="Accesories[1].AmountAux"],input[name="Accesories[2].AmountAux"], input[name="Accessories"]').val('0.00');
            $('input[name="Accesories[0].ContractNo"],input[name="Accesories[1].ContractNo"],input[name="Accesories[2].ContractNo"]').val('');
            window.accessories = 0;
            window.auxAmountAccesories = 0;
            SetSubTotal();
            ObtenerElTaxRate();

        }

        function SaveAccesories() {
            var amount = 0;
            var accAlert = "";
            var accValid = true;
            var substring = "";
            var substring2 = "";
            var substring3 = "";
            var prefixban = 0;

            var tfp = 0;
            var spp = 0;
            var evp = 0;

            $.each(SalePrefixes, function (i, item) {
                if (item.Type == "Theft Code") {
                    tfp++;
                }
            });
            $.each(SalePrefixes, function (i, item) {
                if (item.Type == "Surface Protection") {
                    spp++;
                }
            });
            $.each(SalePrefixes, function (i, item) {
                if (item.Type == "EV Charge") {
                    evp++;
                }
            });


            $('input[name="Accesories[0].AmountAux"]').removeClass('validate-error-field');
            $('input[name="Accesories[1].AmountAux"]').removeClass('validate-error-field');
            $('input[name="Accesories[2].AmountAux"]').removeClass('validate-error-field');

            $('input[name="Accesories[0].ContractNo"]').removeClass('validate-error-field');
            $('input[name="Accesories[1].ContractNo"]').removeClass('validate-error-field');
            $('input[name="Accesories[2].ContractNo"]').removeClass('validate-error-field');



            Accesorie1 = setSplit($('input[name="Accesories[0].AmountAux"]').val());
            Accesorie2 = setSplit($('input[name="Accesories[1].AmountAux"]').val());
            Accesorie3 = setSplit($('input[name="Accesories[2].AmountAux"]').val());

            AccesorieCont1 = $('input[name="Accesories[0].ContractNo"]').val().toUpperCase();
            AccesorieCont2 = $('input[name="Accesories[1].ContractNo"]').val().toUpperCase();
            AccesorieCont3 = $('input[name="Accesories[2].ContractNo"]').val().toUpperCase();

            substring = AccesorieCont1.substring(0, 3);
            substring2 = AccesorieCont2.substring(0, 3);
            substring3 = AccesorieCont3.substring(0, 3);



            for (var i = 0; i < 3; i++) {
                var AccesoriePrice = setSplit($('input[name="Accesories[' + i + '].AmountAux"]').val());
                amount = parseFloat(parseFloat(amount) + parseFloat(AccesoriePrice));
            }
            //--------Theft code validation
            if (Accesorie1 > 0 && AccesorieCont1 == 0) {
                accAlert = accAlert + "<strong>-</strong> Complete required fields.<br>";
                accValid = false;
                $('input[name="Accesories[0].ContractNo"]').addClass('validate-error-field');
            } else if (Accesorie1 > 0 && AccesorieCont1 != 0) {
                if (AccesorieCont1.length < SaleConditions.TfCNMin || AccesorieCont1.length > SaleConditions.TfCNMax) {
                    accAlert = "<strong>-</strong> Invalid contract No.<br>";
                    accValid = false;
                    $('input[name="Accesories[0].ContractNo"]').addClass('validate-error-field');
                }

                $.each(SalePrefixes, function (i, item) {
                    if (item.Type == "Theft Code") {
                        if (substring == item.Prefix) {
                            prefixban = 1;
                        }
                    }
                });
                if (prefixban == 0 && tfp > 0) {
                    accAlert = "<strong>-</strong> Invalid contract No.<br>";
                    accValid = false;
                    $('input[name="Accesories[0].ContractNo"]').addClass('validate-error-field');
                }
            }

            if (Accesorie1 == 0 && AccesorieCont1 != 0) {
                accAlert = "<strong>-</strong> Complete required fields.<br>";
                accValid = false;
                $('input[name="Accesories[0].AmountAux"]').addClass('validate-error-field');
            } else {
            }
            //---------Surface Protect. Validation
            prefixban = 0;
            if (Accesorie2 > 0 && AccesorieCont2 == 0) {
                accAlert = accAlert + "<strong>-</strong> Complete required fields.<br>";
                accValid = false;
                $('input[name="Accesories[1].ContractNo"]').addClass('validate-error-field');
            } else if (Accesorie2 > 0 && AccesorieCont2 != 0) {
                if (AccesorieCont2.length < SaleConditions.SpCNMin || AccesorieCont2.length > SaleConditions.SpCNMax) {
                    accAlert = accAlert + "<strong>-</strong> Invalid contract No.<br>";
                    accValid = false;
                    $('input[name="Accesories[1].ContractNo"]').addClass('validate-error-field');
                }

                $.each(SalePrefixes, function (i, item) {
                    if (item.Type == "Surface Protection") {
                        if (substring2 == item.Prefix) {
                            prefixban = 1;
                        }
                    }
                });

                if (prefixban == 0 && spp > 0) {
                    accAlert = accAlert + "<strong>-</strong> Invalid contract No.<br>";
                    accValid = false;
                    $('input[name="Accesories[1].ContractNo"]').addClass('validate-error-field');
                }
            }


            if (Accesorie2 == 0 && AccesorieCont2 != 0) {
                accAlert = accAlert + "<strong>-</strong> Complete required fields.<br>";
                accValid = false;
                $('input[name="Accesories[1].AmountAux"]').addClass('validate-error-field');
            } else {
            }
            
            prefixban = 0;
            //-----------EV Charge Validation
            if (Accesorie3 > 0 && AccesorieCont3 == 0) {
                accAlert = accAlert + "<strong>-</strong> Complete required fields.<br>";
                accValid = false;
                $('input[name="Accesories[2].ContractNo"]').addClass('validate-error-field');
            } else if (Accesorie3 > 0 && AccesorieCont3 != 0) {
                if (AccesorieCont3.length < SaleConditions.EvCNMin || AccesorieCont3.length > SaleConditions.EvCNMax) {
                    accAlert = accAlert + "<strong>-</strong> Invalid contract No.<br>";
                    accValid = false;
                    $('input[name="Accesories[2].ContractNo"]').addClass('validate-error-field');
                }

                $.each(SalePrefixes, function (i, item) {
                    if (item.Type == "EV Charge") {
                        if (substring3 == item.Prefix) {
                            prefixban = 1;
                        }
                    }
                });

                if (prefixban == 0 && evp > 0) {
                    accAlert = accAlert + "<strong>-</strong> Invalid contract No..<br>";
                    accValid = false;
                    $('input[name="Accesories[2].ContractNo"]').addClass('validate-error-field');
                }
            }


            if (Accesorie3 == 0 && AccesorieCont3 != 0) {
                accAlert = accAlert + "<strong>-</strong> Complete required fields.<br>";
                accValid = false;
                $('input[name="Accesories[2].AmountAux"]').addClass('validate-error-field');
            } else {
            }
            

            if (accValid == true) {

                window.accessories = amount;
                $('input[name="Accessories"]').val(formatearNumero(parseFloat(amount).toFixed(2)));
                window.auxAmountAccesories = 0;
                SetSubTotal();

                ObtenerElTaxRate();
                $('#ModalAccesories').modal('hide');
            } else {

                swal(accAlert, "", "info");

            }

        }

        /***********     END - accesories modal   ***************** */
        /***********     Start - Gap Insurance    ******************/
        function SaveGapInsurance() {
            amount = setSplit($('input[name="GapIncurance.Amount"]').val());
            window.gapInsurance = amount;
            $('input[name="GapInsurance"]').val($('input[name="GapIncurance.Amount"]').val());
            /*$('input[name="FYIGapInsurance"]').val($('input[name="GapIncurance.Amount"]').val());*/
            SetSubTotal();
            ObtenerElTaxRate();
            $('#ModalDebtAgreement').modal('hide');
        }
        /***********     End - Gap Insurance    ******************/
        /**********       Start - Trade In         **********/
        function SetAmount() {
            //Se agrego el ciclo for para tener en cuenta un segundo tradeIn
            var totalAmount = 0;
            for (var i = 0; i < window.CountTradeIn; i++) {
                auxvalueTrade = setSplit($('input[name="TradeInModal[' + i + '].TradeValue"]').val());
                auxlienTrade = setSplit($('input[name="TradeInModal[' + i + '].LienValue"]').val());
                var auxTotalAmount = parseFloat(auxvalueTrade) - parseFloat(auxlienTrade);

                if (i == 0)//En caso de que sea el primer TradeIn
                    totalAmount = auxTotalAmount;
                else//En caso de que sea el segundo TradeIn
                    totalAmount += auxTotalAmount;

                if (parseFloat(auxlienTrade) > 0.00) {
                    $('#tradein-bank-' + (i)).show();
                }
                else {
                    $('#tradein-bank-' + (i)).hide();
                    $('input[name="TradeInModal[' + i + '].Bank"]').val('');
                }

                $('input[name="TradeInModal[' + i + '].Amount"]').val(formatearNumero((auxTotalAmount).toFixed(2)));
            }
        }
        // GetVIN
        function GETVIN(vin, Number) {
            $.ajax({
                url: "https://vpic.nhtsa.dot.gov/api/vehicles/decodevinvalues/" + vin + "?format=json",
                type: "GET",
                dataType: "json",
                success: function (response) {

                    //Year
                    $('select[name="TradeInModal[' + Number + '].Year"]').val(response.Results[0].ModelYear);
                    $('select[name="TradeInModal[' + Number + '].Year"]').trigger('change');

                    //Make
                    $('select[name="TradeInModal[' + Number + '].Make"]').val(response.Results[0].Make);
                    $('select[name="TradeInModal[' + Number + '].Make"]').trigger('change');

                    //Model
                    $('input[name="TradeInModal[' + Number + '].Model"]').val(response.Results[0].Model);;
                    if (response.Results[0].TransmissionStyle == "Automatic") {
                        $('select[name="TradeInModal[' + Number + '].Transmision"]').val('1');
                    }
                    else if (response.Results[0].TransmissionStyle == "Manual") {
                        $('select[name="TradeInModal[' + Number + '].Transmision"]').val('0');
                    }
                    //Type
                    if (!isNull(response.Results[0].Trim)) {
                        $('input[name="TradeInModal[' + Number + '].SubModel"]').val(response.Results[0].Trim);
                    }
                    else if (!isNull(response.Results[0].Series)) {
                        $('input[name="TradeInModal[' + Number + '].SubModel"]').val(response.Results[0].Series);
                    }

                    //Engine-
                    if (!isNull(response.Results[0].EngineCylinders)) {
                        $('select[name="TradeInModal[' + Number + '].CYL"]').val(response.Results[0].EngineCylinders);
                    }

                    //FuelTypePrimary: "Gasoline"
                    var str = response.Results[0].FuelTypePrimary;
                    if (!isNull(str)) {
                        if (str.includes("Gas") || str.includes("Gasoline")) {
                            $('select[name="TradeInModal[' + Number + '].FuleType"]').val('GAS');
                        }
                        else if (str.includes("Diesel")) {
                            $('select[name="TradeInModal[' + Number + '].FuleType"]').val('DIESEL');
                        }
                        else if (str.includes("Electric")) {
                            $('select[name="TradeInModal[' + Number + '].FuleType"]').val('ELECTRIC');
                        }
                        else if (str.includes("Propane")) {
                            $('select[name="TradeInModal[' + Number + '].FuleType"]').val('PROPANE');
                        }
                        else if (str.includes("Hybrid")) {
                            $('select[name="TradeInModal[' + Number + '].FuleType"]').val('HYBRID');
                        }
                        else if (str.includes("Towable")) {
                            $('select[name="TradeInModal[' + Number + '].FuleType"]').val('TOWABLE');
                        }
                        else {
                            $('select[name="TradeInModal[' + Number + '].FuleType"]').val('OTHER');
                        }
                    } else {
                        $('select[name="TradeInModal[' + Number + '].FuleType"]').val('OTHER');
                    }

                    $('input[name="TradeInModal[' + Number + '].Engine"]').val('V' + response.Results[0].EngineCylinders + ', ' + response.Results[0].DisplacementL + ' Liter');
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    $('span[data-valmsg-for="VIN"]').text('Error getting info about VIN.');
                    console.log(xhr.status);
                    console.log(thrownError);
                }
            });
        }
        function CleanSearchVIN(Number) {
            var date = new Date();
            year = date.getFullYear();
            $('select[name="TradeInModal[' + Number + '].Year"]').val(year);
            $('input[name="TradeInModal[' + Number + '].Model"]').val('');
            $('input[name="TradeInModal[' + Number + '].SubModel"]').val('');
            $('select[name="TradeInModal[' + Number + '].CYL"]').val('0');
            $('select[name="TradeInModal[' + Number + '].FuleType"]').val('GAS');
            $('select[name="TradeInModal[' + Number + '].Transmision"]').val('0');
        }

        function CleanTradeInModel(Number) {
            $('input[name="TradeInModal[' + Number + '].VIN"]').val('');
            $('input[name="TradeInModal[' + Number + '].Color"]').val('');
            $('input[name="TradeInModal[' + Number + '].Miles"]').val('');
            $('input[name="TradeInModal[' + Number + '].LicensNo"]').val('');
            $('input[name="TradeInModal[' + Number + '].LicensNONE"]').prop('checked', false);
            $('input[name="TradeInModal[' + Number + '].TradeValue"]').val('0');
            $('input[name="TradeInModal[' + Number + '].LienValue"]').val('0');
            $('input[name="TradeInModal[' + Number + '].Amount"]').val('0');
            $('select[name="TradeInModal[' + Number + '].State"]').val('0');
            $('select[name="TradeInModal[' + Number + '].Commercial"]').val('0');
        }
        /**********       End - Trade In         **********/
        /*********    Start - Differ Down Payment      ************/
        var firstAmount = setSplit($('input[name="AmountsPaymentsAndDates[0].Amount"]').val());
        var firstDate = $('input[name="AmountsPaymentsAndDates[0].Date"]').val();
        var secondAmount = setSplit($('input[name="AmountsPaymentsAndDates[1].Amount"]').val());
        var secondDate = $('input[name="AmountsPaymentsAndDates[1].Date"]').val();
        var threeAmount = setSplit($('input[name="AmountsPaymentsAndDates[2].Amount"]').val());
        var threeDate = $('input[name="AmountsPaymentsAndDates[2].Date"]').val();
        var auxfirstAmount = 0, auxsecondAmount = 0, auxthreeAmount = 0;

        $('input[name="AmountsPaymentsAndDates[1].Amount"]').keyup(function () {
            $(this).val(ReplaceNumberWithCommasRemoveDecimals($(this).val().toString()));
            SetTotalDifferDownPayments();
        });

        $('input[name="AmountsPaymentsAndDates[2].Amount"]').keyup(function () {
            $(this).val(ReplaceNumberWithCommasRemoveDecimals($(this).val().toString()));
            SetTotalDifferDownPayments();
        });

        function SetTotalDifferDownPayments() {
            auxfirstAmount = setSplit($('input[name="AmountsPaymentsAndDates[0].Amount"]').val());
            auxsecondAmount = setSplit($('input[name="AmountsPaymentsAndDates[1].Amount"]').val());
            auxthreeAmount = setSplit($('input[name="AmountsPaymentsAndDates[2].Amount"]').val());
            total = parseFloat(auxfirstAmount) + parseFloat(auxsecondAmount) + parseFloat(auxthreeAmount);
            if ($.isNumeric(total)) {
                $('input[name="DeferredDownPaymentsModal.Total"]').val(formatearNumero(parseFloat(total).toFixed(2)));
            }
            else {
                $('input[name="DeferredDownPaymentsModal.Total"]').val('0.00');
            }
        }

        function SaveDifferInfo() {
            auxfirstAmount = setSplit($('input[name="AmountsPaymentsAndDates[0].Amount"]').val());
            auxsecondAmount = setSplit($('input[name="AmountsPaymentsAndDates[1].Amount"]').val());
            auxthreeAmount = setSplit($('input[name="AmountsPaymentsAndDates[2].Amount"]').val());
            total = parseFloat(auxfirstAmount) + parseFloat(auxsecondAmount) + parseFloat(auxthreeAmount);
            auxaproved = $('select[name="DeferredDownPaymentsModal.AprovedBy"]').val();
            auxfirstDate = $('input[name="AmountsPaymentsAndDates[0].Date"]').val();
            auxsecondDate = $('input[name="AmountsPaymentsAndDates[1].Date"]').val();
            auxthreeDate = $('input[name="AmountsPaymentsAndDates[2].Date"]').val();
            band = false;
            if (auxfirstAmount > 0) {
                if (auxaproved == '') {
                    band = true;
                    $('select[name="DeferredDownPaymentsModal.AprovedBy"]').addClass('validate-error-field');
                }
                if (!existDate(auxfirstDate + '')) {
                    band = true;
                    $('input[name="AmountsPaymentsAndDates[0].Date"]').addClass('validate-error-field');
                }
            }
            if (auxfirstAmount == 0 && existDate(auxfirstDate + '')) {
                band = true;
                $('input[name="AmountsPaymentsAndDates[0].Amount"]').addClass('validate-error-field');
            }

            if (auxsecondAmount > 0 && !existDate(auxsecondDate + '')) {
                band = true;
                $('input[name="AmountsPaymentsAndDates[1].Date"]').addClass('validate-error-field');
            } else if (auxsecondAmount == 0 && existDate(auxsecondDate + '')) {
                band = true;
                $('input[name="AmountsPaymentsAndDates[1].Amount"]').addClass('validate-error-field');
            }

            if (auxthreeAmount > 0 && !existDate(auxthreeDate + '')) {
                band = true;
                $('input[name="AmountsPaymentsAndDates[2].Date"]').addClass('validate-error-field');
            } else if (auxthreeAmount == 0 && existDate(auxthreeDate + '')) {
                band = true;
                $('input[name="AmountsPaymentsAndDates[2].Amount"]').addClass('validate-error-field');
            }

            if (!band) {
                firstAmount = auxfirstAmount;
                secondAmount = auxsecondAmount;
                threeAmount = auxthreeAmount;
                $('input[name="DifferDownPayment"]').val(formatearNumero(parseFloat(total).toFixed(2)));
                
                SetTotalDown();
                $('#ModalDifferDown').modal('hide');
            }
            else {
                swal("Complete the require fields.", "", "error");
            }

        }

        $(document.body).on("click", 'button[name="BtnResetDiffer"]', function () {
            firstAmount = 0, secondAmount = 0, threeAmount = 0;
            firstDate = '', secondDate = '', threeDate = '';
            auxfirstAmount = 0, auxsecondAmount = 0, auxthreeAmount = 0;
            auxfirstDate = '', auxsecondDate = '', auxthreeDate = '';
            total = parseFloat(firstAmount) + parseFloat(secondAmount) + parseFloat(threeAmount);

            $('input[name="AmountsPaymentsAndDates[0].Amount"],input[name="AmountsPaymentsAndDates[1].Amount"],input[name="AmountsPaymentsAndDates[2].Amount"]').val('0.00');
            $('input[name="AmountsPaymentsAndDates[0].Date"],input[name="AmountsPaymentsAndDates[1].Date"],input[name="AmountsPaymentsAndDates[2].Date"]').val('');
            $('input[name="DeferredDownPaymentsModal.Total"], input[name="DifferDownPayment"]').val('0.00');
            $('select[name="DeferredDownPaymentsModal.AprovedBy"]').val('');

            SetTotalDown();
        });

        $('button[name="BtnCancelDiffer"]').click(function () {
            auxfirstAmount = setSplit($('input[name="AmountsPaymentsAndDates[0].Amount"]').val());
            if (auxfirstAmount > 0) {
                SaveDifferInfo();
            } else {
                $('input[name="AmountsPaymentsAndDates[0].Amount"]').val(ReplaceNumberWithCommasRemoveDecimals(firstAmount));
                $('input[name="AmountsPaymentsAndDates[1].Amount"]').val(ReplaceNumberWithCommasRemoveDecimals(secondAmount));
                $('input[name="AmountsPaymentsAndDates[2].Amount"]').val(ReplaceNumberWithCommasRemoveDecimals(threeAmount));
                total = parseFloat(firstAmount) + parseFloat(secondAmount) + parseFloat(threeAmount);
                $('input[name="DeferredDownPaymentsModal.Total"],input[name="DownPaymentPRCO"]').val(formatearNumero(parseFloat(total).toFixed(2)));
                SetTotalDown();
                $('#ModalDifferDown').modal('hide');
            }

        });
        /*********    End - Differ Down Payment      ************/
        /*********    Search Vehicles      ************/
        //Function to search vehicles by name and SSN
        function SearchVehiclebyName(name, lastname, middlename, itin_number) {
            $('tbody#search-name-result').html('<tr><td colspan="10"class="spiner-example" style="height: 74px !important;">' +
                '<div class="sk-spinner sk-spinner-fading-circle">' +
                '<div class="sk-circle1 sk-circle"></div>' +
                '<div class="sk-circle2 sk-circle"></div>' +
                '<div class="sk-circle3 sk-circle"></div>' +
                '<div class="sk-circle4 sk-circle"></div>' +
                '<div class="sk-circle5 sk-circle"></div>' +
                '<div class="sk-circle6 sk-circle"></div>' +
                '<div class="sk-circle7 sk-circle"></div>' +
                '<div class="sk-circle8 sk-circle"></div>' +
                '<div class="sk-circle9 sk-circle"></div>' +
                '<div class="sk-circle10 sk-circle"></div>' +
                '<div class="sk-circle11 sk-circle"></div>' +
                '<div class="sk-circle12 sk-circle"></div>' +
                '</div></td></tr>');
            if (itin_number != "")
            {
                $.ajax({
                    url: "/AjaxCars/SearchVehiclebyITIN_Number?ITIN_Number=" + itin_number,
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        $('tbody#search-name-result').empty();
                        if (response.success) {
                            band = false;
                            $.each(response.SearchResults, function (i, r) {
                                band = true;
                                $('tbody#search-name-result').append('<tr id="' + r.Id + '">' +
                                    '<td>' + r.StockNumber + '</td>' +
                                    '<td>' +r.Name.toUpperCase() + '</td>' +
                                     '<td>' + r.SSN + '</td>' +
                                    '<td>' + r.DateSold + '</td>' +
                                    '<td>' + r.SalePrice + '</td>' +
                                    '<td>' + r.Year + '</td>' +
                                    '<td>' + r.Maker + '</td>' +
                                    '<td>' + r.Model + '</td>' +
                                    '<td>' + r.Color + '</td>' +
                                    '<td>' + r.FinanceCo.toUpperCase()  + '</td>' +
                                    '</tr>');
                            });
                            if (!band) {
                                $('tbody#search-name-result').append('<tr id="0">' +
                                    '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                                    '</tr>');
                                swal("Unable to find data");
                            }
                        }
                        else {
                            $('tbody#search-name-result').append('<tr id="0">' +
                                '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                                '</tr>');
                            swal("Unable to find data");
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.status);
                        console.log(thrownError);
                    }
                });
            }
            else {
                $.ajax({
                    url: "/AjaxCars/SearchVehiclebyName?name=" + name + "&lastname=" + lastname + "&middlename=" + middlename,
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        $('tbody#search-name-result').empty();
                        if (response.success) {
                            band = false;
                            $.each(response.SearchResults, function (i, r) {
                                band = true;
                                $('tbody#search-name-result').append('<tr id="' + r.Id + '">' +
                                    '<td>' + r.StockNumber + '</td>' +
                                    '<td>' + r.Name.toUpperCase() + '</td>' +
                                    '<td>' + r.SSN + '</td>' +
                                    '<td>' + r.DateSold + '</td>' +
                                    '<td>' + r.SalePrice + '</td>' +
                                    '<td>' + r.Year + '</td>' +
                                    '<td>' + r.Maker + '</td>' +
                                    '<td>' + r.Model + '</td>' +
                                    '<td>' + r.Color + '</td>' +
                                    '<td>' + r.FinanceCo.toUpperCase()  + '</td>' +
                                    '</tr>');
                            });
                            if (!band) {
                                $('tbody#search-name-result').append('<tr id="0">' +
                                    '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                                    '</tr>');
                                swal("Unable to find data");

                            }
                        }
                        else {
                            $('tbody#search-name-result').append('<tr id="0">' +
                                '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                                '</tr>');
                            swal("Unable to find data");
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.status);
                        console.log(thrownError);
                    }
                });
            }

        }
        //end
        
        //Function to search vehicles by EmployeeId
        function SearchVehiclebyEmployeeId(EmployeeId) {
            $('tbody#search-name-result').html('<tr><td colspan="10"class="spiner-example" style="height: 74px !important;">' +
                '<div class="sk-spinner sk-spinner-fading-circle">' +
                '<div class="sk-circle1 sk-circle"></div>' +
                '<div class="sk-circle2 sk-circle"></div>' +
                '<div class="sk-circle3 sk-circle"></div>' +
                '<div class="sk-circle4 sk-circle"></div>' +
                '<div class="sk-circle5 sk-circle"></div>' +
                '<div class="sk-circle6 sk-circle"></div>' +
                '<div class="sk-circle7 sk-circle"></div>' +
                '<div class="sk-circle8 sk-circle"></div>' +
                '<div class="sk-circle9 sk-circle"></div>' +
                '<div class="sk-circle10 sk-circle"></div>' +
                '<div class="sk-circle11 sk-circle"></div>' +
                '<div class="sk-circle12 sk-circle"></div>' +
                '</div></td></tr>');
            if (Date != "") {
                $.ajax({
                    url: "/AjaxCars/SearchVehiclebyEmployeeId?EmployeeId=" + EmployeeId,
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        $('tbody#search-name-result').empty();
                        if (response.success) {
                            band = false;
                            $.each(response.SearchResults, function (i, r) {
                                band = true;
                                $('tbody#search-name-result').append('<tr id="' + r.Id + '">' +
                                    '<td>' + r.StockNumber + '</td>' +
                                    '<td>' + r.Name.toUpperCase() + '</td>' +
                                    '<td>' + r.SSN + '</td>' +
                                    '<td>' + r.DateSold + '</td>' +
                                    '<td>' + r.SalePrice + '</td>' +
                                    '<td>' + r.Year + '</td>' +
                                    '<td>' + r.Maker + '</td>' +
                                    '<td>' + r.Model + '</td>' +
                                    '<td>' + r.Color + '</td>' +
                                    '<td>' + r.FinanceCo.toUpperCase() + '</td>' +
                                    '</tr>');
                            });
                            if (!band) {
                                $('tbody#search-name-result').append('<tr id="0">' +
                                    '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                                    '</tr>');
                                swal("Unable to find data");
                            }
                        }
                        else {
                            $('tbody#search-name-result').append('<tr id="0">' +
                                '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                                '</tr>');
                            swal("Unable to find data");
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.status);
                        console.log(thrownError);
                    }
                });
            }
            else {
                $('tbody#search-name-result').append('<tr id="0">' +
                    '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                    '</tr>');
            }

        }
        //Function to search vehicles by Datesold
        function SearchVehiclebyDateSold(Date,opc) {
            $('tbody#search-name-result').html('<tr><td colspan="10"class="spiner-example" style="height: 74px !important;">' +
                '<div class="sk-spinner sk-spinner-fading-circle">' +
                '<div class="sk-circle1 sk-circle"></div>' +
                '<div class="sk-circle2 sk-circle"></div>' +
                '<div class="sk-circle3 sk-circle"></div>' +
                '<div class="sk-circle4 sk-circle"></div>' +
                '<div class="sk-circle5 sk-circle"></div>' +
                '<div class="sk-circle6 sk-circle"></div>' +
                '<div class="sk-circle7 sk-circle"></div>' +
                '<div class="sk-circle8 sk-circle"></div>' +
                '<div class="sk-circle9 sk-circle"></div>' +
                '<div class="sk-circle10 sk-circle"></div>' +
                '<div class="sk-circle11 sk-circle"></div>' +
                '<div class="sk-circle12 sk-circle"></div>' +
                '</div></td></tr>');
            if (Date != "")
            {
                $.ajax({
                    url: "/AjaxCars/SearchVehiclebyDateSold?Date=" + Date+"&Opc="+opc,
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        $('tbody#search-name-result').empty();
                        if (response.success) {
                            band = false;
                            $.each(response.SearchResults, function (i, r) {
                                band = true;
                                $('tbody#search-name-result').append('<tr id="' + r.Id + '">' +
                                    '<td>' + r.StockNumber + '</td>' +
                                    '<td>' + r.Name.toUpperCase() + '</td>' +
                                    '<td>' + r.SSN+ '</td>' +
                                    '<td>' + r.DateSold + '</td>' +
                                    '<td>' + r.SalePrice + '</td>' +
                                    '<td>' + r.Year + '</td>' +
                                    '<td>' + r.Maker + '</td>' +
                                    '<td>' + r.Model + '</td>' +
                                    '<td>' + r.Color + '</td>' +
                                    '<td>' + r.FinanceCo.toUpperCase()  + '</td>' +
                                    '</tr>');
                            });
                            if (!band) {
                                $('tbody#search-name-result').append('<tr id="0">' +
                                    '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                                    '</tr>');
                                 swal("Unable to find data");
                            }
                        }
                        else {
                            $('tbody#search-name-result').append('<tr id="0">' +
                                '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                                '</tr>');
                            swal("Unable to find data");
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.status);
                        console.log(thrownError);
                    }
                });
            }
            else {
                $('tbody#search-name-result').append('<tr id="0">' +
                    '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                    '</tr>');
            }

        }
        //end
        //Function to search vehicles by Finance Company
        function SearchVehiclebyFinanceCo(company) {
            $('tbody#search-name-result').html('<tr><td colspan="10"class="spiner-example" style="height: 74px !important;">' +
                '<div class="sk-spinner sk-spinner-fading-circle">' +
                '<div class="sk-circle1 sk-circle"></div>' +
                '<div class="sk-circle2 sk-circle"></div>' +
                '<div class="sk-circle3 sk-circle"></div>' +
                '<div class="sk-circle4 sk-circle"></div>' +
                '<div class="sk-circle5 sk-circle"></div>' +
                '<div class="sk-circle6 sk-circle"></div>' +
                '<div class="sk-circle7 sk-circle"></div>' +
                '<div class="sk-circle8 sk-circle"></div>' +
                '<div class="sk-circle9 sk-circle"></div>' +
                '<div class="sk-circle10 sk-circle"></div>' +
                '<div class="sk-circle11 sk-circle"></div>' +
                '<div class="sk-circle12 sk-circle"></div>' +
                '</div></td></tr>');
            if (Date != "") {
                $.ajax({
                    url: "/AjaxCars/SearchVehiclebyFinanceCo?Company=" + company,
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        $('tbody#search-name-result').empty();
                        if (response.success) {
                            band = false;
                            $.each(response.SearchResults, function (i, r) {
                                band = true;
                                $('tbody#search-name-result').append('<tr id="' + r.Id + '">' +
                                    '<td>' + r.StockNumber + '</td>' +
                                    '<td>' + r.Name.toUpperCase() + '</td>' +
                                    '<td>' + r.SSN + '</td>' +
                                    '<td>' + r.DateSold + '</td>' +
                                    '<td>' + r.SalePrice + '</td>' +
                                    '<td>' + r.Year + '</td>' +
                                    '<td>' + r.Maker + '</td>' +
                                    '<td>' + r.Model + '</td>' +
                                    '<td>' + r.Color + '</td>' +
                                    '<td>' + r.FinanceCo.toUpperCase()  + '</td>' +
                                    '</tr>');
                            });
                            if (!band) {
                                $('tbody#search-name-result').append('<tr id="0">' +
                                    '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                                    '</tr>');
                                 swal("Unable to find data");
                            }
                        }
                        else {
                            $('tbody#search-name-result').append('<tr id="0">' +
                                '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                                '</tr>');
                            swal("Unable to find data");
                        }
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        console.log(xhr.status);
                        console.log(thrownError);
                    }
                });
            }
            else {
                $('tbody#search-name-result').append('<tr id="0">' +
                    '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                    '</tr>');
                swal("Unable to find data");
            }

        }
        //end


        //Function to search Vehicle Sales
        function SearchVehicleSales(id) {
            $('tbody#search-name-result').html('<tr><td colspan="7"class="spiner-example" style="height: 74px !important;">' +
                '<div class="sk-spinner sk-spinner-fading-circle">' +
                '<div class="sk-circle1 sk-circle"></div>' +
                '<div class="sk-circle2 sk-circle"></div>' +
                '<div class="sk-circle3 sk-circle"></div>' +
                '<div class="sk-circle4 sk-circle"></div>' +
                '<div class="sk-circle5 sk-circle"></div>' +
                '<div class="sk-circle6 sk-circle"></div>' +
                '<div class="sk-circle7 sk-circle"></div>' +
                '<div class="sk-circle8 sk-circle"></div>' +
                '<div class="sk-circle9 sk-circle"></div>' +
                '<div class="sk-circle10 sk-circle"></div>' +
                '<div class="sk-circle11 sk-circle"></div>' +
                '<div class="sk-circle12 sk-circle"></div>' +
                '</div></td></tr>');

            $.ajax({
                url: "/AjaxCars/SearchVehicleSales?id=" + id,
                type: "GET",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $('tbody#search-name-result').empty();
                    if (response.success) {
                        if (response.count == 0) {
                            SearchLoan(response.errstock);
                            $('#ModalSearchVehicle').modal('hide');
                        }
                        if (response.count == 1) {
                            SearchLoan(response.SearchResults[0].StockNumber);
                            $('#ModalSearchVehicle').modal('hide');
                        }
                        else {
                            document.getElementById("Searchtable1").setAttribute("hidden", true);
                            document.getElementById("Searchtable2").removeAttribute("hidden");

                            band = false;
                            $.each(response.SearchResults, function (i, r) {
                                band = true;
                                $('tbody#search-name-result').append('<tr id="' + r.Id + '">' +
                                    '<td>' + r.StockNumber + '</td>' +
                                    '<td>' + r.DateSold + '</td>' +
                                    '<td>' + r.SalePrice + '</td>' +
                                    '<td>' + r.Year + '</td>' +
                                    '<td>' + r.Maker + '</td>' +
                                    '<td>' + r.Model + '</td>' +
                                    '<td>' + r.Color + '</td>' +
                                    '</tr>');
                            });
                            if (!band) {
                                $('tbody#search-name-result').append('<tr id="0">' +
                                    '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                                    '</tr>');
                                 swal("Unable to find data");
                            }
                        }

                    }
                    else {
                        SearchLoan(response.errstock);
                        $('#ModalSearchVehicle').modal('hide');
                        $('tbody#search-name-result').append('<tr id="0">' +
                            '<td colspan="10" class="font-bold text-center">NOT FOUND DATA</td>' +
                            '</tr>');
                        swal("Unable to find data");
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(xhr.status);
                    console.log(thrownError);
                }
            });
        }
        //end


        $(document.body).on("click", "div#ModalSearchResults table#TableLoans tbody tr", function (e) {
            SearchLoanById($(this).attr('id'));
        });

        function cancelSearch() {
            $('div#ModalSearchResults').modal('hide');
            $('input[name="Vehicle.StockNumber"]').val('');
        }

        /************  END SEARCH VEHICLE ******** */
        function VerifyMilesAtSale() {
            if (parseFloat($('input[name=MilesAtSale]').val().split(',').join('')) <= parseFloat($('input[name="Vehicle.Miles"]').val())) {
                Swal.fire({
                    title: "Mileage is lower, Would you like to continue with that mileage?",
                    text: "",
                    type: "info",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "Yes",
                    cancelButtonText: "No",
                    closeOnConfirm: false,
                    closeOnCancel: false
                })
                    .then(resultado => {
                        if (resultado.value) {
                            $('input[name=MilesAtSale]').removeClass("error");
                        } else {
                            $('input[name=MilesAtSale]').addClass("error");
                        }
                    });
            } else {
                $('input[name=MilesAtSale]').removeClass("error");
                $('span[data-valmsg-for="MilesAtSale"]').empty();
            }
        }

        //Seach loans relation with stocknumber of vehicle
        function SearchLoan(ID) {
            swal({
                title: 'Searching...',
                text: '',
                allowOutsideClick: false,
                showConfirmButton: false,
                onOpen: () => {
                    swal.showLoading();
                    $.ajax({
                        type: 'GET',
                        url: "/AjaxSales/SearchLoanList?stock=" + ID,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            swal.close();
                            if (response.success) {
                                //Traer la información del vehiculo solamente
                                //el vehiculo esta disponible para venta
                                if ((response.status == 8 || response.status == 9)) {
                                    //Existen ventas pendientes aunque el vehiculo aun no se ha vendido
                                    if (response.Loan.length > 0)
                                        Swal.fire({
                                            title: "View Pending Sales?",
                                            text: "",
                                            type: "",
                                            showCancelButton: true,
                                            confirmButtonText: "Yes",
                                            cancelButtonText: "No",
                                            closeOnConfirm: true,
                                        })
                                            .then(resultado => {
                                                if (resultado.value) {
                                                    $('div#ModalSearchResults table#TableLoans tbody').empty();
                                                    $.each(response.Loan, function (i, item) {
                                                        $('div#ModalSearchResults table#TableLoans tbody').append('<tr id="' + item.LoanId + '">' +
                                                            '<td>' + item.Vehicle.StockNumber + '</td>' +
                                                            '<td>' + item.Buyer.LastName + '</td>' +
                                                            '<td>' + item.Buyer.Name + '</td>' +
                                                            '<td>' + item.Vehicle.Year + '</td>' +
                                                            '<td>' + item.Vehicle.Make + '</td>' +
                                                            '<td>' + item.Vehicle.Model + '</td>' +
                                                            '<td>' + item.Vehicle.VIN + '</td>' +
                                                            '<td>' + item.SoldDate + '</td>' +
                                                            '<td>' + item.EmployeIdOne + '</td>' +
                                                            '<td>Sale Pending</td></tr>');
                                                    });
                                                    $('div#ModalSearchResults').modal('show');
                                                } else {
                                                    SearchStock(ID, true);
                                                }
                                            });
                                    else  //no tiene ninguna venta pendiente
                                    {
                                        SearchStock(ID, true);
                                        SearchCRMStock(ID);
                                    }
                                }
                                //El vehiculo debe estar en la line ad enfrente para poder ser vendido
                                //tampoco se genero ninguna venta pendiente
                                else if (response.status != 8 && response.status != 9 && response.status != 10 && response.status != 11
                                    && response.Loan.length == 0) {
                                    statusMessage = "";
                                    if (response.status == 4) { statusMessage = "The vehicle is Check In"; }
                                    else if (response.status == 5) { statusMessage = "The vehicle is in Recon Dep."; }
                                    swal(statusMessage, "", "info");
                                }
                                //El vehiculo debe estar en la line ad enfrente para poder ser vendido
                                //Pero hay ventas pendientes generadas
                                else if (response.status != 8 && response.status != 9 && response.status != 10 && response.status != 11 && response.Loan.length > 0) {
                                    if (response.Loan.length > 1)
                                        Swal.fire({
                                            title: "This vehicle at pending sale / sold Would you like to view it?",
                                            text: "",
                                            type: "",
                                            showCancelButton: true,
                                            confirmButtonText: "Yes",
                                            cancelButtonText: "No",
                                            closeOnConfirm: true
                                        })
                                            .then(resultado => {
                                                if (resultado.value) {
                                                    $('div#ModalSearchResults table#TableLoans tbody').empty();
                                                    $.each(response.Loan, function (i, item) {
                                                        $('div#ModalSearchResults table#TableLoans tbody').append('<tr id="' + item.LoanId + '">' +
                                                            '<td>' + item.Vehicle.StockNumber + '</td>' +
                                                            '<td>' + item.Buyer.LastName + '</td>' +
                                                            '<td>' + item.Buyer.Name + '</td>' +
                                                            '<td>' + item.Vehicle.Year + '</td>' +
                                                            '<td>' + item.Vehicle.Make + '</td>' +
                                                            '<td>' + item.Vehicle.Model + '</td>' +
                                                            '<td>' + item.Vehicle.VIN + '</td>' +
                                                            '<td>' + item.SoldDate + '</td>' +
                                                            '<td>' + item.EmployeIdOne + '</td>' +
                                                            '<td>Pending</td></tr>');
                                                    });
                                                    $('div#ModalSearchResults').modal('show');
                                                }
                                            });
                                    else
                                        SearchLoanById(response.Loan[0].LoanId);

                                }
                                //El vehiculo ya esta vendido y no se genero ninguna venta pendiente
                                else if ((response.status == 10 || response.status == 11) && response.Loan.length == 0) {
                                    SearchLoanById(response.id);
                                }
                                //El vehiculo ya esta vendido pero se generaron ventas pendientes
                                else if ((response.status == 10 || response.status == 11) && response.Loan.length > 0) {
                                    if (response.Loan.length > 1)
                                        Swal.fire({
                                            title: "Vehicle Sold, Pending Sales Would You Like to View Them?  ",
                                            text: "",
                                            type: "",
                                            showCancelButton: true,
                                            confirmButtonText: "Yes",
                                            cancelButtonText: "No",
                                            closeOnConfirm: true
                                        })
                                            .then(resultado => {
                                                if (resultado.value) {
                                                    $('div#ModalSearchResults table#TableLoans tbody').empty();
                                                    $.each(response.Loan, function (i, item) {
                                                        $('div#ModalSearchResults table#TableLoans tbody').append('<tr id="' + item.LoanId + '">' +
                                                            '<td>' + item.Vehicle.StockNumber + '</td>' +
                                                            '<td>' + item.Buyer.LastName + '</td>' +
                                                            '<td>' + item.Buyer.Name + '</td>' +
                                                            '<td>' + item.Vehicle.Year + '</td>' +
                                                            '<td>' + item.Vehicle.Make + '</td>' +
                                                            '<td>' + item.Vehicle.Model + '</td>' +
                                                            '<td>' + item.Vehicle.VIN + '</td>' +
                                                            '<td>' + item.SoldDate + '</td>' +
                                                            '<td>' + item.EmployeIdOne + '</td>' +
                                                            '<td>Pending</td></tr>');
                                                    });
                                                    $('div#ModalSearchResults').modal('show');
                                                }
                                                else {
                                                    SearchLoanById(response.id);
                                                }
                                            });
                                    else
                                        SearchLoanById(response.Loan[0].LoanId);

                                }
                            }
                            else {
                                //El stock Number no existe
                                swal("Invalid Stock Number " + ID, "", "error");
                            }
                        }
                    });
                }
            });
        }

        function SearchBusiness(ID) {
            swal({
                title: 'Searching...',
                text: '',
                allowOutsideClick: false,
                showConfirmButton: false,
                onOpen: () => {
                    swal.showLoading();
                    $.ajax({
                        type: 'GET',
                        url: "/AjaxSales/SearchBusiness?Id=" + ID,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            swal.close();
                            if (response.success) {

                                if (response.BusinessDev.Lenguage != null && response.BusinessDev.Lenguage != "") {
                                    $('select[name="Buyer2.Lenguage"]').val(response.BusinessDev.Lenguage);
                                }

                                if (response.BusinessDev.Name != null && response.BusinessDev.Name != "")
                                    $('input[name="Buyer2.Name"]').val(response.BusinessDev.Name);

                                if (response.BusinessDev.LastName != null && response.BusinessDev.LastName != "")
                                    $('input[name="Buyer2.LastName"]').val(response.BusinessDev.LastName);

                                if (response.BusinessDev.MiddleName != null && response.BusinessDev.MiddleName != "")
                                    $('input[name="Buyer2.MiddleName"]').val(response.BusinessDev.MiddleName);

                                if (response.BusinessDev.ITIN_Number != null && response.BusinessDev.ITIN_Number != "")
                                    $('input[name="Buyer2.ITIN_Number"]').val(response.BusinessDev.ITIN_Number);

                                if (response.BusinessDev.ITIN_SSN != null && response.BusinessDev.ITIN_SSN != "")
                                    $('select[name="Buyer2.ITIN_SSN"]').val(response.BusinessDev.ITIN_SSN);

                                if (response.BusinessDev.DateBirth != null && response.BusinessDev.DateBirth != "")
                                    $('input[name="Buyer2.DateBirth"]').val(response.BusinessDev.DateBirth);

                                if (response.BusinessDev.Phone != null && response.BusinessDev.Phone != "")
                                    $('input[name="Buyer2.Phone"]').val(response.BusinessDev.Phone);

                                if (response.BusinessDev.Email != null && response.BusinessDev.Email != "")
                                    $('input[name="Buyer2.Email"]').val(response.BusinessDev.Email);

                                if (response.BusinessDev.Address != null && response.BusinessDev.Address != "")
                                    $('input[name="Buyer2.Residence[0].Address.Address"]').val(response.BusinessDev.Address);

                                if (response.BusinessDev.ZipCode != null && response.BusinessDev.ZipCode != "")
                                    $('input[name="Buyer2.Residence[0].Address.ZIPCode"]').val(response.BusinessDev.ZipCode);

                                if (response.BusinessDev.City != null && response.BusinessDev.City != "")
                                    $('input[name="Buyer2.Residence[0].Address.City"]').val(response.BusinessDev.City);

                                if (response.BusinessDev.State != null && response.BusinessDev.State != "")
                                    $('input[name="Buyer2.Residence[0].Address.State"]').val(response.BusinessDev.State);

                                if (response.BusinessDev.ReferredBy != null && response.BusinessDev.ReferredBy != "")
                                    $('select[name="Buyer2.ReferredBy"]').val(response.BusinessDev.ReferredBy);

                                if (response.BusinessDev.ProsEmployer != null && response.BusinessDev.ProsEmployer != "")
                                    $('input[name="Buyer2.Job[0].Employer"]').val(response.BusinessDev.ProsEmployer);

                                if (response.BusinessDev.MonthlyIncome != null && response.BusinessDev.MonthlyIncome != "")
                                    $('input[name="Buyer2.Job[0].MonthlyIncome"]').val(response.BusinessDev.MonthlyIncome);

                                if (response.BusinessDev.JobYears != null && response.BusinessDev.JobYears != "")
                                    $('input[name="Buyer2.Job[0].Years"]').val(response.BusinessDev.JobYears);

                                if (response.BusinessDev.JobMonths != null && response.BusinessDev.JobMonths != "")
                                    $('input[name="Buyer2.Job[0].Months"]').val(response.BusinessDev.JobMonths);

                                if (response.BusinessDev.JobPhone != null && response.BusinessDev.JobPhone != "")
                                    $('input[name="Buyer2.Job[0].Phone"]').val(response.BusinessDev.JobPhone);

                                if (response.BusinessDev.DriverLic_Number != null && response.BusinessDev.DriverLic_Number != "")
                                    $('input[name="Buyer2.DriverLic_Number"]').val(response.BusinessDev.DriverLic_Number);

                                if (response.BusinessDev.Co_Buyer_DriverLicIDType != null && response.BusinessDev.Co_Buyer_DriverLicIDType != "")
                                    $('select[name="Buyer2.DriverLicIDType"]').val(response.BusinessDev.Co_Buyer_DriverLicIDType);



                                if (response.Cobuyer != null) {
                                    if (response.Cobuyer.Name != null && response.Cobuyer.Name != "")
                                        $('input[name="Co_Buyer.Name"]').val(response.Cobuyer.Name);

                                    if (response.Cobuyer.LastName != null && response.Cobuyer.LastName != "")
                                        $('input[name="Co_Buyer.LastName"]').val(response.Cobuyer.LastName);

                                    if (response.Cobuyer.MiddleName != null && response.Cobuyer.MiddleName != "")
                                        $('input[name="Co_Buyer.MiddleName"]').val(response.Cobuyer.MiddleName);

                                    if (response.Cobuyer.ITIN_Number != null && response.Cobuyer.ITIN_Number != "")
                                        $('input[name="Co_Buyer.ITIN_Number"]').val(response.Cobuyer.ITIN_Number);

                                    if (response.Cobuyer.ITIN_SSN != null && response.Cobuyer.ITIN_SSN != "")
                                        $('select[name="Co_Buyer.ITIN_SSN"]').val(response.Cobuyer.ITIN_SSN);

                                    if (response.Cobuyer.DateBirth != null && response.Cobuyer.DateBirth != "")
                                        $('input[name="Co_Buyer.DateBirth"]').val(response.Cobuyer.DateBirth);

                                    if (response.Cobuyer.Phone != null && response.Cobuyer.Phone != "")
                                        $('input[name="Co_Buyer.Phone"]').val(response.Cobuyer.Phone);

                                    if (response.Cobuyer.Email != null && response.Cobuyer.Email != "")
                                        $('input[name="Co_Buyer.Email"]').val(response.Cobuyer.Email);

                                    if (response.Cobuyer.Address != null && response.Cobuyer.Address != "")
                                        $('input[name="Co_Buyer.Residence[0].Address.Address"]').val(response.Cobuyer.Address);

                                    if (response.Cobuyer.ZipCode != null && response.Cobuyer.ZipCode != "")
                                        $('input[name="Co_Buyer.Residence[0].Address.ZIPCode"]').val(response.Cobuyer.ZipCode);

                                    if (response.Cobuyer.City != null && response.Cobuyer.City != "")
                                        $('input[name="Co_Buyer.Residence[0].Address.City"]').val(response.Cobuyer.City);

                                    if (response.Cobuyer.State != null && response.Cobuyer.State != "")
                                        $('input[name="Co_Buyer.Residence[0].Address.State"]').val(response.Cobuyer.State);

                                    if (response.Cobuyer.ReferredBy != null && response.Cobuyer.ReferredBy != "")
                                        $('select[name="Co_Buyer.ReferredBy"]').val(response.Cobuyer.ReferredBy);

                                    if (response.Cobuyer.ProsEmployer != null && response.Cobuyer.ProsEmployer != "")
                                        $('input[name="Co_Buyer.Job[0].Employer"]').val(response.Cobuyer.ProsEmployer);

                                    if (response.Cobuyer.MonthlyIncome != null && response.Cobuyer.MonthlyIncome != "")
                                        $('input[name="Co_Buyer.Job[0].MonthlyIncome"]').val(response.Cobuyer.MonthlyIncome);

                                    if (response.Cobuyer.JobYears != null && response.Cobuyer.JobYears != "")
                                        $('input[name="Co_Buyer.Job[0].Years"]').val(response.Cobuyer.JobYears);

                                    if (response.Cobuyer.JobMonths != null && response.Cobuyer.JobMonths != "")
                                        $('input[name="Co_Buyer.Job[0].Months"]').val(response.Cobuyer.JobMonths);

                                    if (response.Cobuyer.JobPhone != null && response.Cobuyer.JobPhone != "")
                                        $('input[name="Co_Buyer.Job[0].Phone"]').val(response.Cobuyer.JobPhone);

                                    if (response.Cobuyer.DriverLic_Number != null && response.Cobuyer.DriverLic_Number != "")
                                        $('input[name="Co_Buyer.DriverLic_Number"]').val(response.Cobuyer.DriverLic_Number);

                                    if (response.Cobuyer.DriverLicIDType != null && response.Cobuyer.DriverLicIDType != "")
                                    $('select[name="Co_Buyer.DriverLicIDType"]').val(response.Cobuyer.DriverLicIDType);
                                }

                                if (response.TradeInList != null && response.TradeInList.length > 0) {
                                    window.valueTrade = setSplit(response.TradeInList[0].TradeInValue);
                                    window.lienTrade = setSplit(response.TradeInList[0].LienValue);
                                    var totalAmount = 0;

                                    $.each(response.TradeInList, function (i, item) {

                                        if (i == 0) {
                                            window.CountTradeIn = 1;
                                        }
                                        if (i == 1) {
                                            window.AddTradeIn();
                                        }
                                        auxvalueTrade = setSplit(item.TradeInValue);
                                        auxlienTrade = setSplit(item.LienValue);
                                        var auxtotalAmount = auxvalueTrade - auxlienTrade;
                                        if (i == 0 && item.Removed != 1)
                                            totalAmount = auxtotalAmount;
                                        else if (item.Removed != 1)
                                            totalAmount += auxtotalAmount;
                                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].PhotoId"]').val(item.IdPhoto);
                                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].VIN"]').val(item.VIN);
                                        $('#ModalTradeIn select[name="TradeInModal[' + i + '].Year"]').val(item.Year);
                                        $('#ModalTradeIn select[name="TradeInModal[' + i + '].State"]').val(item.State);
                                        $('#ModalTradeIn select[name="TradeInModal[' + i + '].Commercial"]').val(item.Commercial);
                                        $('#ModalTradeIn select[name="TradeInModal[' + i + '].Make"]').val(item.Make);
                                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].Model"]').val(item.Model);
                                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').val(item.SubModel);
                                        $('#ModalTradeIn select[name="TradeInModal[' + i + '].CYL"]').val(item.CYL);
                                        $('#ModalTradeIn select[name="TradeInModal[' + i + '].FuleType"]').val(item.FuelType);
                                        $('#ModalTradeIn select[name="TradeInModal[' + i + '].Transmision"]').val(item.Transmission);
                                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].Color"]').val(item.Color);
                                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].Miles"]').val(item.Miles);
                                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').val(item.LicenseNo);
                                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].Engine"]').val(item.Engine);
                                        if (item.LicenseNo == null || item.LicenseNo=="") {
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('checked', true);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                                        } else {
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('checked', false);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', false);
                                        }
                                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].TradeValue"]').val(item.TradeInValue);
                                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].LienValue"]').val(item.LienValue);
                                        $('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').val(item.Amount);
                                        console.log(item.Amount);
                                        console.log($('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').val());
                                        if (!isNull(item.Bank)) {
                                            $('#tradein-bank-' + i).show();
                                            $('input[name="TradeInModal[' + i + '].Bank"]').val(item.Bank);
                                        } else {
                                            $('#tradein-bank-' + i).hide();
                                        }

                                        $.each(response.tradeimages, function (i, item2) {
                                            if (item.IdPhoto == item2.Id) {
                                                $('#img-upload' + i).attr('src', item2.Hyperlink);
                                            }
                                        });

                                    });
                                    $('input[name="TradeIn"]').val(totalAmount.toFixed(2));
                                    SetAmount();
                                }
                                else {
                                    var totalAmount = 0;
                                    $('input[name="TradeIn"]').val(totalAmount.toFixed(2));
                                }


                            }
                            else {
                            }
                        }
                    });
                }
            });
        }
        function SearchLoanByName(ID) {
            swal({
                title: 'Searching...',
                text: '',
                allowOutsideClick: false,
                showConfirmButton: false,
                onOpen: () => {
                    swal.showLoading();
                    $.ajax({
                        type: 'GET',
                        url: "/AjaxSales/SearchLoanListByName?stock=" + ID,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            swal.close();
                            if (response.success) {
                                //Traer la información del vehiculo solamente
                                //el vehiculo esta disponible para venta
                                if ((response.status == 8 || response.status == 9)) {
                                    //Existen ventas pendientes aunque el vehiculo aun no se ha vendido
                                    if (response.Loan.length > 0)
                                        Swal.fire({
                                            title: "This vehicle at pending sale / sold Would you like to view it?",
                                            text: "",
                                            type: "",
                                            showCancelButton: true,
                                            confirmButtonText: "Yes",
                                            cancelButtonText: "No",
                                            closeOnConfirm: true,
                                        })
                                            .then(resultado => {
                                                if (resultado.value) {
                                                    $('div#ModalSearchResults table#TableLoans tbody').empty();
                                                    $.each(response.Loan, function (i, item) {
                                                        $('div#ModalSearchResults table#TableLoans tbody').append('<tr id="' + item.LoanId + '">' +
                                                            '<td>' + item.Vehicle.StockNumber + '</td>' +
                                                            '<td>' + item.Buyer.LastName + '</td>' +
                                                            '<td>' + item.Buyer.Name + '</td>' +
                                                            '<td>' + item.Vehicle.Year + '</td>' +
                                                            '<td>' + item.Vehicle.Make + '</td>' +
                                                            '<td>' + item.Vehicle.Model + '</td>' +
                                                            '<td>' + item.Vehicle.VIN + '</td>' +
                                                            '<td>' + item.SoldDate + '</td>' +
                                                            '<td>' + item.EmployeIdOne + '</td>' +
                                                            '<td>Sale Pending</td></tr>');
                                                    });
                                                    $('div#ModalSearchResults').modal('show');
                                                } else {
                                                    SearchStockByName(ID, true);
                                                }
                                            });
                                    else  //no tiene ninguna venta pendiente
                                        SearchStockByName(ID, true);
                                }
                                //El vehiculo debe estar en la line ad enfrente para poder ser vendido
                                //tampoco se genero ninguna venta pendiente
                                else if (response.status != 8 && response.status != 9 && response.status != 10 && response.status != 11
                                    && response.Loan.length == 0) {
                                    statusMessage = "";
                                    if (response.status == 4) { statusMessage = "The vehicle is Check In"; }
                                    else if (response.status == 5) { statusMessage = "The vehicle is in Recon Dep."; }
                                    swal(statusMessage, "", "info");
                                }
                                //El vehiculo debe estar en la line ad enfrente para poder ser vendido
                                //Pero hay ventas pendientes generadas
                                else if (response.status != 8 && response.status != 9 && response.status != 10 && response.status != 11 && response.Loan.length > 0) {
                                    if (response.Loan.length > 1)
                                        Swal.fire({
                                            title: "This vehicle at pending sale / sold Would you like to view it?",
                                            text: "",
                                            type: "",
                                            showCancelButton: true,
                                            confirmButtonText: "Yes",
                                            cancelButtonText: "No",
                                            closeOnConfirm: true
                                        })
                                            .then(resultado => {
                                                if (resultado.value) {
                                                    $('div#ModalSearchResults table#TableLoans tbody').empty();
                                                    $.each(response.Loan, function (i, item) {
                                                        $('div#ModalSearchResults table#TableLoans tbody').append('<tr id="' + item.LoanId + '">' +
                                                            '<td>' + item.Vehicle.StockNumber + '</td>' +
                                                            '<td>' + item.Buyer.LastName + '</td>' +
                                                            '<td>' + item.Buyer.Name + '</td>' +
                                                            '<td>' + item.Vehicle.Year + '</td>' +
                                                            '<td>' + item.Vehicle.Make + '</td>' +
                                                            '<td>' + item.Vehicle.Model + '</td>' +
                                                            '<td>' + item.Vehicle.VIN + '</td>' +
                                                            '<td>' + item.SoldDate + '</td>' +
                                                            '<td>' + item.EmployeIdOne + '</td>' +
                                                            '<td>Pending</td></tr>');
                                                    });
                                                    $('div#ModalSearchResults').modal('show');
                                                }
                                            });
                                    else
                                        SearchLoanById(response.Loan[0].LoanId);

                                }
                                //El vehiculo ya esta vendido y no se genero ninguna venta pendiente
                                else if ((response.status == 10 || response.status == 11) && response.Loan.length == 0) {
                                    SearchLoanById(response.id);
                                }
                                //El vehiculo ya esta vendido pero se generaron ventas pendientes
                                else if ((response.status == 10 || response.status == 11) && response.Loan.length > 0) {
                                    if (response.Loan.length > 1)
                                        Swal.fire({
                                            title: "Vehicle Sold, Pending Sales Would You Like to View Them?  ",
                                            text: "",
                                            type: "",
                                            showCancelButton: true,
                                            confirmButtonText: "Yes",
                                            cancelButtonText: "No",
                                            closeOnConfirm: true
                                        })
                                            .then(resultado => {
                                                if (resultado.value) {
                                                    $('div#ModalSearchResults table#TableLoans tbody').empty();
                                                    $.each(response.Loan, function (i, item) {
                                                        $('div#ModalSearchResults table#TableLoans tbody').append('<tr id="' + item.LoanId + '">' +
                                                            '<td>' + item.Vehicle.StockNumber + '</td>' +
                                                            '<td>' + item.Buyer.LastName + '</td>' +
                                                            '<td>' + item.Buyer.Name + '</td>' +
                                                            '<td>' + item.Vehicle.Year + '</td>' +
                                                            '<td>' + item.Vehicle.Make + '</td>' +
                                                            '<td>' + item.Vehicle.Model + '</td>' +
                                                            '<td>' + item.Vehicle.VIN + '</td>' +
                                                            '<td>' + item.SoldDate + '</td>' +
                                                            '<td>' + item.EmployeIdOne + '</td>' +
                                                            '<td>Pending</td></tr>');
                                                    });
                                                    $('div#ModalSearchResults').modal('show');
                                                }
                                                else {
                                                    SearchLoanById(response.id);
                                                }
                                            });
                                    else
                                        SearchLoanById(response.Loan[0].LoanId);

                                }
                            }
                            else {
                                //El stock Number no existe
                                swal("Invalid Stock Number " + ID, "", "error");
                            }
                        }
                    });
                }
            });
        }

        function SearchLoanListByVin(VIN) {
            swal({
                title: 'Searching...',
                text: '',
                allowOutsideClick: false,
                showConfirmButton: false,
                onOpen: () => {
                    swal.showLoading();
                    $.ajax({
                        type: 'GET',
                        url: "/AjaxSales/SearchLoanListByVin?vin=" + VIN,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            if (response.Loan.length > 1)
                                Swal.fire({
                                    title: "This vehicle at pending sale / sold Would you like to view it?",
                                    text: "",
                                    type: "",
                                    showCancelButton: true,
                                    confirmButtonText: "Yes",
                                    cancelButtonText: "No",
                                    closeOnConfirm: true,
                                })
                                    .then(resultado => {
                                        if (resultado.value) {
                                            $('div#ModalSearchResults table#TableLoans tbody').empty();
                                            $.each(response.Loan, function (i, item) {
                                                $('div#ModalSearchResults table#TableLoans tbody').append('<tr id="' + item.LoanId + '">' +
                                                    '<td>' + item.Vehicle.StockNumber + '</td>' +
                                                    '<td>' + item.Buyer.LastName + '</td>' +
                                                    '<td>' + item.Buyer.Name + '</td>' +
                                                    '<td>' + item.Vehicle.Year + '</td>' +
                                                    '<td>' + item.Vehicle.Make + '</td>' +
                                                    '<td>' + item.Vehicle.Model + '</td>' +
                                                    '<td>' + item.Vehicle.VIN + '</td>' +
                                                    '<td>' + item.SoldDate + '</td>' +
                                                    '<td>' + item.EmployeIdOne + '</td>' +
                                                    '<td>Sale Pending</td></tr>');
                                            });
                                            $('div#ModalSearchResults').modal('show');
                                        } else {
                                            SearchLoanByVin(VIN);
                                        }
                                    });
                            else  //no tiene ninguna venta pendiente
                            {
                                SearchLoanByVin(VIN);
                                SearchCRMVin(ID);
                            }


                        }
                    });
                }
            });
        }

        //Seach loans relation with VIN of vehicle
        function SearchLoanByVin(id) {
            if (!isNull(id)) {

                swal({
                    title: 'Searching...',
                    text: '',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    onOpen: () => {
                        swal.showLoading();
                        $.ajax({
                            type: 'GET',
                            url: "/AjaxSales/SearchLoanByVin?vin=" + id,
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                if (response.success)
                                {
                                    console.log(response);
                                    window.salesTaxRate = response.taxRate;
                                    FirstLoad = 0;
                                    $('input[name="Id_"]').val(response.id);
                                    //Status of Loan
                                    // 0 - Sale Panding
                                    if (response.Loan.StatusChangeId == 0) {
                                        if ((response.Loan.Vehicle.Status).includes("8") || (response.Loan.Vehicle.Status).includes("9")) {
                                            $('#ModalSweetAlert button[name="Pending"]').show();
                                            $('#ModalSweetAlert button[name="Trip"]').show();
                                            $('#ModalSweetAlert button[name="Trip"]').text('Trip');
                                        }
                                        else if (response.Loan.Vehicle.Status.includes("10") || response.Loan.Vehicle.Status.includes("11")) {
                                            $('#ModalSweetAlert button[name="Pending"]').hide();
                                            $('#ModalSweetAlert button[name="Trip"]').hide();
                                            $('#ModalSweetAlert button[name="Trip"]').text('Trip');
                                        }
                                    }
                                    // The Sales is not pending
                                    else if (response.Loan.StatusChangeId > 0) {
                                        $('#ModalSweetAlert button[name="Pending"]').hide();
                                        $('#ModalSweetAlert button[name="Trip"]').show();
                                        $('#ModalSweetAlert button[name="Trip"]').text('Save Changes');
                                    }
                                    $('input[type=hidden][name="LoanId"]').val(response.Loan.LoanId);
                                    $('input[type=hidden][name="LoanId_"]').val(response.id);
                                    $('input[type=hidden][name="CarId"]').val(response.Loan.CarId);
                                    $('input[type=hidden][name="VerifySalePrice"]').val(1);

                                    /*********Forms DMV*********/
                                    var aux = "";
                                    CurrentDate = new Date();
                                    Year = CurrentDate.getFullYear();
                                    $('select[name="typeLicense"]').val("11");
                                    $('input[name="yearModel"]').val(response.Loan.Vehicle.Year.trim());
                                    $('select[name="motivePower"]').val("G");

                                    $('input[name="operatedMonth"]').val(response.Loan.SoldDate.split("/")[0]);
                                    $('input[name="operatedDay"]').val(response.Loan.SoldDate.split("/")[1]);
                                    $('input[name="operatedYear"]').val(response.Loan.SoldDate.split("/")[2]);

                                    $('input[name="purchaseMonth"]').val(response.Loan.SoldDate.split("/")[0]);
                                    $('input[name="purchaseDay"]').val(response.Loan.SoldDate.split("/")[1]);
                                    $('input[name="purchaseYear"]').val(response.Loan.SoldDate.split("/")[2]);

                                    $("#acquiredTypes0").prop("checked", true);

                                    var price = "";
                                    if (response.Loan.SalePrice.includes("."))
                                        price = response.Loan.SalePrice.split(".")[0];

                                    $('input[name="purchasePrice"]').val(price.replace(",", "").trim());
                                    $('input[name="useTaxCredit"]').val("0");

                                    $('select[name="countyCode"]').val("24");
                                    $('input[name="cityName"]').val("ATWATER");
                                    $('input[name="zipCode"]').val("95301");

                                    /********* STEP 1  ********/

                                    $('a#linkCRM').attr('href', '/Marketing/Edit/' + response.Loan.Vehicle.Id);
                                    //First Column
                                    $('input[name="Date"]').datepicker("setDate", new Date(response.Loan.Date));
                                    $('input[name="SoldDate"]').datepicker("setDate", new Date(response.Loan.SoldDate));
                                    $('select[name="StoreId"]').val(response.Loan.StoreId);
                                    $('select[name="BankId"]').val(response.Loan.BankId);
                                    SearchBank(response.Loan.BankId);
                                    $('input[name="Vehicle.StockNumber"]').val(response.Loan.Vehicle.StockNumber);
                                    $('input[name="Vehicle.Year"]').val(response.Loan.Vehicle.Year);
                                    $('input[name="Vehicle.Make"]').val(response.Loan.Vehicle.Make);
                                    $('input[name="Vehicle.Make1"]').val(response.Loan.Vehicle.Make);
                                    $('input[name="Vehicle.Model"]').val(response.Loan.Vehicle.Model);
                                    $('input[name="Vehicle.Model1"]').val(response.Loan.Vehicle.Model);
                                    $('input[name="Vehicle.Type"]').val(response.Loan.Vehicle.Type);
                                    $('input[name="Vehicle.Color"]').val(response.Loan.Vehicle.Color);
                                    $('input[name="Vehicle.Miles"]').val(response.Loan.Vehicle.Miles);
                                    $('input[name="Vehicle.VIN"]').val(response.Loan.Vehicle.VIN);
                                    $('input[name="Vehicle.CYL"]').val(response.Loan.Vehicle.CYL);
                                    $('#ModalDocCheckList input[name="IdCar"]').val(response.Loan.Vehicle.Id);
                                    stateCar = response.Loan.Vehicle.State;
                                    //Transmissión
                                    if ($.isNumeric(response.Loan.Vehicle.Transmission)) {
                                        if (parseInt(response.Loan.Vehicle.Transmission) == 0) {
                                            $('input[name="Vehicle.Transmission"]').val('Manual');
                                        }
                                        else if (parseInt(response.Loan.Vehicle.Transmission) == 1) {
                                            $('input[name="Vehicle.Transmission"]').val('Automatic');
                                        }
                                    } else {
                                        $('input[name="Vehicle.Transmission"]').val('Not Defined');
                                    }
                                    $('input[name="Vehicle.LicenseNo"]').val(response.Loan.Vehicle.LicenseNo);
                                    $('input[name="Vehicle.TagExp"]').val(response.Loan.Vehicle.TagExpAux);
                                    $('input[name="VehicleStatusName"]').val(response.Loan.Vehicle.StatusName);
                                    $('input[name="Vehicle.KeyNo"]').val(response.Loan.Vehicle.KeyNo);
                                    $('input[name="MilesAtSale"]').val(response.Loan.MilesAtSale);
                                    $('input[name="ROS"]').val(response.Loan.ROS);
                                    $('input[name="TimeTags"]').val(response.Loan.TimeTags);
                                    $('input[name="SelectTimeTags"]').prop('checked', false);

                                    if (response.Prices != null) {
                                        $('input[name="SalesPricesModal.Retail"]').val(formatearNumero(parseFloat(response.Prices.KBBRetail).toFixed(2)));
                                        $('input[name="SalesPricesModal.Whosale"]').val(formatearNumero(parseFloat(response.Prices.Whosale).toFixed(2)));
                                    }

                                    if (isNull(response.Loan.Vehicle.LicenseNo) || response.Loan.Vehicle.LicenseNo.includes("NONE")) {
                                        $('i#add-license-no').show();
                                        $('button[name="SaveCancelModalLicenseNo"]').show();
                                    }
                                    else {
                                        $('i#add-license-no').hide();
                                        $('button[name="SaveCancelModalLicenseNo"]').hide();
                                    }

                                    // 2nd Column
                                    //TaxRate_fess
                                    window.TaxRate_Fees = 0;
                                    //Sales Prices
                                    $('input[name="SalesPricesModal.CommisionCost"]').val(formatearNumero(parseFloat(response.Loan.Vehicle.CommisionCost).toFixed(2)));
                                    if (response.Prices != null) {
                                    window.priceMax = response.Prices.MaxPrice;
                                    window.priceMin = response.Prices.MinPrice;
                                    $('input[name="SalesPricesModal.CMA"]').val(formatearNumero(parseFloat(response.Prices.CMA).toFixed(2)));
                                    $('input[name="SalesPricesModal.Competitors"]').val(formatearNumero(parseFloat(response.Prices.Competitors).toFixed(2)));
                                    $('input[name="SalesPricesModal.SuggestedPrice"]').val(formatearNumero(parseFloat(response.Prices.SuggestedPrice).toFixed(2)));
                                  
                                    $('input[name="SalesPricesModal.MaxPrice"]').val(formatearNumero(parseFloat(response.Prices.MaxPrice).toFixed(2)));
                                    $('input[name="SalesPricesModal.MinPrice"]').val(formatearNumero(parseFloat(response.Prices.MinPrice).toFixed(2)));

                                  
                                        $('input[name="SalesPricesModal.Retail"]').val(formatearNumero(parseFloat(response.Prices.KBBRetail).toFixed(2)));
                                        $('input[name="SalesPricesModal.Whosale"]').val(formatearNumero(parseFloat(response.Prices.Whosale).toFixed(2)));
                                    }

                                    window.salePrice = setSplit(response.Loan.SalePrice);
                                    window.gapInsurance = setSplit(response.Loan.GapInsurance);
                                    window.accessories = setSplit(response.Loan.Accessories);
                                    window.serviceContract = setSplit(response.Loan.ServiceContract);
                                    window.dmvAutoCalculate = setSplit(response.Loan.DMVAutoCalculate);
                                    $('input[name="SalePrice"]').val(response.Loan.SalePrice);
                                    //Here VerifyPrice
                                    var accesoriesAux = 0;
                                    $.each(response.Loan.Accesories, function (i, item) {
                                        if (item.Category != null) {
                                            accesoriesAux = parseFloat(parseFloat(accesoriesAux) + parseFloat(item.Amount));
                                            $('input[name="Accesories[' + item.Category + '].AmountAux"]').val(formatearNumero(parseFloat(item.Amount).toFixed(2)));
                                            $('input[name="Accesories[' + item.Category + '].Company"]').val(parseFloat(item.Company));
                                            $('input[name="Accesories[' + item.Category + '].Product"]').val(parseFloat(item.Product));
                                            $('input[name="Accesories[' + item.Category + '].ContractNo"]').val(item.ContractNo);
                                        }
                                    });
                                    $('input[name="Accessories"]').val(formatearNumero(parseFloat(accesoriesAux).toFixed(2)));

                                    $('input[name="Fees"]').val(response.Loan.Fees);
                                    $('input[name="ServiceContract"]').val(response.Loan.ServiceContract);
                                    $('input[name="SalesTax"]').val(response.Loan.SalesTax);
                                    $("#TaxRate_Fees").val(0);
                                    if (response.Loan.TaxRate_Fees != null) {
                                        window.TaxRate_Fees = response.Loan.TaxRate_Fees;
                                        $("#TaxRate_Fees").val(window.TaxRate_Fees);
                                    }

                                    $('span#Rate').text('Tax Rate: ' + response.taxRate + '%');
                                    $('input[type=hidden][name="SalesTaxRate"]').val(response.taxRate);
                                    $('input[name="DMVAutoCalculate"]').val(response.Loan.DMVAutoCalculate);
                                    $('input[name="RegistrationFeesDue"]').val(formatearNumero(/*parseFloat*/(response.Loan.RegistrationFeesDue)));
                                    $('input[name="GapInsurance"]').val(response.Loan.GapInsurance);
                                    $('select[name="GapInsurance_Company"]').val(response.Loan.GapInsurance_Company);
                                    $('select[name="Protection_Plan"]').val(response.Loan.Protection_Plan);
                                    $('input[name="GapIncurance.Amount"]').val(response.Loan.GapInsurance);
                                    $('input[name="GapInsurance_ContractNo"]').val(response.Loan.GapInsurance_ContractNo);

                                    $('input[name="DMVAutoCalculate"]').val(response.Loan.DMVAutoCalculate);
                                    $('input[name="SubTotal"]').val(response.Loan.SubTotal);
                                    $('input[name="TradeIn"]').val(response.Loan.TradeIn);
                                    $('input[name="DifferDownPayment"]').val(response.Loan.DifferDownPayment);
                                    
                                    $('input[name="DownPaymentPRCO"]').val(response.Loan.DownPaymentPRCO);
                                    $('input[name="TotalDown"]').val(/*response.TotalDown*/);
                                    $('input[name="DPReceivedPRCONo"]').val(response.Loan.DPReceivedNotebokNo);
                                    $('input[name="DPReceivedNotebokNo"]').val(response.Loan.DPReceivedPRCONo);

                                    //Here Modals Step 1 Column 2
                                    //Modal Fees
                                    window.smogFee = setSplit(response.Loan.Vehicle.SmogFeeDecimal + '');
                                    window.docFee = setSplit(response.Loan.FeesModal.DocFee + '');
                                    window.cancellationOption = setSplit(response.Loan.FeesModal.CancellationOption);
                                    $('#ModalFees input[name="FeesModal.DocFee"]').val(response.Loan.FeesModal.DocFee);
                                    $('#ModalFees input[name="FeesModal.SmogFee"]').val(formatearNumero(parseFloat(response.Loan.Vehicle.SmogFeeDecimal).toFixed(2)));
                                    $('#ModalFees input[name="FeesModal.SmogCertificationFee"]').val(response.Loan.FeesModal.SmogCertificationFee);
                                    $('#ModalFees input[name="FeesModal.StateEmissionExempti"]').val(response.Loan.FeesModal.StateEmissionExempti);
                                    $('#ModalFees input[name="FeesModal.CancellationOption"]').val(response.Loan.FeesModal.CancellationOption);
                                    $('#ModalFees input[name="FeesModal.SelectedCancellationOption"]').prop('checked', false);
                                    $('#ModalFees input[name="FeesModal.TireFee"]').val(response.Loan.FeesModal.TireFee);
                                    $('#ModalFees input[name="FeesModal.ElectronicRegistrationFee"]').val(response.Loan.FeesModal.ElectronicRegistrationFee);
                                    $('#ModalFees input[name="FeesModal.Total"]').val(response.Loan.FeesModal.Total);

                                    //Modal DMVAutoCalculate
                                    window.licenseFee = setSplit(parseFloat(response.Loan.DMVFeesModal.LicenseFee).toFixed(2));
                                    window.auxlicenseFee = setSplit(parseFloat(response.Loan.DMVFeesModal.LicenseFee).toFixed(2));;
                                    window.registrationTransfer = setSplit(parseFloat(response.Loan.DMVFeesModal.RegistrationTransfer).toFixed(2));
                                    $('#ModalDMV input[name="DMVFeesModal.LicenseFee"]').val(formatearNumero(parseFloat(response.Loan.DMVFeesModal.LicenseFee).toFixed(2)));
                                    $('#ModalDMV input[name="DMVFeesModal.RegistrationTransfer"]').val(formatearNumero(parseFloat(response.Loan.DMVFeesModal.RegistrationTransfer).toFixed(2)));
                                    $('#ModalDMV input[name="DMVFeesModal.PublicOfficialFees"]').val(formatearNumero(parseFloat(response.Loan.DMVFeesModal.PublicOfficialFeesDecimal).toFixed(2)));

                                    //Modal Service Contract
                                    window.company = setSplit(response.Loan.ServiceContractModal.Company);
                                    window.coverage = setSplit(response.Loan.ServiceContractModal.Coverage);
                                    window.terms = setSplit(response.Loan.ServiceContractModal.Terms);
                                    window.atMiles = setSplit(response.Loan.ServiceContractModal.Miles);
                                    window.price = setSplit(response.Loan.ServiceContractModal.Price);
                                    window.finacedBy = response.Loan.ServiceContractModal.FinancedBy;
                                    $('#ModalServiceCont select[name="ServiceContractModal.Company"]').val(response.Loan.ServiceContractModal.Company);
                                    $('#ModalServiceCont select[name="ServiceContractModal.Coverage"]').val(response.Loan.ServiceContractModal.Coverage);
                                    $('#ModalServiceCont input[name="ServiceContractModal.Terms"]').val(response.Loan.ServiceContractModal.Terms);
                                    $('#ModalServiceCont input[name="ServiceContractModal.Miles"]').val(formatearNumero(parseFloat(response.Loan.ServiceContractModal.Miles).toFixed(0)));
                                    $('#ModalServiceCont input[name="ServiceContractModal.Price"]').val(formatearNumero(parseFloat(response.Loan.ServiceContractModal.Price).toFixed(2)));
                                    $('#ModalServiceCont input[name="ServiceContractModal.ContractNo"]').val(response.Loan.ServiceContractModal.ContractNo);
                                    $('#ModalServiceCont input[name="ServiceContractModal.FinancedBy"][value="' + window.finacedBy + '"]').prop('checked', true);
                                    $('span#serviceContractFinancedBy').text(window.finacedBy);

                                    //TradeIn
                                    window.TradeInValues = response.Loan.TradeInModal;
                                    if (response.Loan.TradeInModal.length > 0 && parseFloat(response.Loan.TradeInModal[0].Id) > 0) {
                                        window.valueTrade = setSplit(response.Loan.TradeInModal[0].TradeValue);
                                        window.lienTrade = setSplit(response.Loan.TradeInModal[0].LienValue);
                                        var totalAmount = 0;

                                        $.each(response.Loan.TradeInModal, function (i, item) {

                                            if (i == 0) {
                                                $('button[name="DeleteTradeIn1"]').removeClass("gone");
                                                window.CountTradeIn = 1;
                                            }
                                            if (i == 1) {
                                                window.AddTradeIn();
                                            }
                                            auxvalueTrade = setSplit(item.TradeValue);
                                            auxlienTrade = setSplit(item.LienValue);
                                            var auxtotalAmount = auxvalueTrade - auxlienTrade;
                                            if (i == 0 && item.Removed != 1)
                                                totalAmount = auxtotalAmount;
                                            else if (item.Removed != 1)
                                                totalAmount += auxtotalAmount;
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].CardId"]').val(item.CardId);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].VIN"]').val(item.VIN);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Year"]').val(item.Year);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].State"]').val(item.State);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Commercial"]').val(item.Commercial);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Make"]').val(item.Make);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Model"]').val(item.Model);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').val(item.SubModel);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].CYL"]').val(item.CYL);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].FuleType"]').val(item.FuleType);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Transmision"]').val(item.Transmision);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Color"]').val(item.Color);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Miles"]').val(item.Miles);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').val(item.LicensNo);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Engine"]').val(item.Engine);
                                            if (item.LicensNONE) {
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('checked', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                                            } else {
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('checked', false);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', false);
                                            }
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].TradeValue"]').val(item.TradeValue);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].LienValue"]').val(item.LienValue);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').val(item.Amount);
                                            console.log(item.Amount);
                                            console.log($('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').val());
                                            if (!isNull(item.Bank)) {
                                                $('#tradein-bank-' + i).show();
                                                $('input[name="TradeInModal[' + i + '].Bank"]').val(item.Bank);
                                            } else {
                                                $('#tradein-bank-' + i).hide();
                                            }

                                            if (item.Removed == 1) {
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].CardId"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].VIN"]').prop('readonly', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Year"]').prop('disabled', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].State"]').prop('disabled', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Commercial"]').prop('disabled', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Make"]').prop('disabled', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Model"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').prop('readonly', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].CYL"]').prop('disabled', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].FuleType"]').prop('disabled', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Transmision"]').prop('disabled', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Color"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Miles"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Engine"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].TradeValue"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LienValue"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').prop('readonly', true);
                                                $('input[name="TradeInModal[' + i + '].Bank"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('disabled', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + ']_Removed"]').val(1);

                                                $('button[name="DeleteTradeIn' + (i + 1) + '"]').addClass("gone");
                                                $('button[name="RestoreTradeIn' + (i + 1) + '"]').removeClass("gone");
                                            }
                                            else {
                                                if (i == 0) {
                                                    $('button[name="DeleteTradeIn' + (i + 1) + '"]').removeClass("gone");
                                                }
                                                $('button[name="RestoreTradeIn' + (i + 1) + '"]').addClass("gone");
                                            }

                                        });
                                        $('input[name="TradeIn"]').val(totalAmount.toFixed(2));
                                        SetAmount();
                                    }
                                    else {
                                        var totalAmount = 0;
                                        $('input[name="TradeIn"]').val(totalAmount.toFixed(2));
                                    }

                                    //Receives NOTEBOOK and PRCO
                                    //$.each(response.Loan.ReceivesNotebookAndPRCO, function (i, item) {
                                       
                                    //    $('#ModalPRCO input[name="ReceivesNotebookAndPRCO[' + i + '].PRCO"]').val(item.PRCO);
                                    //    $('#ModalPRCO input[name="ReceivesNotebookAndPRCO[' + i + '].Notebook"]').val(item.Notebook);
                                    //});

                                    $.each(response.Loan.ReceivesNotebook, function (i, item) {
                                        if (item.Type == 1 || item.Type == 2) {
                                            if (item.Type == 2) {
                                                $('#ModalPRCO input[name="ReceivesNotebook[1].PRCO"]').val(item.PRCO.toFixed(2));
                                                $('#ModalPRCO input[name="ReceivesNotebook[1].Notebook"]').val(item.Notebook);
                                            }
                                            if (item.Type == 1) {
                                                $('#ModalPRCO input[name="ReceivesNotebook[0].PRCO"]').val(item.PRCO);
                                                $('#ModalPRCO input[name="ReceivesNotebook[0].Notebook"]').val(item.Notebook);
                                            }
                                        } else {
                                            $('#ModalPRCO input[name="ReceivesNotebook[' + i + '].PRCO"]').val(item.PRCO);
                                            $('#ModalPRCO input[name="ReceivesNotebook[' + i + '].Notebook"]').val(item.Notebook);
                                        }
                                       
                                    });

                                    //DifferDownPayment
                                    $.each(response.Loan.AmountsPaymentsAndDates, function (i, item) {
                                        if (i == 0) {
                                            window.firstAmount = setSplit(item.Amount);
                                            window.firstDate = setSplit(item.Date);
                                            $('#ModalDifferDown select[name="DeferredDownPaymentsModal.AprovedBy"]').val(item.ApprovedById);
                                        }
                                        else if (i == 1) {
                                            window.secondAmount = setSplit(item.Amount);
                                            window.secondDate = setSplit(item.Date);
                                        }
                                        else if (i == 1) {
                                            window.threeAmount = setSplit(item.Amount);
                                            window.threeDate = setSplit(item.Date);
                                        }
                                        $('#ModalDifferDown input[name="AmountsPaymentsAndDates[' + i + '].Amount"]').val(item.Amount);
                                        $('#ModalDifferDown input[name="AmountsPaymentsAndDates[' + i + '].Date"]').val(item.Date);
                                    });
                                    console.log(response);
                                    //3rd Column
                                    $('input[name="AmountFinanced"]').val(response.Loan.AmountFinanced);
                                    $('input[name="APR"]').val(response.financeStruture.APR);
                                    $('input[name="Term"]').val(response.financeStruture.Terms);
                                    $('input[name="Payment"]').val(response.financeStruture.Payment);
                                    $('input[name="FirstPaymentDue"]').datepicker("setDate", new Date(response.financeStruture.FirstPaymentDue));
                                    $('input[name="DaysDue"]').val(response.financeStruture.Daydue);
                                    $('input[name="FinalPayment"]').val(response.financeStruture.FinalPayment);
                                    $('input[name="TotalPayment"]').val(response.financeStruture.TotalOfPayments);
                                    $('input[name="FinanceCharges"]').val(response.financeStruture.FinanceCharges);
                                    $('input[name="TotalSalesPrice"]').val(response.financeStruture.TotalOfPayments);

                                    // F&I
                                    /*$('input[name="FYIFinalAmount"]').val(response.Loan.AmountFinanced);*/
                                    finalAmount = setSplit(response.Loan.AmountFinanced);

                                    //falta arrastras foto del vehiculo
                                    $('#ModalViewPhoto img').attr('src', '');
                                    if (response.imageCar.ExistImage) {
                                        $('#ModalViewPhoto img').attr('src', response.imageCar.Hyperlink);
                                    }
                                    //Falta Duebill
                                    $('textarea[name="DueBill"],span#duebill-status').empty();
                                    $('span#duebill-status').removeClass();
                                    if (response.duebill.ExistDueBill) {
                                        $('textarea[name="DueBill"]').val(response.duebill.DueBill);
                                        $('textarea[name="DueBill"]').prop('disabled', true);
                                        $('button[name="SaveDueBill"]').prop('disabled', true);
                                        if (response.duebill.Status == 0) {
                                            $('span#duebill-status').text('Pending');
                                            $('span#duebill-status').addClass('badge badge-danger');
                                        }
                                        else if (response.duebill.Status == 1) {
                                            $('span#duebill-status').text('Completed');
                                            $('span#duebill-status').addClass('badge badge-primary');
                                        }
                                        else if (response.duebill.Status == 2) {
                                            $('span#duebill-status').text('Canceled');
                                            $('span#duebill-status').addClass('badge badge-success');
                                        }
                                    } else {
                                        $('textarea[name="DueBill"]').prop('disabled', false);
                                        $('button[name="SaveDueBill"]').prop('disabled', false);
                                    }

                                    $('tbody#dubill-notes').empty();
                                    existNote = false;
                                    $.each(response.duebillNotes, function (i, item) {
                                        existNote = true;
                                        $('tbody#dubill-notes').append('<tr>' +
                                            '<td>' + item.DateAux + '</td>' +
                                            '<td>' + item.Note + '</td>' +
                                            '<td>' + item.EmployeeName + '</td>' +
                                            '</tr>');
                                    });
                                    if (!existNote) {
                                        $('tbody#dubill-notes').append('<tr><td colspan="3" class="text-center">NO DATA RESULT</td></tr>');
                                    }

                                    //Sales Notes
                                    $('button[name="SaveModalNotes"]').hide();
                                    $('button[name="SaveNoteFinance"]').show();
                                    $('button[name="SendNotif"]').show();
                                    $.fn.SetSalesNotes(response.salesNotes);

                                    /*****    Step 2     **/
                                    //Buyer
                                    $('input[name="Buyer2.Name"]').val(response.Loan.Buyer.Name);
                                    $('input[name="Buyer2.LastName"]').val(response.Loan.Buyer.LastName);
                                    $('input[name="Buyer2.MiddleName"]').val(response.Loan.Buyer.MiddleName);
                                    $('input[name="Buyer2.ITIN_Number"]').val(response.Loan.Buyer.ITIN_Number);
                                    $('select[name="Buyer2.ITIN_SSN"]').val(response.Loan.Buyer.ITIN_SSN);
                                    $('input[name="Buyer2.DateBirth"]').datepicker("setDate", new Date(response.Loan.Buyer.DateBirth));
                                    if (response.Loan.Buyer.Expiration != "")
                                        $('input[name="Buyer2.Expiration"]').datepicker("setDate", new Date(response.Loan.Buyer.Expiration));
                                    $('select[name="Buyer2.ReferredBy"]').val(response.Loan.Buyer.ReferredBy);
                                    $('input[name="Buyer2.DriverLic_Number"]').val(response.Loan.Buyer.DriverLic_Number);
                                    $('select[name="Buyer2.DriverLicIDType"]').val(response.Loan.Buyer.DriverLicIDType);
                                    $('input[name="Buyer2.Phone"]').val(response.Loan.Buyer.Phone);
                                    $('input[name="Buyer2.Email"]').val(response.Loan.Buyer.Email);
                                    $('select[name="Buyer2.MaritalStatus"]').val(response.Loan.Buyer.MaritalStatus);
                                    $('select[name="Buyer2.Ownership"]').val(response.Loan.Buyer.Ownership);


                                    if (response.Loan.Buyer.Lenguage != null) {
                                        $("select[name='Buyer2.Lenguage']").val(response.Loan.Buyer.Lenguage);
                                        if (response.Loan.Buyer.Lenguage == 1) {
                                            $('select.spanish,label#Spanish').addClass('hidden');
                                            $('select.spanish').val(2);//N/A
                                        }
                                    }

                                    $('input[name="Buyer2.Payment"],input[name="BuyerPayment"]').val(formatearNumero(parseFloat(response.Loan.Buyer.Payment).toFixed(2)));

                                    //Mailing Address
                                    $('input[name="Buyer2.MailingAddress.Address"]').val(response.Loan.Buyer.MailingAddress.Address);
                                    $('input[name="Buyer2.MailingAddress.ZIPCode"]').val(response.Loan.Buyer.MailingAddress.ZIPCode);
                                    $('input[name="Buyer2.MailingAddress.City"]').val(response.Loan.Buyer.MailingAddress.City);
                                    $('input[name="Buyer2.MailingAddress.State"]').val(response.Loan.Buyer.MailingAddress.State);

                                    //Residence
                                    $.each(response.Loan.Buyer.Residence, function (i, item) {
                                        $('input[name="Buyer2.Residence[' + i + '].Address.Address"]').val(item.Address.Address);
                                        $('input[name="Buyer2.Residence[' + i + '].Address.ZIPCode"]').val(item.Address.ZIPCode);
                                        $('input[name="Buyer2.Residence[' + i + '].Address.City"]').val(item.Address.City);
                                        $('input[name="Buyer2.Residence[' + i + '].Address.State"]').val(item.Address.State);
                                        $('input[name="Buyer2.Residence[' + i + '].Address.County"]').val(item.Address.County);
                                        $('input[name="Buyer2.Residence[' + i + '].Years"]').val(item.Years);
                                        $('input[name="Buyer2.Residence[' + i + '].Months"]').val(item.Months);

                                        if (i == 0) {
                                            $.EffectiveSalesTaxRate2(item.Address.Address, item.Address.City, item.Address.ZIPCode);
                                            /*$('input[name="FYICounty"]').val(item.Address.County);*/
                                        }

                                    });

                                    //Job
                                    $.each(response.Loan.Buyer.Job, function (i, item) {
                                        $('input[name="Buyer2.Job[1].SeconJob"]').val(item.SeconJob);
                                        $('input[name="Buyer2.Job[' + i + '].Employer"]').val(item.Employer);
                                        $('input[name="Buyer2.Job[' + i + '].MonthlyIncome"]').val(formatearNumero(parseFloat(item.MonthlyIncome).toFixed(2)));
                                        $('input[name="Buyer2.Job[' + i + '].Years"]').val(item.Years);
                                        $('input[name="Buyer2.Job[' + i + '].Months"]').val(item.Months);
                                        $('input[name="Buyer2.Job[' + i + '].Phone"]').val(item.Phone);
                                        $('input[name="Buyer2.Job[' + i + '].Contact"]').val(item.Contact);
                                        $('input[name="Buyer2.Job[' + i + '].Address.Address"]').val(item.Address.Address);
                                        $('input[name="Buyer2.Job[' + i + '].Address.ZIPCode"]').val(item.Address.ZIPCode);
                                        $('input[name="Buyer2.Job[' + i + '].Address.City"]').val(item.Address.City);
                                        $('input[name="Buyer2.Job[' + i + '].Address.State"]').val(item.Address.State);
                                        $('input[name="Buyer2.Job[' + i + '].Address.County"]').val(item.Address.County);
                                        if (i == 0) {
                                            /*$('input[name="FYIEmploymentCounty"]').val(item.Address.County);*/
                                            $('input[name="Buyer2.Job[0].Retire_SSI"]').val(item.Retire_SSI);
                                            if (item.Retire_SSI) {
                                                $('.retire-ssi-required').empty();
                                            }
                                        }
                                    });
                                    if ($('input[name="Buyer2.Job[0].Employer"]').val() == "Unemployed") {
                                        $('input[name="Buyer2.Job[0].Employer"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].MonthlyIncome"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Years"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Months"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Phone"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Contact"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Address.Address"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Address.ZIPCode"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Address.City"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Address.State"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Address.County"]').attr("readonly", true);
                                    }
                                    if ($('input[name="Buyer2.Job[0].Employer"]').val() == "Self-Employed") {
                                        $('.retire-ssi-required').empty();
                                        $('#MonthlyIncomeReq').html('*');
                                        $('#EmployTimeReq').html('*');
                                        $('input[name="Buyer2.Job[0].Employer"]').attr("readonly", true);
                                    }

                                    //References Buyer
                                    $.each(response.Loan.References, function (i, item) {
                                        referecenses_array[i] = [true, item.Name, item.Addresses.Address, item.Addresses.ZipCode, item.Addresses.City, item.Addresses.State, item.Phone, item.Relation];
                                        if (i < 2) {
                                            $('input[name="References[' + i + '].Addresses.Address"]').val(item.Addresses.Address);
                                            $('input[name="References[' + i + '].Addresses.ZipCode"]').val(item.Addresses.ZipCode);
                                            $('input[name="References[' + i + '].Addresses.City"]').val(item.Addresses.City);
                                            $('input[name="References[' + i + '].Addresses.State"]').val(item.Addresses.State);
                                            $('input[name="References[' + i + '].Relation"]').val(item.Relation);
                                            $('input[name="References[' + i + '].Phone"]').val(item.Phone);
                                            $('input[name="References[' + i + '].Name"]').val(item.Name);
                                        } else {
                                            AddReferences(i, item.Name, item.Phone, item.Relation, item.Addresses.Address, item.Addresses.State, item.Addresses.City, item.Addresses.ZipCode);
                                        }
                                    });
                                    if (response.Loan.References.length == 0) {
                                        for (i = 0; i < 12; i++) {
                                            referecenses_array[i] = [false, "", "", "", "", "", "", ""];
                                        }
                                    }

                                    //CO_Buyer
                                    $('input[name="Co_Buyer.Name"]').val(response.Loan.Co_Buyer.Name);
                                    $('input[name="Co_Buyer.LastName"]').val(response.Loan.Co_Buyer.LastName);
                                    $('input[name="Co_Buyer.MiddleName"]').val(response.Loan.Co_Buyer.MiddleName);
                                    $('input[name="Co_Buyer.ITIN_Number"]').val(response.Loan.Co_Buyer.ITIN_Number);
                                    $('select[name="Co_Buyer.ITIN_SSN"]').val(response.Loan.Co_Buyer.ITIN_SSN);
                                    $('input[name="Co_Buyer.Phone"]').val(response.Loan.Co_Buyer.Phone);

                                    var Cobuyer = $('input[name="Co_Buyer.Name"]').val();
                                    var name = $('input[name="Co_Buyer.LastName"]').val();
                                    var phone = $('input[name="Co_Buyer.Phone"]').val();

                                    if (isNull(Cobuyer) && isNull(name) && isNull(phone)) {
                                        $('a#DocCoBuyer').addClass('hidden');
                                        auxDoc = 1;
                                    } else {
                                        $('a#DocCoBuyer').removeClass('hidden');
                                        auxDoc = 0;
                                    }
                                    $('input[name="Co_Buyer.DateBirth"]').datepicker("setDate", new Date(response.Loan.Co_Buyer.DateBirth));
                                    if (response.Loan.Co_Buyer.Expiration != "")
                                        $('input[name="Co_Buyer.Expiration"]').datepicker("setDate", new Date(response.Loan.Co_Buyer.Expiration));
                                    $('select[name="Co_Buyer.ReferredBy"]').val(response.Loan.Co_Buyer.ReferredBy);
                                    $('input[name="Co_Buyer.DriverLic_Number"]').val(response.Loan.Co_Buyer.DriverLic_Number);
                                    $('select[name="Co_Buyer.DriverLicIDType"]').val(response.Loan.Co_Buyer.DriverLicIDType);

                                    $('input[name="Co_Buyer.Email"]').val(response.Loan.Co_Buyer.Email);
                                    $('select[name="Co_Buyer.MaritalStatus"]').val(response.Loan.Co_Buyer.MaritalStatus);
                                    $('select[name="Co_Buyer.Ownership"]').val(response.Loan.Co_Buyer.Ownership);
                                    $('input[name="Co_Buyer.Payment"]').val(response.Loan.Co_Buyer.Payment);
                                    if (response.Loan.Co_Buyer.HoldTitle == null || (response.Loan.Co_Buyer.HoldTitle).includes("AND")) {
                                        $("input[name='Co_Buyer.HoldTitle'][value='AND']").prop("checked", true);
                                        $("input[name='Co_Buyer.HoldTitle'][value='OR']").prop("checked", false);
                                    }
                                    else if ((response.Loan.Co_Buyer.HoldTitle).includes("OR")) {
                                        $("input[name='Co_Buyer.HoldTitle'][value='OR']").prop("checked", true);
                                        $("input[name='Co_Buyer.HoldTitle'][value='AND']").prop("checked", false);
                                    }
                                    //Residence
                                    $.each(response.Loan.Co_Buyer.Residence, function (i, item) {
                                        $('input[name="Co_Buyer.Residence[' + i + '].Address.Address"]').val(item.Address.Address);
                                        $('input[name="Co_Buyer.Residence[' + i + '].Address.ZIPCode"]').val(item.Address.ZIPCode);
                                        $('input[name="Co_Buyer.Residence[' + i + '].Address.City"]').val(item.Address.City);
                                        $('input[name="Co_Buyer.Residence[' + i + '].Address.State"]').val(item.Address.State);
                                        $('input[name="Co_Buyer.Residence[' + i + '].Address.County"]').val(item.Address.County);
                                        $('input[name="Co_Buyer.Residence[' + i + '].Years"]').val(item.Years);
                                        $('input[name="Co_Buyer.Residence[' + i + '].Months"]').val(item.Months);
                                    });

                                    //Mailing Address
                                    $('input[name="Co_Buyer.MailingAddress.Address"]').val(response.Loan.Co_Buyer.MailingAddress.Address);
                                    $('input[name="Co_Buyer.MailingAddress.ZIPCode"]').val(response.Loan.Co_Buyer.MailingAddress.ZIPCode);
                                    $('input[name="Co_Buyer.MailingAddress.City"]').val(response.Loan.Co_Buyer.MailingAddress.City);
                                    $('input[name="Co_Buyer.MailingAddress.State"]').val(response.Loan.Co_Buyer.MailingAddress.State);

                                    //Job
                                    $.each(response.Loan.Co_Buyer.Job, function (i, item) {

                                        $('input[name="Co_Buyer.Job[1].SeconJob"]').val(item.SeconJob);
                                        $('input[name="Co_Buyer.Job[' + i + '].Employer"]').val(item.Employer);
                                        $('input[name="Co_Buyer.Job[' + i + '].MonthlyIncome"]').val(formatearNumero(parseFloat(item.MonthlyIncome).toFixed(2)));
                                        $('input[name="Co_Buyer.Job[' + i + '].Years"]').val(item.Years);
                                        $('input[name="Co_Buyer.Job[' + i + '].Months"]').val(item.Months);
                                        $('input[name="Co_Buyer.Job[' + i + '].Phone"]').val(item.Phone);
                                        $('input[name="Co_Buyer.Job[' + i + '].Contact"]').val(item.Contact);
                                        $('input[name="Co_Buyer.Job[' + i + '].Address.Address"]').val(item.Address.Address);
                                        $('input[name="Co_Buyer.Job[' + i + '].Address.ZIPCode"]').val(item.Address.ZIPCode);
                                        $('input[name="Co_Buyer.Job[' + i + '].Address.City"]').val(item.Address.City);
                                        $('input[name="Co_Buyer.Job[' + i + '].Address.State"]').val(item.Address.State);
                                        $('input[name="Co_Buyer.Job[' + i + '].Address.County"]').val(item.Address.County);

                                        if (i == 0) {
                                            $('input[name="Co_Buyer.Job[0].Retire_SSI"]').val(item.Retire_SSI);
                                            if (item.Retire_SSI) {
                                                $('.cb-retire-ssi-required').empty();
                                            }
                                        }
                                    });

                                    if ($('input[name="Co_Buyer.Job[0].Employer"]').val() == "Unemployed") {
                                        $('input[name="Co_Buyer.Job[0].Employer"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].MonthlyIncome"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Years"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Months"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Phone"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Contact"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Address.Address"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Address.ZIPCode"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Address.City"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Address.State"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Address.County"]').attr("readonly", true);
                                    }
                                    if ($('input[name="Co_Buyer.Job[0].Employer"]').val() == "Self-Employed") {
                                        $('.cb-retire-ssi-required').empty();
                                        $('input[name="Co_Buyer.Job[0].Employer"]').attr("readonly", false);
                                    }

                                    //References CoBuyer
                                    $.each(response.Loan.ReferencesCoBuyer, function (i, item) {
                                        if (i < 2) {
                                            $('input[name="ReferencesCoBuyer[' + i + '].Addresses.Address"]').val(item.Addresses.Address);
                                            $('input[name="ReferencesCoBuyer[' + i + '].Addresses.ZipCode"]').val(item.Addresses.ZipCode);
                                            $('input[name="ReferencesCoBuyer[' + i + '].Addresses.City"]').val(item.Addresses.City);
                                            $('input[name="ReferencesCoBuyer[' + i + '].Addresses.State"]').val(item.Addresses.State);
                                            $('input[name="ReferencesCoBuyer[' + i + '].Relation"]').val(item.Relation);
                                            $('input[name="ReferencesCoBuyer[' + i + '].Phone"]').val(item.Phone);
                                            $('input[name="ReferencesCoBuyer[' + i + '].Name"]').val(item.Name);
                                        } else {
                                            AddReferencesCobuyer(i, item.Name, item.Phone, item.Relation, item.Addresses.Address, item.Addresses.State, item.Addresses.City, item.Addresses.ZipCode);
                                        }
                                    });
                                    if (response.Loan.ReferencesCoBuyer.length == 0) {
                                        for (i = 0; i < 12; i++) {
                                        }
                                    }

                                    //Sales Associates
                                    //SalesAssociateOne
                                    if (response.Loan.AssingEmployees == 1) {
                                        $('select[name="SalesAssociateOne"]').val(response.Loan.SalesAssociateOne);
                                        $('select[name="SalesAssociateTwo"]').hide();
                                    }
                                    else if (response.Loan.AssingEmployees == 2) {
                                        $('select[name="SalesAssociateOne"]').val(response.Loan.SalesAssociateOne);
                                        $('select[name="SalesAssociateTwo"]').val(response.Loan.SalesAssociateTwo);
                                        $('select[name="SalesAssociateTwo"]').show();
                                    }

                                    ObtenerElTaxRate();

                                    $('button[name="VerifySalePrice"]').prop('disabled', false);
                                    $('button[name="VerifySalePrice"]').removeClass('btn-default');
                                    $('button[name="VerifySalePrice"]').addClass('btn-primary');

                                    

                                    // Step 4
                                    driverLicense = false;
                                    insuranceCard = false;
                                    memberShip = false;
                                    proofIncome = false;
                                    proofResidence = false;
                                    proofDownPayment = false;
                                    proofTradeInValue = false;
                                    tradeInCertificate = false;
                                    TradeInReview = false;
                                    other = false;
                                    other_ = false;
                                    driverLicenseCB = false;
                                    insuranceCardCB = false;
                                    memberShipCB = false;
                                    proofIncomeCB = false;
                                    proofResidenceCB = false;
                                    proofDownPaymentCB = false;
                                    proofTradeInValueCB = false;
                                    otherCB = false;
                                    archivesCoBuyer = '';
                                    archivesCoBuyerclean = '';

                                    $.each(response.Loan.SmartFundingArchives, function (i, item) {
                                        if (item.CoBuyer) {
                                            archivesCoBuyerclean = '-cobuyer';
                                        }
                                        else {
                                            archivesCoBuyerclean = '';
                                        }

                                        $('#drivers-license' + archivesCoBuyerclean).empty();
                                        $('#insurance-card' + archivesCoBuyerclean).empty();
                                        $('#membership-application' + archivesCoBuyerclean).empty();
                                        $('#proof-of-income' + archivesCoBuyerclean).empty();
                                        $('#proof-of-residence' + archivesCoBuyerclean).empty();
                                        $('#proof-of-down-payment' + archivesCoBuyerclean).empty();
                                        $('#proof-of-trade-in' + archivesCoBuyerclean).empty();
                                        $('#trade_in_certificate').empty();
                                        $('#trade_in_Review').empty();
                                        $('#other-cobuyer').empty();
                                        $('#other_').empty();
                                        $('#other').empty();
                                    });

                                    $.each(response.Loan.SmartFundingArchives, function (i, item) {
                                        if (item.CoBuyer) {
                                            archivesCoBuyer = '-cobuyer';
                                        }
                                        else {
                                            archivesCoBuyer = '';
                                        }

                                        if (item.Name.includes("DriversLicense") || item.Name.includes("Drivers License")) {
                                            $('#drivers-license' + archivesCoBuyer).empty();
                                            $('#drivers-license' + archivesCoBuyer).addClass('text-left');
                                            $('#drivers-license' + archivesCoBuyer).html('<a class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            $("td#drivers-license" + archivesCoBuyer).prev().html(item.DateLasDownload);
                                            docDL = item.Id;
                                            if (!item.CoBuyer)
                                                driverLicense = true;
                                            else
                                                driverLicenseCB = true;
                                        }

                                        if (item.Name.includes("InsuranceCard") || item.Name.includes("Insurance Card")) {
                                            $('#insurance-card' + archivesCoBuyer).empty();
                                            $('#insurance-card' + archivesCoBuyer).addClass('text-left');
                                            $('#insurance-card' + archivesCoBuyer).html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            docIC = item.Id;
                                            $("td#insurance-card" + archivesCoBuyer).prev().html(item.DateLasDownload);

                                            if (!item.CoBuyer)
                                                insuranceCard = true;
                                            else
                                                insuranceCardCB = true;
                                        }

                                        if (item.Name.includes("MembershipApplication") || item.Name.includes("Membership Application")) {
                                            $('#membership-application' + archivesCoBuyer).empty();
                                            $('#membership-application' + archivesCoBuyer).addClass('text-left');
                                            $('#membership-application' + archivesCoBuyer).html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            $("td#membership-application" + archivesCoBuyer).prev().html(item.DateLasDownload);
                                            if (!item.CoBuyer)
                                                memberShip = true;
                                            else
                                                memberShipCB = true;

                                        }

                                        if (item.Name.includes("ProofOfIncome") || item.Name.includes("Proof Of Income")) {
                                            $('#proof-of-income' + archivesCoBuyer).empty();
                                            $('#proof-of-income' + archivesCoBuyer).addClass('text-left');
                                            $('#proof-of-income' + archivesCoBuyer).html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            $("td#proof-of-income" + archivesCoBuyer).prev().html(item.DateLasDownload);

                                            if (!item.CoBuyer)
                                                proofIncome = true;
                                            else
                                                proofIncomeCB = true;
                                        }

                                        if (item.Name.includes("ProofOfResidence") || item.Name.includes("Proof Of Residence")) {
                                            $('#proof-of-residence' + archivesCoBuyer).empty();
                                            $('#proof-of-residence' + archivesCoBuyer).addClass('text-left');
                                            $('#proof-of-residence' + archivesCoBuyer).html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            $("td#proof-of-residence" + archivesCoBuyer).prev().html(item.DateLasDownload);

                                            if (!item.CoBuyer)
                                                proofResidence = true;
                                            else
                                                proofResidenceCB = true;
                                        }

                                        if (item.Name.includes("ProofOfDownPayment") || item.Name.includes("Proof Of Down Payment")) {
                                            $('#proof-of-down-payment' + archivesCoBuyer).empty();
                                            $('#proof-of-down-payment' + archivesCoBuyer).addClass('text-left');
                                            $('#proof-of-down-payment' + archivesCoBuyer).html('<a  class="/*column-2*/ m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="column-6 fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="/*column-6*/ m-r-sm">' + item.Name + '</strong>');
                                            docPDP = item.Id;
                                            $("td#proof-of-down-payment" + archivesCoBuyer).prev().html(item.DateLasDownload);
                                            window.POI = 1;
                                            if (!item.CoBuyer)
                                                proofDownPayment = true;
                                            else
                                                proofDownPaymentCB = true;
                                        }

                                        if (item.Name.includes("Trade_In_Value")) {
                                            $('#proof-of-trade-in' + archivesCoBuyer).empty();
                                            $('#proof-of-trade-in' + archivesCoBuyer).addClass('text-left');
                                            $('#proof-of-trade-in' + archivesCoBuyer).html(
                                                '<a  class="/*column-2*/ m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="/*column-8*/ m-r-sm">' + item.Name + '</strong>');
                                            $("td#proof-of-trade-in" + archivesCoBuyer).prev().html(item.DateLasDownload);
                                            window.TradeInDoc = 1;
                                            if (!item.CoBuyer)
                                                proofTradeInValue = true;
                                            else
                                                proofTradeInValueCB = true;
                                        }
                                        if (item.Name.includes("Trade_In_Certificate")) {
                                            $('#trade_in_certificate').empty();
                                            $('#trade_in_certificate').addClass('text-left');
                                            $('#trade_in_certificate').html(
                                                '<a  class="/*column-2*/ m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="/*column-8*/ m-r-sm">' + item.Name + '</strong>');
                                            $("td#trade_in_certificate").prev().html(item.DateLasDownload);
                                            window.TradeInCert = 1;
                                            if (!item.CoBuyer)
                                                tradeInCertificate = true;
                                        }
                                        if (item.Name.includes("trade_in_Review")) {
                                            $('#trade_in_Review').empty();
                                            $('#trade_in_Review').addClass('text-left');
                                            $('#trade_in_Review').html(
                                                '<a  class="/*column-2*/ m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="/*column-8*/ m-r-sm">' + item.Name + '</strong>');
                                            $("td#trade_in_Review").prev().html(item.DateLasDownload);
                                            window.TradeInRev = 1;
                                            if (!item.CoBuyer)
                                                TradeInReview = true;
                                        }

                                        //Other
                                        if (item.Name.includes("Other") && item.CoBuyer) {
                                            $('#other-cobuyer').empty();
                                            $('#other-cobuyer').addClass('text-left');
                                            $('#other-cobuyer').html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            $("td#other-cobuyer").prev().html(item.DateLasDownload);

                                            if (!item.CoBuyer)
                                                other = true;
                                            else
                                                otherCB = true;
                                        }
                                        //Other_
                                        if (item.Name.includes("Other_")) {
                                            $('#other_' + archivesCoBuyer).empty();
                                            $('#other_' + archivesCoBuyer).addClass('text-left');
                                            $('#other_' + archivesCoBuyer).html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            $("td#other_" + archivesCoBuyer).prev().html(item.DateLasDownload);

                                            if (!item.CoBuyer)
                                                other_ = true;
                                        } else if (item.Name.includes("Other")) {
                                            $('#other' + archivesCoBuyer).empty();
                                            $('#other' + archivesCoBuyer).addClass('text-left');
                                            $('#other' + archivesCoBuyer).html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            $("td#other" + archivesCoBuyer).prev().html(item.DateLasDownload);

                                            if (!item.CoBuyer)
                                                other = true;
                                            else
                                                otherCB = true;
                                        }


                                    });
                                    //TODO: Madificar funcion SmartFunding
                                    SmartFunding(driverLicense, insuranceCard, memberShip, proofIncome, proofResidence, proofDownPayment, other, other_, proofTradeInValue, tradeInCertificate,
                                        driverLicenseCB, insuranceCardCB, memberShipCB, proofIncomeCB, proofResidenceCB, proofDownPaymentCB, otherCB, proofTradeInValueCB, TradeInReview );
                                    swal.close();
                                    $('div#ModalSearchResults').modal('hide');
                                    //if sale isn't pending, search a notification and show the table
                                    if (response.Loan.StatusChangeId > 0) {
                                        $.elementsEfficientCommunication("sales dep");
                                        $.GetNotificationsXLoan(5, response.id);
                                    }

                                    //Service Adviser Notes
                                    console.log(response);
                                    $('tbody#tbody-serviceadviser').empty();
                                    if (response.AdviserNotes.length > 0) {
                                        $.each(response.AdviserNotes, function (i, item) {
                                            $('tbody#tbody-serviceadviser').append('<tr>' +
                                                '<td>' + item.DateAux + '</td>' +
                                                '<td>' + item.Note + '</td>' +
                                                '<td>' + item.EmployeeName + '</td>' +
                                                '</tr>');
                                        });
                                    } else {
                                        $('tbody#tbody-serviceadviser').append('<tr><td colspan="3" class="text-center">NO DATA RESULT</td></tr>');
                                    }

                                    /*FinalAmount();*/
                                    //Documents In Finance
                                    var con = 0;
                                    if (response.DocInFinance != null) {
                                        window.UploadDocuments = 1;
                                        $.each(response.DocInFinance, function (i, item) {
                                            if (item.DocInFinance.Id != 0) {
                                                if (item.DocInFinance.BankOption == 1) {


                                                    $('input[name="DocsInFinance[' + i + '].DocInFinance.Id"]').val(item.DocInFinance.Id);
                                                    $('input[name="DocsInFinance[' + i + '].DocInFinance.IdDocToFinance"]').val(item.DocInFinance.IdDocToFinance);

                                                    if (item.DocInFinance.IdStatus_DocToFinance_Spanish == 1)
                                                        $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_Spanish"]').val(item.DocInFinance.IdStatus_DocToFinance_Spanish).removeClass('orange').addClass('green');
                                                    else if (item.DocInFinance.IdStatus_DocToFinance_Spanish > 2)
                                                        $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_Spanish"]').val(item.DocInFinance.IdStatus_DocToFinance_Spanish).removeClass('green').addClass('orange');
                                                    else
                                                        $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_Spanish"]').val(item.DocInFinance.IdStatus_DocToFinance_Spanish).removeClass('green').removeClass('orange');

                                                    if (item.DocInFinance.IdStatus_DocToFinance_English == 1)
                                                        $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_English"]').val(item.DocInFinance.IdStatus_DocToFinance_English).removeClass('orange').addClass('green');
                                                    else if (item.DocInFinance.IdStatus_DocToFinance_English > 2)
                                                        $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_English"]').val(item.DocInFinance.IdStatus_DocToFinance_English).removeClass('green').addClass('orange');
                                                    else
                                                        $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_English"]').val(item.DocInFinance.IdStatus_DocToFinance_English).removeClass('green').removeClass('orange');

                                                    if (item.ListDocInFinance_Notes.length > 0) {

                                                        $.each(item.ListDocInFinance_Notes, function (j, item2) {
                                                            AddNoteToDoc(item.DocInFinance.IdDocToFinance, i, j, item2.Note, item2.Id, 1, 2);
                                                        });
                                                    }

                                                    if (item.DocInFinance.IdStatus_DocToFinance_Spanish < 3 && item.DocInFinance.IdStatus_DocToFinance_English < 3) {//Ya no es necesario mostrar las notas
                                                        $('div#' + item.DocInFinance.IdDocToFinance + '.Notes').addClass('hidden');
                                                    } else
                                                        $('div#' + item.DocInFinance.IdDocToFinance + '.Notes').removeClass('hidden');

                                                } else if (item.DocInFinance.BankOption == 2) {
                                                    $('input[name="DocsInFinanceBank[' + con + '].DocInFinance.Id"]').val(item.DocInFinance.Id);
                                                    $('input[name="DocsInFinanceBank[' + con + '].DocInFinance.IdDocToFinance"]').val(item.DocInFinance.IdDocToFinance);
                                                    $('div#DocumentsBanks select[name="DocsInFinanceBank[' + con + '].DocInFinance.IdStatus_DocToFinance_English"]').val(parseInt(item.DocInFinance.IdStatus_DocToFinance_English));

                                                    if (item.ListDocInFinance_Notes.length > 0) {

                                                        $.each(item.ListDocInFinance_Notes, function (j, item2) {
                                                            AddNoteToDoc(item.DocInFinance.IdDocToFinance, con, j, item2.Note, item2.Id, 2, 2);
                                                        });
                                                    }
                                                    con++;
                                                }
                                            }
                                        });
                                    }
                                    $('div#ModalDocCheckList select.spanishNA').val(2);//Son los select removidos(siempre son N/A)
                                    getChanges(0);
                                } else {
                                    swal.close();
                                    swal(response.message, "", "error");
                                }
                                FirstLoad = 1;
                            }
                        });
                    }
                });

            } else {
                $('div#ModalSearchResults').modal('hide');
                swal("It's not possible searchde Loan", "", "error");
            }

        }
        $("#search-customer").click(() => {
            if ($('input[name="Buyer2.ITIN_Number"]').val() != "") {
                if ($('input[name="Buyer2.ITIN_Number"]').val().length == 11) {
                    CustomerInfo("BuyerInfoSSN", "ssn", $('input[name="Buyer2.ITIN_Number"]').val());
                    console.log($('input[name="Buyer2.ITIN_Number"]').val());
                }
            }
            else if ($('input[name="Buyer2.DriverLic_Number"]').val() != "")
            {
                CustomerInfo("BuyerInfoLicence", "license", $('input[name="Buyer2.DriverLic_Number"]').val());
            }
            else if ($('input[name="Buyer2.Phone"]').val() != "")
            {
                if ($('input[name="Buyer2.Phone"]').val().length == 14) {
                    CustomerInfo("BuyerInfoPhone", "phone", $('input[name="Buyer2.Phone"]').val());
                    console.log($('input[name="Buyer2.Phone"]').val());
                }
            }

            else {
                swal("Write a Phone number, SSN or License");

            }
        });

        $('input[name="Buyer2.Phone"]').keyup((e) =>
        {
            if (e.keyCode === 13)
            {
                console.log($('input[name="Buyer2.Phone"]').val());
                if ($('input[name="Buyer2.Phone"]').val().length == 14) {
                    CustomerInfo("BuyerInfoPhone","phone",$('input[name="Buyer2.Phone"]').val());
                    console.log($('input[name="Buyer2.Phone"]').val());
                }
                else {
                    console.log($('input[name="Buyer2.Phone"]').val());
                }
            }
        });
        $('input[name="Buyer2.DriverLic_Number"]').keyup((e) => {
            if (e.keyCode === 13) {
                console.log($('input[name="Buyer2.DriverLic_Number"]').val());

                    CustomerInfo("BuyerInfoLicence", "license", $('input[name="Buyer2.DriverLic_Number"]').val());
                    console.log($('input[name="Buyer2.DriverLic_Number"]').val());

            }
        });
        $('input[name="Buyer2.ITIN_Number"]').keyup((e) =>
        {
            if (e.keyCode === 13) {
                console.log($('input[name="Buyer2.ITIN_Number"]').val());
                if ($('input[name="Buyer2.ITIN_Number"]').val().length == 11) {
                    CustomerInfo("BuyerInfoSSN", "ssn", $('input[name="Buyer2.ITIN_Number"]').val());
                    console.log($('input[name="Buyer2.ITIN_Number"]').val());
                }
                else {
                    console.log($('input[name="Buyer2.ITIN_Number"]').val());
                }
            }

        });

        $('#TableLoans').DataTable({
            dataSrc: "objects",
            ordering: false,
            searching: false,
            "bSort": false,
            pageLength: 7,
            "paging": false,
            responsive: true,
            lengthChange: false,
            "info": false,
            "dom": 'rtip',
            dom: '<"html5buttons"B>lTfgitp',
            buttons: [
                { extend: 'copy' },
                { extend: 'csv' },
                { extend: 'excel', title: 'ExampleFile' },
                { extend: 'pdf', title: 'ExampleFile' },
                {
                    extend: 'print',
                    customize: function (win) {
                        $(win.document.body).addClass('white-bg');
                        $(win.document.body).css('font-size', '10px');

                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');

                    }
                }
            ]
        });
        function CustomerInfo(method,queryparam,val) {

            swal({
                title: 'Searching...',
                text: '',
                allowOutsideClick: false,
                showConfirmButton: false,
                onOpen: () => {
                    swal.showLoading();
                    $.ajax({
                        type: 'GET',
                        url: `/AjaxSales/${method}?${queryparam}=` + val,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {
                            swal.close();
                            if (response.success) {
                                Swal.fire({
                                    title: `${response.Loan.Name} ${response.Loan.LastName} <br> Already in the database`,
                                    text: "Would you like to load this customer now?",
                                    icon: 'warning',
                                    showCancelButton: true,
                                    confirmButtonText: "Yes",
                                    cancelButtonText: "No",
                                })
                                    .then(resultado => {
                                        if (resultado.value) {
                                           // alert(response.Loan.Id);
                                            $("#CurrentCustomerId").val(response.Loan.Id);
                                            /*****    Step 2     **/
                                            //Buyer
                                            $('input[name="Buyer2.Name"]').val(response.Loan.Name);
                                            $('input[name="Buyer2.LastName"]').val(response.Loan.LastName);
                                            $('input[name="Buyer2.MiddleName"]').val(response.Loan.MiddleName);
                                            $('input[name="Buyer2.ITIN_Number"]').val(response.Loan.ITIN_Number);
                                            $('select[name="Buyer2.ITIN_SSN"]').val(response.Loan.ITIN_SSN);
                                            $('input[name="Buyer2.DateBirth"]').datepicker("setDate", new Date(response.Loan.DateBirth));
                                            if (response.Loan.Expiration != "")
                                                $('input[name="Buyer2.Expiration"]').datepicker("setDate", new Date(response.Loan.Expiration));
                                            $('select[name="Buyer2.ReferredBy"]').val(response.Loan.ReferredBy);
                                            $('input[name="Buyer2.DriverLic_Number"]').val(response.Loan.DriverLic_Number);
                                            $('select[name="Buyer2.DriverLicIDType"]').val(response.Loan.DriverLicIDType);
                                            $('input[name="Buyer2.Phone"]').val(response.Loan.Phone);
                                            $('input[name="Buyer2.Email"]').val(response.Loan.Email);
                                            $('select[name="Buyer2.MaritalStatus"]').val(response.Loan.MaritalStatus);
                                            $('select[name="Buyer2.Ownership"]').val(response.Loan.Ownership);


                                            if (response.Loan.Lenguage != null) {
                                                $("select[name='Buyer2.Lenguage']").val(response.Loan.Lenguage);
                                                if (response.Loan.Lenguage == 1) {
                                                    $('select.spanish,label#Spanish').addClass('hidden');
                                                    $('select.spanish').val(2);//N/A
                                                }
                                            }

                                            $('input[name="Buyer2.Payment"],input[name="BuyerPayment"]').val(formatearNumero(parseFloat(response.Loan.Payment).toFixed(2)));

                                            //Mailing Address
                                            $('input[name="Buyer2.MailingAddress.Address"]').val(response.Loan.MailingAddress.Address);
                                            $('input[name="Buyer2.MailingAddress.ZIPCode"]').val(response.Loan.MailingAddress.ZIPCode);
                                            $('input[name="Buyer2.MailingAddress.City"]').val(response.Loan.MailingAddress.City);
                                            $('input[name="Buyer2.MailingAddress.State"]').val(response.Loan.MailingAddress.State);


                                            //Residence
                                            $.each(response.Loan.Residence, function (i, item) {
                                                $('input[name="Buyer2.Residence[' + i + '].Address.Address"]').val(item.Address.Address);
                                                $('input[name="Buyer2.Residence[' + i + '].Address.ZIPCode"]').val(item.Address.ZIPCode);
                                                $('input[name="Buyer2.Residence[' + i + '].Address.City"]').val(item.Address.City);
                                                $('input[name="Buyer2.Residence[' + i + '].Address.State"]').val(item.Address.State);
                                                $('input[name="Buyer2.Residence[' + i + '].Address.County"]').val(item.Address.County);
                                                $('input[name="Buyer2.Residence[' + i + '].Years"]').val(item.Years);
                                                $('input[name="Buyer2.Residence[' + i + '].Months"]').val(item.Months);

                                                if (i == 0) {
                                                    $.EffectiveSalesTaxRate2(item.Address.Address, item.Address.City, item.Address.ZIPCode);
                                                    
                                                }
                                            });

                                            //Job
                                            $.each(response.Loan.Job, function (i, item) {
                                                $('input[name="Buyer2.Job[1].SeconJob"]').val(item.SeconJob);
                                                $('input[name="Buyer2.Job[' + i + '].Employer"]').val(item.Employer);
                                                $('input[name="Buyer2.Job[' + i + '].MonthlyIncome"]').val(formatearNumero(parseFloat(item.MonthlyIncome).toFixed(2)));
                                                $('input[name="Buyer2.Job[' + i + '].Years"]').val(item.Years);
                                                $('input[name="Buyer2.Job[' + i + '].Months"]').val(item.Months);
                                                $('input[name="Buyer2.Job[' + i + '].Phone"]').val(item.Phone);
                                                $('input[name="Buyer2.Job[' + i + '].Contact"]').val(item.Contact);
                                                $('input[name="Buyer2.Job[' + i + '].Address.Address"]').val(item.Address.Address);
                                                $('input[name="Buyer2.Job[' + i + '].Address.ZIPCode"]').val(item.Address.ZIPCode);
                                                $('input[name="Buyer2.Job[' + i + '].Address.City"]').val(item.Address.City);
                                                $('input[name="Buyer2.Job[' + i + '].Address.State"]').val(item.Address.State);
                                                $('input[name="Buyer2.Job[' + i + '].Address.County"]').val(item.Address.County);
                                                if (i == 0) {
                                                    
                                                    $('input[name="Buyer2.Job[0].Retire_SSI"]').val(item.Retire_SSI);
                                                    if (item.Retire_SSI) {
                                                        $('.retire-ssi-required').empty();
                                                    }
                                                }
                                            });

                                            if ($('input[name="Buyer2.Job[0].Employer"]').val() == "Unemployed") {
                                                $('input[name="Buyer2.Job[0].Employer"]').attr("readonly", true);
                                                $('input[name="Buyer2.Job[0].MonthlyIncome"]').attr("readonly", true);
                                                $('input[name="Buyer2.Job[0].Years"]').attr("readonly", true);
                                                $('input[name="Buyer2.Job[0].Months"]').attr("readonly", true);
                                                $('input[name="Buyer2.Job[0].Phone"]').attr("readonly", true);
                                                $('input[name="Buyer2.Job[0].Contact"]').attr("readonly", true);
                                                $('input[name="Buyer2.Job[0].Address.Address"]').attr("readonly", true);
                                                $('input[name="Buyer2.Job[0].Address.ZIPCode"]').attr("readonly", true);
                                                $('input[name="Buyer2.Job[0].Address.City"]').attr("readonly", true);
                                                $('input[name="Buyer2.Job[0].Address.State"]').attr("readonly", true);
                                                $('input[name="Buyer2.Job[0].Address.County"]').attr("readonly", true);
                                            }

                                            if ($('input[name="Buyer2.Job[0].Employer"]').val() == "Self-Employed") {
                                                $('.retire-ssi-required').empty();
                                                $('#MonthlyIncomeReq').html('*');
                                                $('#EmployTimeReq').html('*');
                                                $('input[name="Buyer2.Job[0].Employer"]').attr("readonly", true);
                                            }

                                            //References Buyer
                                             $.each(response.References, function (i, item) {
                                                 referecenses_array[i] = [true, item.Name, item.Addresses.Address, item.Addresses.ZipCode, item.Addresses.City, item.Addresses.State, item.Phone, item.Relation];
                                                 if (i < 2) {
                                                     $('input[name="References[' + i + '].Addresses.Address"]').val(item.Addresses.Address);
                                                     $('input[name="References[' + i + '].Addresses.ZipCode"]').val(item.Addresses.ZipCode);
                                                     $('input[name="References[' + i + '].Addresses.City"]').val(item.Addresses.City);
                                                     $('input[name="References[' + i + '].Addresses.State"]').val(item.Addresses.State);
                                                     $('input[name="References[' + i + '].Relation"]').val(item.Relation);
                                                     $('input[name="References[' + i + '].Phone"]').val(item.Phone);
                                                     $('input[name="References[' + i + '].Name"]').val(item.Name);
                                                 } else {
                                                     AddReferences(i, item.Name, item.Phone, item.Relation, item.Addresses.Address, item.Addresses.State, item.Addresses.City, item.Addresses.ZipCode);
                                                 }
                                             });
                                             if (response.References.length == 0) {
                                                 for (i = 0; i < 12; i++) {
                                                     referecenses_array[i] = [false, "", "", "", "", "", "", ""];
                                                 }
                                             }


                                        } else {
                                        }
                                    });

                            }
                            else {
                                swal.close();
                                swal("No Data", "", "error");
                            }
                        }
                    });
                }
            });
            
        }

        //Seach loans relation with id of vehicle
        function SearchLoanById(id) {
            var auth = @Html.Raw(Json.Encode(ViewBag.SalesAuth));
            if (!isNull(id)) {

                swal({
                    title: 'Searching...',
                    text: '',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    onOpen: () => {
                        swal.showLoading();
                        $.ajax({
                            type: 'GET',
                            url: "/AjaxSales/SearchLoanById?Id=" + id,
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (response) {
                                if (response.success) {
                                    console.log(response);

                                    window.salesTaxRate = response.taxRate;
                                    FirstLoad = 0;
                                    $('input[name="Id_"]').val(response.id);
                                    //Status of Loan
                                    // 0 - Sale Panding
                                    if (response.Loan.StatusChangeId == 0) {
                                        if ((response.Loan.Vehicle.Status).includes("8") || (response.Loan.Vehicle.Status).includes("9")) {
                                            $('#ModalSweetAlert button[name="Pending"]').show();
                                            $('#ModalSweetAlert button[name="Trip"]').show();
                                            $('#ModalSweetAlert button[name="Trip"]').text('Trip');
                                        }
                                        else if (response.Loan.Vehicle.Status.includes("10") || response.Loan.Vehicle.Status.includes("11")) {
                                            $('#ModalSweetAlert button[name="Pending"]').hide();
                                            $('#ModalSweetAlert button[name="Trip"]').hide();
                                            $('#ModalSweetAlert button[name="Trip"]').text('Trip');
                                        }
                                    }

                                    // The Sales is not pending
                                    else if (response.Loan.StatusChangeId > 0) {
                                        $('#ModalSweetAlert button[name="Pending"]').hide();
                                        $('#ModalSweetAlert button[name="Trip"]').show();
                                        $('#ModalSweetAlert button[name="Trip"]').text('Save Changes');
                                    }
                                    $('input[type=hidden][name="LoanId"]').val(response.Loan.LoanId);
                                    $('input[type=hidden][name="LoanId_"]').val(response.id);
                                    $('input[type=hidden][name="CarId"]').val(response.Loan.CarId);
                                    $('input[type=hidden][name="VerifySalePrice"]').val(1);

                                    /*********Forms DMV*********/
                                    var aux = "";
                                    CurrentDate = new Date();
                                    Year = CurrentDate.getFullYear();
                                    $('select[name="typeLicense"]').val("11");
                                    $('input[name="yearModel"]').val(response.Loan.Vehicle.Year.trim());
                                    $('select[name="motivePower"]').val("G");

                                    $('input[name="operatedMonth"]').val(response.Loan.SoldDate.split("/")[0]);
                                    $('input[name="operatedDay"]').val(response.Loan.SoldDate.split("/")[1]);
                                    $('input[name="operatedYear"]').val(response.Loan.SoldDate.split("/")[2]);

                                    $('input[name="purchaseMonth"]').val(response.Loan.SoldDate.split("/")[0]);
                                    $('input[name="purchaseDay"]').val(response.Loan.SoldDate.split("/")[1]);
                                    $('input[name="purchaseYear"]').val(response.Loan.SoldDate.split("/")[2]);

                                    $("#acquiredTypes0").prop("checked", true);

                                    var price = "";
                                    if (response.Loan.SalePrice.includes("."))
                                        price = response.Loan.SalePrice.split(".")[0];

                                    $('input[name="purchasePrice"]').val(price.replace(",", "").trim());
                                    $('input[name="useTaxCredit"]').val("0");

                                    $('select[name="countyCode"]').val("24");
                                    $('input[name="cityName"]').val("ATWATER");
                                    $('input[name="zipCode"]').val("95301");

                                    /********* STEP 1  ********/

                                    $('a#linkCRM').attr('href', '/Marketing/Edit/' + response.Loan.Vehicle.Id);
                                    //First Column
                                    $('input[name="Date"]').datepicker("setDate", new Date(response.Loan.Date));
                                    $('input[name="SoldDate"]').datepicker("setDate", new Date(response.Loan.SoldDate));
                                    $('select[name="StoreId"]').val(response.Loan.StoreId);
                                    $('select[name="BankId"]').val(response.Loan.BankId);
                                    SearchBank(response.Loan.BankId);
                                    $('input[name="Vehicle.StockNumber"]').val(response.Loan.Vehicle.StockNumber);
                                    $('input[name="Vehicle.Year"]').val(response.Loan.Vehicle.Year);
                                    $('input[name="Vehicle.Make"]').val(response.Loan.Vehicle.Make);
                                    $('input[name="Vehicle.Make1"]').val(response.Loan.Vehicle.Make);
                                    $('input[name="Vehicle.Model1"]').val(response.Loan.Vehicle.Model);
                                    $('input[name="Vehicle.Model"]').val(response.Loan.Vehicle.Model);
                                    $('input[name="Vehicle.Type"]').val(response.Loan.Vehicle.Type);
                                    $('input[name="Vehicle.Color"]').val(response.Loan.Vehicle.Color);
                                    $('input[name="Vehicle.Miles"]').val(response.Loan.Vehicle.Miles);
                                    $('input[name="Vehicle.VIN"]').val(response.Loan.Vehicle.VIN);
                                    $('input[name="Vehicle.CYL"]').val(response.Loan.Vehicle.CYL);
                                    $('#ModalDocCheckList input[name="IdCar"]').val(response.Loan.Vehicle.Id);
                                    stateCar = response.Loan.Vehicle.State;
                                    //Transmissión
                                    if ($.isNumeric(response.Loan.Vehicle.Transmission)) {
                                        if (parseInt(response.Loan.Vehicle.Transmission) == 0) {
                                            $('input[name="Vehicle.Transmission"]').val('Manual');
                                        }
                                        else if (parseInt(response.Loan.Vehicle.Transmission) == 1) {
                                            $('input[name="Vehicle.Transmission"]').val('Automatic');
                                        }
                                    } else {
                                        $('input[name="Vehicle.Transmission"]').val('Not Defined');
                                    }
                                    $('input[name="Vehicle.LicenseNo"]').val(response.Loan.Vehicle.LicenseNo);

                                    $('input[name="Vehicle.TagExp"]').val(response.Loan.Vehicle.TagExpAux);
                                    $('input[name="VehicleStatusName"]').val(response.Loan.Vehicle.StatusName);

                                    $('input[name="Vehicle.KeyNo"]').val(response.Loan.Vehicle.KeyNo);
                                    $('input[name="MilesAtSale"]').val(response.Loan.MilesAtSale);
                                    $('input[name="ROS"]').val(response.Loan.ROS);
                                    $('input[name="TimeTags"]').val(response.Loan.TimeTags);
                                    $('input[name="SelectTimeTags"]').prop('checked', false);
                                    

                                    if (response.Loan.StatusChangeId == 3 && auth.EditAuth != 1) {
                                        $('button[name="FundedEdit"]').removeClass('hidden');
                                        $('input[name="MilesAtSale"]').prop('disabled', 'true');
                                        $('input[name="ROS"]').prop('disabled', 'true');
                                        $('input[name="TimeTags"]').prop('disabled', 'true');
                                        $('input[name="SelectTimeTags"]').prop('disabled', 'true');
                                        $('input[name="SoldDate"]').prop('disabled', 'true');
                                        $('input[name="SalePrice"]').prop('disabled', 'true');
                                        $('input[name="SalesTax"]').prop('disabled', 'true');
                                        $('input[name="DownPaymentPRCO"]').prop('disabled', 'true');
                                        $('select[name="BankId"]').prop('disabled', 'true');
                                        $('input[name="APR"]').prop('disabled', 'true');
                                        $('input[name="Term"]').prop('disabled', 'true');
                                        $('input[name="FirstPaymentDue"]').prop('disabled', 'true');
                                        $('input[name="DaysDue"]').prop('disabled', 'true');
                                        $('input[name="FinalPayment"]').prop('disabled', 'true');
                                        $('input[name="FinanceCharges"]').prop('disabled', 'true');
                                        $('select[name="StoreId"]').prop('disabled', 'true');
                                        $('select[name="SalesAssociateOne"]').prop('disabled', 'true');


                                        $("#ModalDocCheckList select").prop('disabled', 'true');
                                        $("#ModalDueBillNotes input").prop('disabled', 'true');

                                        $("#home input").prop('disabled', 'true');
                                        $("#profile input").prop('disabled', 'true');
                                        $("#home select").prop('disabled', 'true');
                                        $("#profile select").prop('disabled', 'true');

                                        $("#ModalDueBillNotes select").prop('disabled', 'true');
                                        $("#ModalSalesPrice input").prop('disabled', 'true');
                                        $("#ModalAccesories input").prop('disabled', 'true');
                                        $("#ModalAccesories select").prop('disabled', 'true');
                                        $("#ModalServiceCont input").prop('disabled', 'true');
                                        $("#ModalServiceCont select").prop('disabled', 'true');
                                        $("#ModalSalesTax select").prop('disabled', 'true');
                                        $("#ModalDebtAgreement select").prop('disabled', 'true');
                                        $("#ModalDebtAgreement input").prop('disabled', 'true');
                                        $("#ModalTradeIn input").prop('disabled', 'true');
                                        $("#ModalDMV input").prop('disabled', 'true');
                                        $("#ModalTradeIn select").prop('disabled', 'true');
                                        $("#ModalDifferDown select").prop('disabled', 'true');
                                        $("#ModalDifferDown input").prop('disabled', 'true');
                                        $("#ModalLicenseNo input").prop('disabled', 'true');
                                        $("#ModalPRCO input").prop('disabled', 'true');


                                    }
                                    else {
                                        $('button[name="FundedEdit"]').addClass('hidden');
                                        $('input[name="MilesAtSale"]').prop('disabled', false);
                                        $('input[name="ROS"]').prop('disabled', false);
                                        $('input[name="TimeTags"]').prop('disabled', false);
                                        $('input[name="SelectTimeTags"]').prop('disabled', false);
                                        $('input[name="SoldDate"]').prop('disabled', false);
                                        $('input[name="SalePrice"]').prop('disabled', false);
                                        $('input[name="SalesTax"]').prop('disabled', false);
                                        $('input[name="DownPaymentPRCO"]').prop('disabled', false);
                                        $('select[name="BankId"]').prop('disabled', false);
                                        $('input[name="APR"]').prop('disabled', false);
                                        $('input[name="Term"]').prop('disabled', false);
                                        $('input[name="FirstPaymentDue"]').prop('disabled', false);
                                        $('input[name="DaysDue"]').prop('disabled', false);
                                        $('input[name="FinalPayment"]').prop('disabled', false);
                                        $('input[name="FinanceCharges"]').prop('disabled', false);
                                        $('select[name="StoreId"]').prop('disabled', false);
                                        $('select[name="SalesAssociateOne"]').prop('disabled', false);


                                        $("#ModalDocCheckList select").prop('disabled', false);
                                        $("#ModalDueBillNotes input").prop('disabled', false);
                                        $("#ModalDueBillNotes select").prop('disabled', false);
                                        $("#ModalSalesPrice input").prop('disabled', false);
                                        $("#ModalAccesories input").prop('disabled', false);
                                        $("#ModalAccesories select").prop('disabled', false);
                                        $("#ModalServiceCont input").prop('disabled', false);
                                        $("#ModalServiceCont select").prop('disabled', false);
                                        $("#ModalSalesTax select").prop('disabled', false);
                                        $("#ModalDebtAgreement select").prop('disabled', false);
                                        $("#ModalDebtAgreement input").prop('disabled', false);
                                        $("#ModalTradeIn input").prop('disabled', false);
                                        $("#ModalTradeIn input").prop('readonly', true);
                                        $("#ModalDMV input").prop('disabled', false);
                                        $("#ModalTradeIn select").prop('disabled', false);
                                        $("#ModalDifferDown select").prop('disabled', false);
                                        $("#ModalDifferDown input").prop('disabled', false);
                                        $("#ModalLicenseNo input").prop('disabled', false);
                                        $("#ModalPRCO input").prop('disabled', false);


                                        $("#home input").prop('disabled', false);
                                        $("#profile input").prop('disabled', false);
                                        $("#home select").prop('disabled', false);
                                        $("#profile select").prop('disabled', false);

                                        $('input[name="PasswordE"]').val("Sales");
                                        FFundedEdit();
                                    }


                                    if (response.Prices != null) {
                                        $('input[name="SalesPricesModal.Retail"]').val(formatearNumero(parseFloat(response.Prices.KBBRetail).toFixed(2)));
                                        $('input[name="SalesPricesModal.Whosale"]').val(formatearNumero(parseFloat(response.Prices.Whosale).toFixed(2)));
                                    }
                                    if (isNull(response.Loan.Vehicle.LicenseNo) || response.Loan.Vehicle.LicenseNo.includes("NONE")) {
                                        $('i#add-license-no').show();
                                        $('button[name="SaveCancelModalLicenseNo"]').show();
                                    }
                                    else {
                                        $('i#add-license-no').hide();
                                        $('button[name="SaveCancelModalLicenseNo"]').hide();
                                    }

                                    // 2nd Column
                                    //TaxRate_fess
                                    window.TaxRate_Fees = 0;
                                    //Sales Prices
                                    $('input[name="SalesPricesModal.CommisionCost"]').val(formatearNumero(parseFloat(response.Loan.Vehicle.CommisionCost).toFixed(2)));
                                    if (response.Prices != null) {
                                    window.priceMax = response.Prices.MaxPrice;
                                    window.priceMin = response.Prices.MinPrice;
                                    $('input[name="SalesPricesModal.CMA"]').val(formatearNumero(parseFloat(response.Prices.CMA).toFixed(2)));
                                    $('input[name="SalesPricesModal.Competitors"]').val(formatearNumero(parseFloat(response.Prices.Competitors).toFixed(2)));
                                    $('input[name="SalesPricesModal.SuggestedPrice"]').val(formatearNumero(parseFloat(response.Prices.SuggestedPrice).toFixed(2)));
                                 
                                    $('input[name="SalesPricesModal.MaxPrice"]').val(formatearNumero(parseFloat(response.Prices.MaxPrice).toFixed(2)));
                                    $('input[name="SalesPricesModal.MinPrice"]').val(formatearNumero(parseFloat(response.Prices.MinPrice).toFixed(2)));

                                   
                                        $('input[name="SalesPricesModal.Retail"]').val(formatearNumero(parseFloat(response.Prices.KBBRetail).toFixed(2)));
                                        $('input[name="SalesPricesModal.Whosale"]').val(formatearNumero(parseFloat(response.Prices.Whosale).toFixed(2)));
                                    }

                                    window.salePrice = setSplit(response.Loan.SalePrice);
                                    window.gapInsurance = setSplit(response.Loan.GapInsurance);
                                    window.accessories = setSplit(response.Loan.Accessories);
                                    window.serviceContract = setSplit(response.Loan.ServiceContract);
                                    window.dmvAutoCalculate = setSplit(response.Loan.DMVAutoCalculate);
                                    $('input[name="SalePrice"]').val(response.Loan.SalePrice);
                                    //Here VerifyPrice
                                    var accesoriesAux = 0;
                                    $.each(response.Loan.Accesories, function (i, item) {
                                        if (item.Category != null) {
                                            accesoriesAux = parseFloat(parseFloat(accesoriesAux) + parseFloat(item.Amount));
                                            $('input[name="Accesories[' + item.Category + '].AmountAux"]').val(formatearNumero(parseFloat(item.Amount).toFixed(2)));
                                            $('input[name="Accesories[' + item.Category + '].Company"]').val(parseFloat(item.Company));
                                            $('input[name="Accesories[' + item.Category + '].Product"]').val(parseFloat(item.Product));
                                            $('input[name="Accesories[' + item.Category + '].ContractNo"]').val(item.ContractNo);
                                        }
                                    });
                                    $('input[name="Accessories"]').val(formatearNumero(parseFloat(accesoriesAux).toFixed(2)));

                                    $('input[name="Fees"]').val(response.Loan.Fees);
                                    $('input[name="ServiceContract"]').val(response.Loan.ServiceContract);
                                    $('input[name="SalesTax"]').val(response.Loan.SalesTax);
                                    $("#TaxRate_Fees").val(0);
                                    if (response.Loan.TaxRate_Fees != null) {
                                        window.TaxRate_Fees = response.Loan.TaxRate_Fees;
                                        $("#TaxRate_Fees").val(window.TaxRate_Fees);
                                    }

                                    $('span#Rate').text('Tax Rate: ' + response.taxRate + '%');
                                    $('input[type=hidden][name="SalesTaxRate"]').val(response.taxRate);
                                    $('input[name="DMVAutoCalculate"]').val(response.Loan.DMVAutoCalculate);
                                    $('input[name="RegistrationFeesDue"]').val(formatearNumero(/*parseFloat*/(response.Loan.RegistrationFeesDue)));
                                    $('input[name="GapInsurance"]').val(response.Loan.GapInsurance);
                                    $('select[name="GapInsurance_Company"]').val(response.Loan.GapInsurance_Company);
                                    $('select[name="Protection_Plan"]').val(response.Loan.Protection_Plan);
                                    $('input[name="GapIncurance.Amount"]').val(response.Loan.GapInsurance);
                                    $('input[name="GapInsurance_ContractNo"]').val(response.Loan.GapInsurance_ContractNo);

                                    $('input[name="DMVAutoCalculate"]').val(response.Loan.DMVAutoCalculate);
                                    $('input[name="SubTotal"]').val(response.Loan.SubTotal);
                                    $('input[name="TradeIn"]').val(response.Loan.TradeIn);
                                    $('input[name="DifferDownPayment"]').val(response.Loan.DifferDownPayment);
                                    
                                    $('input[name="DownPaymentPRCO"]').val(response.Loan.DownPaymentPRCO);
                                    $('input[name="TotalDown"]').val(/*response.TotalDown*/);
                                    $('input[name="DPReceivedPRCONo"]').val(response.Loan.DPReceivedNotebokNo);
                                    $('input[name="DPReceivedNotebokNo"]').val(response.Loan.DPReceivedPRCONo);

                                    //Here Modals Step 1 Column 2
                                    //Modal Fees
                                    window.smogFee = setSplit(response.Loan.Vehicle.SmogFeeDecimal + '');
                                    window.docFee = setSplit(response.Loan.FeesModal.DocFee + '');
                                    window.cancellationOption = setSplit(response.Loan.FeesModal.CancellationOption);
                                    $('#ModalFees input[name="FeesModal.DocFee"]').val(response.Loan.FeesModal.DocFee);
                                    $('#ModalFees input[name="FeesModal.SmogFee"]').val(formatearNumero(parseFloat(response.Loan.Vehicle.SmogFeeDecimal).toFixed(2)));
                                    $('#ModalFees input[name="FeesModal.SmogCertificationFee"]').val(response.Loan.FeesModal.SmogCertificationFee);
                                    $('#ModalFees input[name="FeesModal.StateEmissionExempti"]').val(response.Loan.FeesModal.StateEmissionExempti);
                                    $('#ModalFees input[name="FeesModal.CancellationOption"]').val(response.Loan.FeesModal.CancellationOption);
                                    $('#ModalFees input[name="FeesModal.SelectedCancellationOption"]').prop('checked', false);
                                    $('#ModalFees input[name="FeesModal.TireFee"]').val(response.Loan.FeesModal.TireFee);
                                    $('#ModalFees input[name="FeesModal.ElectronicRegistrationFee"]').val(response.Loan.FeesModal.ElectronicRegistrationFee);
                                    $('#ModalFees input[name="FeesModal.Total"]').val(response.Loan.FeesModal.Total);

                                    //Modal DMVAutoCalculate
                                    window.licenseFee = setSplit(parseFloat(response.Loan.DMVFeesModal.LicenseFee).toFixed(2));
                                    window.auxlicenseFee = setSplit(parseFloat(response.Loan.DMVFeesModal.LicenseFee).toFixed(2));;
                                    window.registrationTransfer = setSplit(parseFloat(response.Loan.DMVFeesModal.RegistrationTransfer).toFixed(2));
                                    $('#ModalDMV input[name="DMVFeesModal.LicenseFee"]').val(formatearNumero(parseFloat(response.Loan.DMVFeesModal.LicenseFee).toFixed(2)));
                                    $('#ModalDMV input[name="DMVFeesModal.RegistrationTransfer"]').val(formatearNumero(parseFloat(response.Loan.DMVFeesModal.RegistrationTransfer).toFixed(2)));
                                    $('#ModalDMV input[name="DMVFeesModal.PublicOfficialFees"]').val(formatearNumero(parseFloat(response.Loan.DMVFeesModal.PublicOfficialFeesDecimal).toFixed(2)));

                                    //Modal Service Contract
                                    window.company = setSplit(response.Loan.ServiceContractModal.Company);
                                    window.coverage = setSplit(response.Loan.ServiceContractModal.Coverage);
                                    window.terms = setSplit(response.Loan.ServiceContractModal.Terms);
                                    window.atMiles = setSplit(response.Loan.ServiceContractModal.Miles);
                                    window.price = setSplit(response.Loan.ServiceContractModal.Price);
                                    window.finacedBy = response.Loan.ServiceContractModal.FinancedBy;
                                    $('#ModalServiceCont select[name="ServiceContractModal.Company"]').val(response.Loan.ServiceContractModal.Company);
                                    $('#ModalServiceCont select[name="ServiceContractModal.Coverage"]').val(response.Loan.ServiceContractModal.Coverage);
                                    $('#ModalServiceCont input[name="ServiceContractModal.Terms"]').val(response.Loan.ServiceContractModal.Terms);
                                    $('#ModalServiceCont input[name="ServiceContractModal.Miles"]').val(formatearNumero(parseFloat(response.Loan.ServiceContractModal.Miles).toFixed(0)));
                                    $('#ModalServiceCont input[name="ServiceContractModal.Price"]').val(formatearNumero(parseFloat(response.Loan.ServiceContractModal.Price).toFixed(2)));
                                    $('#ModalServiceCont input[name="ServiceContractModal.ContractNo"]').val(response.Loan.ServiceContractModal.ContractNo);
                                    $('#ModalServiceCont input[name="ServiceContractModal.FinancedBy"][value="' + window.finacedBy + '"]').prop('checked', true);
                                    $('span#serviceContractFinancedBy').text(window.finacedBy);

                                    //TradeIn
                                    window.TradeInValues = response.Loan.TradeInModal;
                                    if (response.Loan.TradeInModal.length > 0 && parseFloat(response.Loan.TradeInModal[0].Id) > 0) {
                                        window.valueTrade = setSplit(response.Loan.TradeInModal[0].TradeValue);
                                        window.lienTrade = setSplit(response.Loan.TradeInModal[0].LienValue);
                                        var totalAmount = 0;

                                        $.each(response.Loan.TradeInModal, function (i, item) {

                                            if (i == 0) {
                                                $('button[name="DeleteTradeIn1"]').removeClass("gone");
                                                window.CountTradeIn = 1;
                                            }
                                            if (i == 1) {
                                                window.AddTradeIn();
                                            }
                                            auxvalueTrade = setSplit(item.TradeValue);
                                            auxlienTrade = setSplit(item.LienValue);
                                            var auxtotalAmount = auxvalueTrade - auxlienTrade;
                                            if (i == 0 && item.Removed != 1)
                                                totalAmount = auxtotalAmount;
                                            else if (item.Removed != 1)
                                                totalAmount += auxtotalAmount;
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].CardId"]').val(item.CardId);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].VIN"]').val(item.VIN);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Year"]').val(item.Year);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].State"]').val(item.State);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Commercial"]').val(item.Commercial);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Make"]').val(item.Make);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Model"]').val(item.Model);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').val(item.SubModel);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].CYL"]').val(item.CYL);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].FuleType"]').val(item.FuleType);
                                            $('#ModalTradeIn select[name="TradeInModal[' + i + '].Transmision"]').val(item.Transmision);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Color"]').val(item.Color);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Miles"]').val(item.Miles);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').val(item.LicensNo);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Engine"]').val(item.Engine);
                                            if (item.LicensNONE) {
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('checked', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                                            } else {
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('checked', false);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', false);
                                            }
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].TradeValue"]').val(item.TradeValue);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].LienValue"]').val(item.LienValue);
                                            $('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').val(item.Amount);
                                            console.log(item.Amount);
                                            console.log($('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').val());
                                            if (!isNull(item.Bank)) {
                                                $('#tradein-bank-' + i).show();
                                                $('input[name="TradeInModal[' + i + '].Bank"]').val(item.Bank);
                                            } else {
                                                $('#tradein-bank-' + i).hide();
                                            }

                                            if (item.Removed == 1) {
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].CardId"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].VIN"]').prop('readonly', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Year"]').prop('disabled', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].State"]').prop('disabled', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Commercial"]').prop('disabled', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Make"]').prop('disabled', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Model"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].SubModel"]').prop('readonly', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].CYL"]').prop('disabled', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].FuleType"]').prop('disabled', true);
                                                $('#ModalTradeIn select[name="TradeInModal[' + i + '].Transmision"]').prop('disabled', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Color"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Miles"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Engine"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNo"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].TradeValue"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LienValue"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].Amount"]').prop('readonly', true);
                                                $('input[name="TradeInModal[' + i + '].Bank"]').prop('readonly', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + '].LicensNONE"]').prop('disabled', true);
                                                $('#ModalTradeIn input[name="TradeInModal[' + i + ']_Removed"]').val(1);

                                                $('button[name="DeleteTradeIn' + (i+1) + '"]').addClass("gone");
                                                $('button[name="RestoreTradeIn' + (i+1) + '"]').removeClass("gone");
                                            }
                                            else {
                                                if (i == 0) {
                                                    $('button[name="DeleteTradeIn' + (i + 1) + '"]').removeClass("gone");
                                                }
                                                $('button[name="RestoreTradeIn' + (i + 1) + '"]').addClass("gone");
                                            }

                                        });
                                        $('input[name="TradeIn"]').val(totalAmount.toFixed(2));
                                        SetAmount();
                                    }
                                    else {
                                        var totalAmount = 0;
                                        $('input[name="TradeIn"]').val(totalAmount.toFixed(2));
                                    }

                                    //Receives NOTEBOOK and PRCO
                                    //$.each(response.Loan.ReceivesNotebookAndPRCO, function (i, item) {
                                    //    $('#ModalPRCO input[name="ReceivesNotebookAndPRCO[' + i + '].PRCO"]').val(item.PRCO);
                                    //    $('#ModalPRCO input[name="ReceivesNotebookAndPRCO[' + i + '].Notebook"]').val(item.Notebook);
                                    //});
                                    $.each(response.Loan.ReceivesNotebook, function (i, item) {
                                        if (item.Type == 1 || item.Type == 2) {
                                            if (item.Type == 2) {
                                                $('#ModalPRCO input[name="ReceivesNotebook[1].PRCO"]').val(item.PRCO);
                                                $('#ModalPRCO input[name="ReceivesNotebook[1].Notebook"]').val(item.Notebook);
                                            }
                                            if (item.Type == 1) {
                                                $('#ModalPRCO input[name="ReceivesNotebook[0].PRCO"]').val(item.PRCO);
                                                $('#ModalPRCO input[name="ReceivesNotebook[0].Notebook"]').val(item.Notebook);
                                            }
                                        } else {
                                            $('#ModalPRCO input[name="ReceivesNotebook[' + i + '].PRCO"]').val(item.PRCO);
                                            $('#ModalPRCO input[name="ReceivesNotebook[' + i + '].Notebook"]').val(item.Notebook);
                                        }

                                    });

                                    //DifferDownPayment
                                    $.each(response.Loan.AmountsPaymentsAndDates, function (i, item) {
                                        if (i == 0) {
                                            window.firstAmount = setSplit(item.Amount);
                                            window.firstDate = setSplit(item.Date);
                                            $('#ModalDifferDown select[name="DeferredDownPaymentsModal.AprovedBy"]').val(item.ApprovedById);
                                        }
                                        else if (i == 1) {
                                            window.secondAmount = setSplit(item.Amount);
                                            window.secondDate = setSplit(item.Date);
                                        }
                                        else if (i == 1) {
                                            window.threeAmount = setSplit(item.Amount);
                                            window.threeDate = setSplit(item.Date);
                                        }
                                        $('#ModalDifferDown input[name="AmountsPaymentsAndDates[' + i + '].Amount"]').val(item.Amount);
                                        $('#ModalDifferDown input[name="AmountsPaymentsAndDates[' + i + '].Date"]').val(item.Date);
                                    });

                                    //3rd Column
                                    $('input[name="AmountFinanced"]').val(response.Loan.AmountFinanced);
                                    $('input[name="APR"]').val(response.financeStruture.APR);
                                    $('input[name="Term"]').val(response.financeStruture.Terms);
                                    $('input[name="Payment"]').val(response.financeStruture.Payment);
                                    $('input[name="FirstPaymentDue"]').datepicker("setDate", new Date(response.financeStruture.FirstPaymentDue));
                                    $('input[name="DaysDue"]').val(response.financeStruture.Daydue);
                                    $('input[name="FinalPayment"]').val(response.financeStruture.FinalPayment);
                                    $('input[name="TotalPayment"]').val(response.financeStruture.TotalOfPayments);
                                    $('input[name="FinanceCharges"]').val(response.financeStruture.FinanceCharges);
                                    $('input[name="TotalSalesPrice"]').val(response.financeStruture.TotalOfPayments);

                                    // F&I
                                    finalAmount = setSplit(response.Loan.AmountFinanced);

                                    //falta arrastras foto del vehiculo
                                    $('#ModalViewPhoto img').attr('src', '');
                                    if (response.imageCar.ExistImage) {
                                        $('#ModalViewPhoto img').attr('src', response.imageCar.Hyperlink);
                                    }
                                    //Falta Duebill
                                    $('textarea[name="DueBill"],span#duebill-status').empty();
                                    $('span#duebill-status').removeClass();
                                    if (response.duebill.ExistDueBill) {
                                        $('textarea[name="DueBill"]').val(response.duebill.DueBill);
                                        $('textarea[name="DueBill"]').prop('disabled', true);
                                        $('button[name="SaveDueBill"]').prop('disabled', true);
                                        if (response.duebill.Status == 0) {
                                            $('span#duebill-status').text('Pending');
                                            $('span#duebill-status').addClass('badge badge-danger');
                                        }
                                        else if (response.duebill.Status == 1) {
                                            $('span#duebill-status').text('Completed');
                                            $('span#duebill-status').addClass('badge badge-primary');
                                        }
                                        else if (response.duebill.Status == 2) {
                                            $('span#duebill-status').text('Canceled');
                                            $('span#duebill-status').addClass('badge badge-success');
                                        }
                                    } else {
                                        $('textarea[name="DueBill"]').prop('disabled', false);
                                        $('button[name="SaveDueBill"]').prop('disabled', false);
                                    }

                                    $('tbody#dubill-notes').empty();
                                    existNote = false;
                                    $.each(response.duebillNotes, function (i, item) {
                                        existNote = true;
                                        $('tbody#dubill-notes').append('<tr>' +
                                            '<td>' + item.DateAux + '</td>' +
                                            '<td>' + item.Note + '</td>' +
                                            '<td>' + item.EmployeeName + '</td>' +
                                            '</tr>');
                                    });
                                    if (!existNote) {
                                        $('tbody#dubill-notes').append('<tr><td colspan="3" class="text-center">NO DATA RESULT</td></tr>');
                                    }

                                    //Sales Notes
                                    $('button[name="SaveModalNotes"]').hide();
                                    $('button[name="SaveNoteFinance"]').show();
                                    $('button[name="SendNotif"]').show();
                                    $.fn.SetSalesNotes(response.salesNotes);

                                    /*****    Step 2     **/
                                    //Buyer
                                    $('input[name="Buyer2.Name"]').val(response.Loan.Buyer.Name);
                                    $('input[name="Buyer2.LastName"]').val(response.Loan.Buyer.LastName);
                                    $('input[name="Buyer2.MiddleName"]').val(response.Loan.Buyer.MiddleName);
                                    $('input[name="Buyer2.ITIN_Number"]').val(response.Loan.Buyer.ITIN_Number);
                                    $('select[name="Buyer2.ITIN_SSN"]').val(response.Loan.Buyer.ITIN_SSN);
                                    $('input[name="Buyer2.DateBirth"]').datepicker("setDate", new Date(response.Loan.Buyer.DateBirth));
                                    if (response.Loan.Buyer.Expiration != "")
                                        $('input[name="Buyer2.Expiration"]').datepicker("setDate", new Date(response.Loan.Buyer.Expiration));
                                    $('select[name="Buyer2.ReferredBy"]').val(response.Loan.Buyer.ReferredBy);
                                    $('input[name="Buyer2.DriverLic_Number"]').val(response.Loan.Buyer.DriverLic_Number);
                                    $('select[name="Buyer2.DriverLicIDType"]').val(response.Loan.Buyer.DriverLicIDType);
                                    $('input[name="Buyer2.Phone"]').val(response.Loan.Buyer.Phone);
                                    $('input[name="Buyer2.Email"]').val(response.Loan.Buyer.Email);
                                    $('select[name="Buyer2.MaritalStatus"]').val(response.Loan.Buyer.MaritalStatus);
                                    $('select[name="Buyer2.Ownership"]').val(response.Loan.Buyer.Ownership);


                                    if (response.Loan.Buyer.Lenguage != null) {
                                        $("select[name='Buyer2.Lenguage']").val(response.Loan.Buyer.Lenguage);
                                        if (response.Loan.Buyer.Lenguage == 1) {
                                            $('select.spanish,label#Spanish').addClass('hidden');
                                            $('select.spanish').val(2);//N/A
                                        }
                                    }

                                    $('input[name="Buyer2.Payment"],input[name="BuyerPayment"]').val(formatearNumero(parseFloat(response.Loan.Buyer.Payment).toFixed(2)));

                                    //Mailing Address
                                    $('input[name="Buyer2.MailingAddress.Address"]').val(response.Loan.Buyer.MailingAddress.Address);
                                    $('input[name="Buyer2.MailingAddress.ZIPCode"]').val(response.Loan.Buyer.MailingAddress.ZIPCode);
                                    $('input[name="Buyer2.MailingAddress.City"]').val(response.Loan.Buyer.MailingAddress.City);
                                    $('input[name="Buyer2.MailingAddress.State"]').val(response.Loan.Buyer.MailingAddress.State);


                                    //Residence
                                    $.each(response.Loan.Buyer.Residence, function (i, item) {
                                        $('input[name="Buyer2.Residence[' + i + '].Address.Address"]').val(item.Address.Address);
                                        $('input[name="Buyer2.Residence[' + i + '].Address.ZIPCode"]').val(item.Address.ZIPCode);
                                        $('input[name="Buyer2.Residence[' + i + '].Address.City"]').val(item.Address.City);
                                        $('input[name="Buyer2.Residence[' + i + '].Address.State"]').val(item.Address.State);
                                        $('input[name="Buyer2.Residence[' + i + '].Address.County"]').val(item.Address.County);
                                        $('input[name="Buyer2.Residence[' + i + '].Years"]').val(item.Years);
                                        $('input[name="Buyer2.Residence[' + i + '].Months"]').val(item.Months);

                                        if (i == 0) {
                                            $.EffectiveSalesTaxRate2(item.Address.Address, item.Address.City, item.Address.ZIPCode);
                                        }
                                    });

                                    //Job
                                    $.each(response.Loan.Buyer.Job, function (i, item) {
                                        $('input[name="Buyer2.Job[1].SeconJob"]').val(item.SeconJob);
                                        $('input[name="Buyer2.Job[' + i + '].Employer"]').val(item.Employer);
                                        $('input[name="Buyer2.Job[' + i + '].MonthlyIncome"]').val(formatearNumero(parseFloat(item.MonthlyIncome).toFixed(2)));
                                        $('input[name="Buyer2.Job[' + i + '].Years"]').val(item.Years);
                                        $('input[name="Buyer2.Job[' + i + '].Months"]').val(item.Months);
                                        $('input[name="Buyer2.Job[' + i + '].Phone"]').val(item.Phone);
                                        $('input[name="Buyer2.Job[' + i + '].Contact"]').val(item.Contact);
                                        $('input[name="Buyer2.Job[' + i + '].Address.Address"]').val(item.Address.Address);
                                        $('input[name="Buyer2.Job[' + i + '].Address.ZIPCode"]').val(item.Address.ZIPCode);
                                        $('input[name="Buyer2.Job[' + i + '].Address.City"]').val(item.Address.City);
                                        $('input[name="Buyer2.Job[' + i + '].Address.State"]').val(item.Address.State);
                                        $('input[name="Buyer2.Job[' + i + '].Address.County"]').val(item.Address.County);
                                        if (i == 0) {
                                            $('input[name="Buyer2.Job[0].Retire_SSI"]').val(item.Retire_SSI);
                                            if (item.Retire_SSI) {
                                                $('.retire-ssi-required').empty();
                                            }
                                        }
                                    });

                                    if ($('input[name="Buyer2.Job[0].Employer"]').val() == "Unemployed") {
                                        $('input[name="Buyer2.Job[0].Employer"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].MonthlyIncome"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Years"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Months"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Phone"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Contact"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Address.Address"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Address.ZIPCode"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Address.City"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Address.State"]').attr("readonly", true);
                                        $('input[name="Buyer2.Job[0].Address.County"]').attr("readonly", true);
                                    }

                                    if ($('input[name="Buyer2.Job[0].Employer"]').val() == "Self-Employed") {
                                        $('.retire-ssi-required').empty();
                                        $('#MonthlyIncomeReq').html('*');
                                        $('#EmployTimeReq').html('*');
                                        $('input[name="Buyer2.Job[0].Employer"]').attr("readonly", true);
                                    }

                                    //References Buyer
                                    $.each(response.Loan.References, function (i, item) {
                                        referecenses_array[i] = [true, item.Name, item.Addresses.Address, item.Addresses.ZipCode, item.Addresses.City, item.Addresses.State, item.Phone, item.Relation];
                                        if (i < 2) {
                                            $('input[name="References[' + i + '].Addresses.Address"]').val(item.Addresses.Address);
                                            $('input[name="References[' + i + '].Addresses.ZipCode"]').val(item.Addresses.ZipCode);
                                            $('input[name="References[' + i + '].Addresses.City"]').val(item.Addresses.City);
                                            $('input[name="References[' + i + '].Addresses.State"]').val(item.Addresses.State);
                                            $('input[name="References[' + i + '].Relation"]').val(item.Relation);
                                            $('input[name="References[' + i + '].Phone"]').val(item.Phone);
                                            $('input[name="References[' + i + '].Name"]').val(item.Name);
                                        } else {
                                            AddReferences(i, item.Name, item.Phone, item.Relation, item.Addresses.Address, item.Addresses.State, item.Addresses.City, item.Addresses.ZipCode);
                                        }
                                    });
                                    if (response.Loan.References.length == 0) {
                                        for (i = 0; i < 12; i++) {
                                            referecenses_array[i] = [false, "", "", "", "", "", "", ""];
                                        }
                                    }

                                    //CO_Buyer
                                    $('input[name="Co_Buyer.Name"]').val(response.Loan.Co_Buyer.Name);
                                    $('input[name="Co_Buyer.LastName"]').val(response.Loan.Co_Buyer.LastName);
                                    $('input[name="Co_Buyer.MiddleName"]').val(response.Loan.Co_Buyer.MiddleName);
                                    $('input[name="Co_Buyer.ITIN_Number"]').val(response.Loan.Co_Buyer.ITIN_Number);
                                    $('select[name="Co_Buyer.ITIN_SSN"]').val(response.Loan.Co_Buyer.ITIN_SSN);
                                    $('input[name="Co_Buyer.DateBirth"]').datepicker("setDate", new Date(response.Loan.Co_Buyer.DateBirth));
                                    if (response.Loan.Co_Buyer.Expiration != "")
                                        $('input[name="Co_Buyer.Expiration"]').datepicker("setDate", new Date(response.Loan.Co_Buyer.Expiration));
                                    $('select[name="Co_Buyer.ReferredBy"]').val(response.Loan.Co_Buyer.ReferredBy);
                                    $('input[name="Co_Buyer.DriverLic_Number"]').val(response.Loan.Co_Buyer.DriverLic_Number);
                                    $('select[name="Co_Buyer.DriverLicIDType"]').val(response.Loan.Co_Buyer.DriverLicIDType);
                                    $('input[name="Co_Buyer.Phone"]').val(response.Loan.Co_Buyer.Phone);
                                    $('input[name="Co_Buyer.Email"]').val(response.Loan.Co_Buyer.Email);
                                    $('select[name="Co_Buyer.MaritalStatus"]').val(response.Loan.Co_Buyer.MaritalStatus);
                                    $('select[name="Co_Buyer.Ownership"]').val(response.Loan.Co_Buyer.Ownership);
                                    $('input[name="Co_Buyer.Payment"]').val(response.Loan.Co_Buyer.Payment);
                                    var Cobuyer = $('input[name="Co_Buyer.Name"]').val();
                                    var name = $('input[name="Co_Buyer.LastName"]').val();
                                    var phone = $('input[name="Co_Buyer.Phone"]').val();

                                    if (isNull(Cobuyer) && isNull(name) && isNull(phone)) {
                                        $('a#DocCoBuyer').addClass('hidden');
                                        auxDoc = 1;
                                    } else {
                                        $('a#DocCoBuyer').removeClass('hidden');
                                        auxDoc = 0;
                                    }
                                    if (response.Loan.Co_Buyer.HoldTitle == null || (response.Loan.Co_Buyer.HoldTitle).includes("AND")) {
                                        $("input[name='Co_Buyer.HoldTitle'][value='AND']").prop("checked", true);
                                        $("input[name='Co_Buyer.HoldTitle'][value='OR']").prop("checked", false);
                                    }
                                    else if ((response.Loan.Co_Buyer.HoldTitle).includes("OR")) {
                                        $("input[name='Co_Buyer.HoldTitle'][value='OR']").prop("checked", true);
                                        $("input[name='Co_Buyer.HoldTitle'][value='AND']").prop("checked", false);
                                    }
                                    //Residence
                                    $.each(response.Loan.Co_Buyer.Residence, function (i, item) {
                                        $('input[name="Co_Buyer.Residence[' + i + '].Address.Address"]').val(item.Address.Address);
                                        $('input[name="Co_Buyer.Residence[' + i + '].Address.ZIPCode"]').val(item.Address.ZIPCode);
                                        $('input[name="Co_Buyer.Residence[' + i + '].Address.City"]').val(item.Address.City);
                                        $('input[name="Co_Buyer.Residence[' + i + '].Address.State"]').val(item.Address.State);
                                        $('input[name="Co_Buyer.Residence[' + i + '].Address.County"]').val(item.Address.County);
                                        $('input[name="Co_Buyer.Residence[' + i + '].Years"]').val(item.Years);
                                        $('input[name="Co_Buyer.Residence[' + i + '].Months"]').val(item.Months);
                                    });

                                    //Mailing Address
                                    $('input[name="Co_Buyer.MailingAddress.Address"]').val(response.Loan.Co_Buyer.MailingAddress.Address);
                                    $('input[name="Co_Buyer.MailingAddress.ZIPCode"]').val(response.Loan.Co_Buyer.MailingAddress.ZIPCode);
                                    $('input[name="Co_Buyer.MailingAddress.City"]').val(response.Loan.Co_Buyer.MailingAddress.City);
                                    $('input[name="Co_Buyer.MailingAddress.State"]').val(response.Loan.Co_Buyer.MailingAddress.State);

                                    //Job
                                    $.each(response.Loan.Co_Buyer.Job, function (i, item) {

                                        $('input[name="Co_Buyer.Job[1].SeconJob"]').val(item.SeconJob);
                                        $('input[name="Co_Buyer.Job[' + i + '].Employer"]').val(item.Employer);
                                        $('input[name="Co_Buyer.Job[' + i + '].MonthlyIncome"]').val(formatearNumero(parseFloat(item.MonthlyIncome).toFixed(2)));
                                        $('input[name="Co_Buyer.Job[' + i + '].Years"]').val(item.Years);
                                        $('input[name="Co_Buyer.Job[' + i + '].Months"]').val(item.Months);
                                        $('input[name="Co_Buyer.Job[' + i + '].Phone"]').val(item.Phone);
                                        $('input[name="Co_Buyer.Job[' + i + '].Contact"]').val(item.Contact);
                                        $('input[name="Co_Buyer.Job[' + i + '].Address.Address"]').val(item.Address.Address);
                                        $('input[name="Co_Buyer.Job[' + i + '].Address.ZIPCode"]').val(item.Address.ZIPCode);
                                        $('input[name="Co_Buyer.Job[' + i + '].Address.City"]').val(item.Address.City);
                                        $('input[name="Co_Buyer.Job[' + i + '].Address.State"]').val(item.Address.State);
                                        $('input[name="Co_Buyer.Job[' + i + '].Address.County"]').val(item.Address.County);

                                        if (i == 0) {
                                            $('input[name="Co_Buyer.Job[0].Retire_SSI"]').val(item.Retire_SSI);
                                            if (item.Retire_SSI) {
                                                $('.cb-retire-ssi-required').empty();
                                            }
                                        }
                                    });
                                    if ($('input[name="Co_Buyer.Job[0].Employer"]').val() == "Unemployed") {
                                        $('input[name="Co_Buyer.Job[0].Employer"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].MonthlyIncome"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Years"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Months"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Phone"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Contact"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Address.Address"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Address.ZIPCode"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Address.City"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Address.State"]').attr("readonly", true);
                                        $('input[name="Co_Buyer.Job[0].Address.County"]').attr("readonly", true);
                                    }
                                    if ($('input[name="Co_Buyer.Job[0].Employer"]').val() == "Self-Employed") {
                                        $('.cb-retire-ssi-required').empty();
                                        $('input[name="Co_Buyer.Job[0].Employer"]').attr("readonly", false);
                                    }

                                    //References CoBuyer
                                    $.each(response.Loan.ReferencesCoBuyer, function (i, item) {
                                        if (i < 2) {
                                            $('input[name="ReferencesCoBuyer[' + i + '].Addresses.Address"]').val(item.Addresses.Address);
                                            $('input[name="ReferencesCoBuyer[' + i + '].Addresses.ZipCode"]').val(item.Addresses.ZipCode);
                                            $('input[name="ReferencesCoBuyer[' + i + '].Addresses.City"]').val(item.Addresses.City);
                                            $('input[name="ReferencesCoBuyer[' + i + '].Addresses.State"]').val(item.Addresses.State);
                                            $('input[name="ReferencesCoBuyer[' + i + '].Relation"]').val(item.Relation);
                                            $('input[name="ReferencesCoBuyer[' + i + '].Phone"]').val(item.Phone);
                                            $('input[name="ReferencesCoBuyer[' + i + '].Name"]').val(item.Name);
                                        } else {
                                            AddReferencesCobuyer(i, item.Name, item.Phone, item.Relation, item.Addresses.Address, item.Addresses.State, item.Addresses.City, item.Addresses.ZipCode);
                                        }
                                    });
                                    if (response.Loan.ReferencesCoBuyer.length == 0) {
                                        for (i = 0; i < 12; i++) {
                                        }
                                    }

                                    //Sales Associates
                                    if (response.Loan.AssingEmployees == 1) {
                                        $('select[name="SalesAssociateOne"]').val(response.Loan.SalesAssociateOne);
                                        $('select[name="SalesAssociateTwo"]').hide();
                                    }
                                    else if (response.Loan.AssingEmployees == 2) {
                                        $('select[name="SalesAssociateOne"]').val(response.Loan.SalesAssociateOne);
                                        $('select[name="SalesAssociateTwo"]').val(response.Loan.SalesAssociateTwo);
                                        $('select[name="SalesAssociateTwo"]').show();
                                    }

                                    ObtenerElTaxRate();

                                    $('button[name="VerifySalePrice"]').prop('disabled', false);
                                    $('button[name="VerifySalePrice"]').removeClass('btn-default');
                                    $('button[name="VerifySalePrice"]').addClass('btn-primary');

                                    

                                    // Step 4
                                    driverLicense = false;
                                    insuranceCard = false;
                                    memberShip = false;
                                    proofIncome = false;
                                    proofResidence = false;
                                    proofDownPayment = false;
                                    proofTradeInValue = false;
                                    tradeInCertificate = false;
                                    TradeInReview = false;
                                    other = false;
                                    other_ = false;
                                    driverLicenseCB = false;
                                    insuranceCardCB = false;
                                    memberShipCB = false;
                                    proofIncomeCB = false;
                                    proofResidenceCB = false;
                                    proofDownPaymentCB = false;
                                    proofTradeInValueCB = false;
                                    otherCB = false;
                                    archivesCoBuyer = '';

                                    $.each(response.Loan.SmartFundingArchives, function (i, item) {
                                        if (item.CoBuyer) {
                                            archivesCoBuyerclean = '-cobuyer';
                                        }
                                        else {
                                            archivesCoBuyerclean = '';
                                        }

                                        $('#drivers-license' + archivesCoBuyerclean).empty();
                                        $('#insurance-card' + archivesCoBuyerclean).empty();
                                        $('#membership-application' + archivesCoBuyerclean).empty();
                                        $('#proof-of-income' + archivesCoBuyerclean).empty();
                                        $('#proof-of-residence' + archivesCoBuyerclean).empty();
                                        $('#proof-of-down-payment' + archivesCoBuyerclean).empty();
                                        $('#proof-of-trade-in' + archivesCoBuyerclean).empty();
                                        $('#trade_in_certificate').empty();
                                        $('#trade_in_Review').empty();
                                        $('#other-cobuyer').empty();
                                        $('#other_').empty();
                                        $('#other').empty();
                                    });

                                    $.each(response.Loan.SmartFundingArchives, function (i, item) {
                                        if (item.CoBuyer) {
                                            archivesCoBuyer = '-cobuyer';
                                        }
                                        else {
                                            archivesCoBuyer = '';
                                        }

                                        if (item.Name.includes("DriversLicense") || item.Name.includes("Drivers License")) {
                                            $('#drivers-license' + archivesCoBuyer).empty();
                                            $('#drivers-license' + archivesCoBuyer).addClass('text-left');
                                            $('#drivers-license' + archivesCoBuyer).html('<a class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            docDL = item.Id;
                                            $("td#drivers-license" + archivesCoBuyer).prev().html(item.DateLasDownload);
                                            if (!item.CoBuyer)
                                                driverLicense = true;
                                            else
                                                driverLicenseCB = true;
                                        }

                                        if (item.Name.includes("InsuranceCard") || item.Name.includes("Insurance Card")) {
                                            $('#insurance-card' + archivesCoBuyer).empty();
                                            $('#insurance-card' + archivesCoBuyer).addClass('text-left');
                                            $('#insurance-card' + archivesCoBuyer).html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            docIC = item.Id;
                                            $("td#insurance-card" + archivesCoBuyer).prev().html(item.DateLasDownload);

                                            if (!item.CoBuyer)
                                                insuranceCard = true;
                                            else
                                                insuranceCardCB = true;
                                        }

                                        if (item.Name.includes("MembershipApplication") || item.Name.includes("Membership Application")) {
                                            $('#membership-application' + archivesCoBuyer).empty();
                                            $('#membership-application' + archivesCoBuyer).addClass('text-left');
                                            $('#membership-application' + archivesCoBuyer).html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            $("td#membership-application" + archivesCoBuyer).prev().html(item.DateLasDownload);
                                            if (!item.CoBuyer)
                                                memberShip = true;
                                            else
                                                memberShipCB = true;

                                        }

                                        if (item.Name.includes("ProofOfIncome") || item.Name.includes("Proof Of Income")) {
                                            $('#proof-of-income' + archivesCoBuyer).empty();
                                            $('#proof-of-income' + archivesCoBuyer).addClass('text-left');
                                            $('#proof-of-income' + archivesCoBuyer).html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            $("td#proof-of-income" + archivesCoBuyer).prev().html(item.DateLasDownload);

                                            if (!item.CoBuyer)
                                                proofIncome = true;
                                            else
                                                proofIncomeCB = true;
                                        }

                                        if (item.Name.includes("ProofOfResidence") || item.Name.includes("Proof Of Residence")) {
                                            $('#proof-of-residence' + archivesCoBuyer).empty();
                                            $('#proof-of-residence' + archivesCoBuyer).addClass('text-left');
                                            $('#proof-of-residence' + archivesCoBuyer).html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            $("td#proof-of-residence" + archivesCoBuyer).prev().html(item.DateLasDownload);

                                            if (!item.CoBuyer)
                                                proofResidence = true;
                                            else
                                                proofResidenceCB = true;
                                        }

                                        if (item.Name.includes("ProofOfDownPayment") || item.Name.includes("Proof Of Down Payment")) {
                                            $('#proof-of-down-payment' + archivesCoBuyer).empty();
                                            $('#proof-of-down-payment' + archivesCoBuyer).addClass('text-left');
                                            $('#proof-of-down-payment' + archivesCoBuyer).html('<a  class="/*column-2*/ m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="column-6 fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="/*column-6*/ m-r-sm">' + item.Name + '</strong>');
                                            docPDP = item.Id;
                                            $("td#proof-of-down-payment" + archivesCoBuyer).prev().html(item.DateLasDownload);
                                            window.POI = 1;
                                            if (!item.CoBuyer)
                                                proofDownPayment = true;
                                            else
                                                proofDownPaymentCB = true;
                                        }

                                        if (item.Name.includes("Trade_In_Value")) {
                                            $('#proof-of-trade-in' + archivesCoBuyer).empty();
                                            $('#proof-of-trade-in' + archivesCoBuyer).addClass('text-left');
                                            $('#proof-of-trade-in' + archivesCoBuyer).html(
                                                '<a  class="/*column-2*/ m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="/*column-8*/ m-r-sm">' + item.Name + '</strong>');
                                            $("td#proof-of-trade-in" + archivesCoBuyer).prev().html(item.DateLasDownload);
                                            window.TradeInDoc = 1;
                                            if (!item.CoBuyer)
                                                proofTradeInValue = true;
                                            else
                                                proofTradeInValueCB = true;
                                        }

                                        if (item.Name.includes("Trade_In_Certificate")) {
                                            $('#trade_in_certificate').empty();
                                            $('#trade_in_certificate').addClass('text-left');
                                            $('#trade_in_certificate').html(
                                                '<a  class="/*column-2*/ m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="/*column-8*/ m-r-sm">' + item.Name + '</strong>');
                                            $("td#trade_in_certificate").prev().html(item.DateLasDownload);
                                            window.TradeInCert = 1;
                                            if (!item.CoBuyer)
                                                tradeInCertificate = true;
                                        }
                                        if (item.Name.includes("trade_in_Review")) {
                                            $('#trade_in_Review').empty();
                                            $('#trade_in_Review').addClass('text-left');
                                            $('#trade_in_Review').html(
                                                '<a  class="/*column-2*/ m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="/*column-8*/ m-r-sm">' + item.Name + '</strong>');
                                            $("td#trade_in_Review").prev().html(item.DateLasDownload);
                                            window.TradeInRev = 1;
                                            if (!item.CoBuyer)
                                                TradeInReview = true;
                                        }
                                        //Other
                                        if (item.Name.includes("Other") && item.CoBuyer) {
                                            $('#other-cobuyer').empty();
                                            $('#other-cobuyer').addClass('text-left');
                                            $('#other-cobuyer').html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            $("td#other-cobuyer").prev().html(item.DateLasDownload);

                                            if (!item.CoBuyer)
                                                other = true;
                                            else
                                                otherCB = true;
                                        }
                                        //Other_
                                        if (item.Name.includes("Other_")) {
                                            $('#other_' + archivesCoBuyer).empty();
                                            $('#other_' + archivesCoBuyer).addClass('text-left');
                                            $('#other_' + archivesCoBuyer).html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            $("td#other_" + archivesCoBuyer).prev().html(item.DateLasDownload);

                                            if (!item.CoBuyer)
                                                other_ = true;
                                        } else if (item.Name.includes("Other")) {
                                            $('#other' + archivesCoBuyer).empty();
                                            $('#other' + archivesCoBuyer).addClass('text-left');
                                            $('#other' + archivesCoBuyer).html('<a  class="m-l-sm" href="/Sales/DescargarArchivo/' + item.Id + '"><i class="fas fa-file-download fa-2x m-r-xs"></i></a>' +
                                                '<strong class="m-r-sm">' + item.Name + '</strong>');
                                            $("td#other" + archivesCoBuyer).prev().html(item.DateLasDownload);

                                            if (!item.CoBuyer)
                                                other = true;
                                            else
                                                otherCB = true;
                                        }


                                    });
                                    //TODO: Madificar funcion SmartFunding
                                    SmartFunding(driverLicense, insuranceCard, memberShip, proofIncome, proofResidence, proofDownPayment, other, other_, proofTradeInValue, tradeInCertificate,
                                        driverLicenseCB, insuranceCardCB, memberShipCB, proofIncomeCB, proofResidenceCB, proofDownPaymentCB, otherCB, proofTradeInValueCB, TradeInReview);
                                    swal.close();
                                    $('div#ModalSearchResults').modal('hide');
                                    //if sale isn't pending, search a notification and show the table
                                    if (response.Loan.StatusChangeId > 0) {
                                        $.elementsEfficientCommunication("sales dep");
                                        $.GetNotificationsXLoan(5, response.id);
                                    }

                                    //Service Adviser Notes
                                    console.log(response);
                                    $('tbody#tbody-serviceadviser').empty();
                                    if (response.AdviserNotes.length > 0) {
                                        $.each(response.AdviserNotes, function (i, item) {
                                            $('tbody#tbody-serviceadviser').append('<tr>' +
                                                '<td>' + item.DateAux + '</td>' +
                                                '<td>' + item.Note + '</td>' +
                                                '<td>' + item.EmployeeName + '</td>' +
                                                '</tr>');
                                        });
                                    } else {
                                        $('tbody#tbody-serviceadviser').append('<tr><td colspan="3" class="text-center">NO DATA RESULT</td></tr>');
                                    }

                                    /*FinalAmount();*/
                                    //Documents In Finance
                                    var con = 0;
                                    if (response.DocInFinance != null) {
                                        window.UploadDocuments = 1;
                                        $.each(response.DocInFinance, function (i, item) {
                                            if (item.DocInFinance.Id != 0) {
                                                if (item.DocInFinance.BankOption == 1) {


                                                    $('input[name="DocsInFinance[' + i + '].DocInFinance.Id"]').val(item.DocInFinance.Id);
                                                    $('input[name="DocsInFinance[' + i + '].DocInFinance.IdDocToFinance"]').val(item.DocInFinance.IdDocToFinance);

                                                    if (item.DocInFinance.IdStatus_DocToFinance_Spanish == 1)
                                                        $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_Spanish"]').val(item.DocInFinance.IdStatus_DocToFinance_Spanish).removeClass('red').addClass('green');
                                                    else if (item.DocInFinance.IdStatus_DocToFinance_Spanish > 2)
                                                        $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_Spanish"]').val(item.DocInFinance.IdStatus_DocToFinance_Spanish).removeClass('green').addClass('red');
                                                    else
                                                        $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_Spanish"]').val(item.DocInFinance.IdStatus_DocToFinance_Spanish).removeClass('green').removeClass('red');

                                                    if (item.DocInFinance.IdStatus_DocToFinance_English == 1)
                                                        $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_English"]').val(item.DocInFinance.IdStatus_DocToFinance_English).removeClass('red').addClass('green');
                                                    else if (item.DocInFinance.IdStatus_DocToFinance_English > 2)
                                                        $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_English"]').val(item.DocInFinance.IdStatus_DocToFinance_English).removeClass('green').addClass('red');
                                                    else
                                                        $('select[name="DocsInFinance[' + i + '].DocInFinance.IdStatus_DocToFinance_English"]').val(item.DocInFinance.IdStatus_DocToFinance_English).removeClass('green').removeClass('red');

                                                    if (item.ListDocInFinance_Notes.length > 0) {

                                                        $.each(item.ListDocInFinance_Notes, function (j, item2) {
                                                            AddNoteToDoc(item.DocInFinance.IdDocToFinance, i, j, item2.Note, item2.Id, 1, 2);
                                                        });
                                                    }

                                                    if (item.DocInFinance.IdStatus_DocToFinance_Spanish < 3 && item.DocInFinance.IdStatus_DocToFinance_English < 3) {//Ya no es necesario mostrar las notas
                                                        $('div#' + item.DocInFinance.IdDocToFinance + '.Notes').addClass('hidden');
                                                    } else
                                                        $('div#' + item.DocInFinance.IdDocToFinance + '.Notes').removeClass('hidden');

                                                } else if (item.DocInFinance.BankOption == 2) {
                                                    $('input[name="DocsInFinanceBank[' + con + '].DocInFinance.Id"]').val(item.DocInFinance.Id);
                                                    $('input[name="DocsInFinanceBank[' + con + '].DocInFinance.IdDocToFinance"]').val(item.DocInFinance.IdDocToFinance);
                                                    $('div#DocumentsBanks select[name="DocsInFinanceBank[' + con + '].DocInFinance.IdStatus_DocToFinance_English"]').val(parseInt(item.DocInFinance.IdStatus_DocToFinance_English));

                                                    if (item.ListDocInFinance_Notes.length > 0) {

                                                        $.each(item.ListDocInFinance_Notes, function (j, item2) {
                                                            AddNoteToDoc(item.DocInFinance.IdDocToFinance, con, j, item2.Note, item2.Id, 2, 2);
                                                        });
                                                    }
                                                    con++;
                                                }
                                            }
                                        });
                                    }
                                    $('div#ModalDocCheckList select.spanishNA').val(2);//Son los select removidos(siempre son N/A)
                                    getChanges(0);
                                } else {
                                    swal.close();
                                    swal(response.message, "", "error");
                                }
                                FirstLoad = 1;
                            }
                        });
                    }
                });

            } else {
                $('div#ModalSearchResults').modal('hide');
                swal("It's not possible searchde Loan", "", "error");
            }
        }

        $('#ocult1').addClass('hidden');
        //Hide information about the car
        $('#InfCar').click(function () {
            if (icban == 0) {
                document.getElementById("iccolor").removeAttribute("hidden");
                document.getElementById("icmiles").removeAttribute("hidden");
                document.getElementById("icvin").removeAttribute("hidden");
                document.getElementById("iccyl").removeAttribute("hidden");
                document.getElementById("ictransmission").removeAttribute("hidden");
                document.getElementById("ictagexp").removeAttribute("hidden");
                icban = 1;
            } else if (icban == 1) {
                document.getElementById("iccolor").setAttribute("hidden", true);
                document.getElementById("icmiles").setAttribute("hidden", true);
                document.getElementById("icvin").setAttribute("hidden", true);
                document.getElementById("iccyl").setAttribute("hidden", true);
                document.getElementById("ictransmission").setAttribute("hidden", true);
                document.getElementById("ictagexp").setAttribute("hidden", true);
                icban = 0;
            }

        });

        //Hide information about the sale
        $('#InfSale').click(function () {
            if (isban == 0) {
                document.getElementById("isAmountPaid").removeAttribute("hidden");
                document.getElementById("isSubtotal").removeAttribute("hidden");
                document.getElementById("isTradein").removeAttribute("hidden");
                document.getElementById("isDifferDown").removeAttribute("hidden");
                document.getElementById("isTotalDown").removeAttribute("hidden");

                isban = 1;
            } else if (isban == 1) {
                document.getElementById("isAmountPaid").setAttribute("hidden", true);
                document.getElementById("isSubtotal").setAttribute("hidden", true);
                document.getElementById("isTradein").setAttribute("hidden", true);
                document.getElementById("isDifferDown").setAttribute("hidden", true);
                document.getElementById("isTotalDown").setAttribute("hidden", true);

                isban = 0;
            }

        });

        //Hide information about the payment
        $('#InfPayment').click(function () {
            if (ipban == 0) {
                document.getElementById("DivFinalPayment").removeAttribute("hidden");
                document.getElementById("DivTotalPayment").removeAttribute("hidden");
                document.getElementById("DivFinanceCharges").removeAttribute("hidden");
                document.getElementById("DivTotalSalePrice").removeAttribute("hidden");


                ipban = 1;
            } else if (ipban == 1) {
                document.getElementById("DivFinalPayment").setAttribute("hidden", true);
                document.getElementById("DivTotalPayment").setAttribute("hidden", true);
                document.getElementById("DivFinanceCharges").setAttribute("hidden", true);
                document.getElementById("DivTotalSalePrice").setAttribute("hidden", true);


                ipban = 0;
            }

        });

        function AddLicenseNo() {
            swal({
                title: 'Saving License No...',
                text: '',
                allowOutsideClick: false,
                showConfirmButton: false,
                onOpen: () => {
                    swal.showLoading();

                    var data = new FormData();
                    data.append('Id', $('input[name="CarId"]').val());
                    data.append('LicenseNo', $('#ModalLicenseNo input[name="LicenseNo"]').val());
                    data.append('TagExp', $('#ModalLicenseNo input[name="TagExp"]').val());
                    data.append('StickerNo', $('#ModalLicenseNo input[name="StickerNo"]').val());
                    data.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());

                    $.ajax({
                        type: 'POST',
                        url: "/AjaxCars/AddLicenseNo",
                        data: data,
                        processData: false,
                        contentType: false,
                        dataType: "json",
                        success: function (response) {
                            if (response.success) {
                                swal.close();
                                swal(response.message, "", "success");
                                $('input[name="Vehicle.LicenseNo"]').val($('#ModalLicenseNo input[name="LicenseNo"]').val());
                                $('input[name="Vehicle.TagExp"]').val($('#ModalLicenseNo input[name="TagExp"]').val());
                                $('button[name="SaveCancelModalLicenseNo"]').hide();
                                $('i#add-license-no').hide();
                            } else {
                                swal.close();
                                swal(response.message, "", "error");
                            }
                        },
                        error: function () {
                            swal("Error saving Licens No!", "", "error");
                        }
                    });
                }
            });

        }

        function ReplaceFileText(existFile) {
            if (existFile)
                return "Swap";
            else
                return "Upload Doc";
        }

        function SmartFunding(driverLicense, insuranceCard, memberShip, proofIncome, proofResidence, proofDownPayment, other, other_, proofTradeInValue, tradeInCertificate,
            driverLicenseCB, insuranceCardCB, memberShipCB, proofIncomeCB, proofResidenceCB, proofDownPaymentCB, otherCB, proofTradeInValueCB, TradeInReview) {

            $('#drivers-license').addClass('text-right');
            $('#drivers-license').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(driverLicense) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.DriversLicense" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="float: none">×</a>' +
                '</div>');

            $('#drivers-license-cobuyer').addClass('text-right');
            $('#drivers-license-cobuyer').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(driverLicenseCB) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.DriversLicenseCB" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="float: none">×</a>' +
                '</div>');

            $('#insurance-card').addClass('text-right');
            $('#insurance-card').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(insuranceCard) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.InsuranceCard" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="float: none">×</a>' +
                '</div>');

            $('#insurance-card-cobuyer').addClass('text-right');
            $('#insurance-card-cobuyer').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(insuranceCardCB) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.InsuranceCardCB" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="float: none">×</a>' +
                '</div>');

            $('#membership-application').addClass('text-right');
            $('#membership-application').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(memberShip) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.MembershipApplication" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="float: none">×</a>' +
                '</div>');

            $('#membership-application-cobuyer').addClass('text-right');
            $('#membership-application-cobuyer').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(memberShipCB) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.MembershipApplicationCB" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="float: none">×</a>' +
                '</div>');

            $('#proof-of-income').addClass('text-right');
            $('#proof-of-income').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(proofIncome) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.ProofOfIncome" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="float: none">×</a>' +
                '</div>');

            $('#proof-of-income-cobuyer').addClass('text-right');
            $('#proof-of-income-cobuyer').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(proofIncomeCB) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.ProofOfIncomeCB" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="float: none">×</a>' +
                '</div>');

            $('#proof-of-residence').addClass('text-right');
            $('#proof-of-residence').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(proofResidence) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.ProofOfResidence" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="">×</a>' +
                '</div>');

            $('#proof-of-residence-cobuyer').addClass('text-right');
            $('#proof-of-residence-cobuyer').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(proofResidenceCB) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.ProofOfResidenceCB" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="">×</a>' +
                '</div>');

            $('#proof-of-down-payment').addClass('text-right');
            $('#proof-of-down-payment').append(' <div class="/*column-4*/ fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(proofDownPayment) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.ProofOfDownPayment" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="">×</a>' +
                '</div>');

            $('#proof-of-down-payment-cobuyer').addClass('text-right');
            $('#proof-of-down-payment-cobuyer').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(proofDownPaymentCB) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.ProofOfDownPaymentCB" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="">×</a>' +
                '</div>');

            $('#other').addClass('text-right');
            $('#other').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(other) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.Other" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="">×</a>' +
                '</div>');

            $('#other_').addClass('text-right');
            $('#other_').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(other) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.Other_" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="">×</a>' +
                '</div>');

            $('#other-cobuyer').addClass('text-right');
            $('#other-cobuyer').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(otherCB) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.OtherCB" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="">×</a>' +
                '</div>');

            $('#proof-of-trade-in').addClass('text-right');
            $('#proof-of-trade-in').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(proofTradeInValue) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.TradeInValue" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="">×</a>' +
                '</div>');

            $('#trade_in_certificate').addClass('text-right');
            $('#trade_in_certificate').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(tradeInCertificate) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.TradeInCertificate" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="">×</a>' +
                '</div>');
            $('#trade_in_Review').addClass('text-right');
            $('#trade_in_Review').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(TradeInReview) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.trade_in_Review" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="">×</a>' +
                '</div>');

            $('#proof-of-trade-in-cobuyer').addClass('text-right');
            $('#proof-of-trade-in-cobuyer').append(' <div class="fileinput fileinput-new" data-provides="fileinput">' +
                '<span class="btn btn-success btn-file m-t-sm m-r-sm">' +
                '<span class="fileinput-new">' + ReplaceFileText(proofTradeInValueCB) + '</span>' +
                '<span class="fileinput-exists">Change</span><input type="file" name="SmartFundingFiles.TradeInValueCB" accept="application/pdf"/>' +
                '</span>' +
                '<span class="fileinput-filename"></span>' +
                '<a href="#" class="close fileinput-exists btn-success btn-xs" data-dismiss="fileinput" style="">×</a>' +
                '</div>');
        }

        $(document.body).on("click", 'i.fas.fa-file-download', function () {
            console.log($(this).closest("tr").find('td:eq(1)').text(new Date().toLocaleString('en-US')));
        });

        function CleanStepOne() {
            FirstLoad = 0;
            window.FeesArray = null;
            window.DMVArray = null;
            window.salesTaxRate = 0;
            window.salePrice = 0;
            window.TaxRate_Fees = 0;
            window.gapInsurance = 0;
            window.accessories = 0;
            window.serviceContract = 0;
            window.dmvAutoCalculate = 0;
            /*window.existFandId = false;*/
            ResetTradeIn2();
            $('input[name="Id_"]').val('0');
            
            $('input[type="hidden"][name="VerifySalePrice"]').val(0);
            $('#ModalSweetAlert button[name="Pending"]').show();
            $('#ModalSweetAlert button[name="Trip"]').show();
            $('#ModalSweetAlert button[name="Trip"]').text('Trip');

            $('input[type=hidden][name="LoanId"]').val('');
            $('input[type=hidden][name="CarId"]').val("");
            $('input[type=hidden][name="SalesTaxRate"]').val('');
            $('a#linkCRM').attr('href', '');
            $('i#add-license-no').hide();
            /********* STEP 1  ********/

            //First Column
            var today = new Date();
            $('input[name="Date"]').datepicker("setDate", new Date(today.getFullYear(), (today.getMonth()), today.getDate()));
            $('input[name="SoldDate"]').datepicker("setDate", new Date(today.getFullYear(), (today.getMonth()), today.getDate()));
            SetFirstPaymentDueAndDaysDue($('input[name="SoldDate"]').val());
            $('select[name="StoreId"]').val("");
            $('select[name="BankId"]').val("0");

            $('input[name="Vehicle.Year"],input[name="Vehicle.Make"],input[name="Vehicle.Make1"],input[name="Vehicle.Model"],input[name="Vehicle.Model1"],input[name="Vehicle.Type"],input[name="Vehicle.Color"],' +
                'input[name="Vehicle.Miles"],input[name="Vehicle.VIN"],input[name="Vehicle.CYL"], input[name="Vehicle.Transmission"],' +
                'input[name="Vehicle.LicenseNo"],input[name="Vehicle.TagExp"],input[name="Vehicle.KeyNo"],input[name="MilesAtSale"],input[name="ROS"],' +
                'input[name="TimeTags"]').val('');
            $('input[name="TimeTags"]').prop('readonly', false);
            $('input[name="SelectTimeTags"]').prop('checked', false);
            $('input[name="VehicleStatusName"]').empty("Vehicle's Status");

            // 2nd Column
            $('input[name="SalePrice"]').val('0.00');
            for (i = 0; i < 3; i++) {
                $('input[name="Accesories[' + i + '].AmountAux"]').val(0.00);
                $('input[name="Accesories[' + i + '].ContractNo"]').val(0.00);
            }
            //Here VerifyPrice
            $('span#Rate').text('Tax Rate: 0.000%');

            $('input[name="Accessories"],input[name="Fees"],input[name="ServiceContract"],input[name="SalesTax"],' +
                'input[name="DMVAutoCalculate"], input[name="GapInsurance"], input[name="DMVAutoCalculate"],input[name="SubTotal"],' +
                'input[name="TradeIn"],input[name="DifferDownPayment"],input[name="DownPaymentPRCO"],input[name="TotalDown"]').val('0.00');
            $('input[name="DPReceivedPRCONo"],input[name="DPReceivedNotebokNo"]').val('');

            //Here Modals Step 1 Column 2
            //Modal Fees
            window.smogFee = 0;
            window.docFee = 0;
            window.cancellationOption = 0;
            $('#ModalFees input,#ModalSalesPrice input').val('0.00');

            //Modal Accesories
            //Modal DMVAutoCalculate
            window.licenseFee = 0;
            window.auxlicenseFee = 0;
            window.registrationTransfer = 0;
            $('#ModalDMV input[name="DMVFeesModal.LicenseFee"],#ModalDMV input[name="DMVFeesModal.RegistrationTransfer"],#ModalDMV input[name="DMVFeesModal.PublicOfficialFees"]').val('0.00');

            //Modal Service Contract
            window.company = 0;
            window.coverage = 0;
            window.terms = 0;
            window.atMiles = 0;
            window.price = 0;
            window.finacedBy = '';
            $('#ModalServiceCont select[name="ServiceContractModal.Company"]').val('Portfolio Protection');
            $('#ModalServiceCont select[name="ServiceContractModal.Coverage"]').val("");
            $('#ModalServiceCont input[name="ServiceContractModal.Terms"],#ModalServiceCont input[name="ServiceContractModal.Miles"]').val('');
            $('#ModalServiceCont input[name="ServiceContractModal.Price"]').val('0.00');
            $('input[name="ServiceContractModal.FinancedBy"][value="BANK"]').prop('checked', true);
            $('span#serviceContractFinancedBy').text('');

            //TradeIn Modal
            window.valueTrade = 0;
            window.lienTrade = 0;
            $('#ModalTradeIn select[name="TradeInModal[0].Year"],#ModalTradeIn select[name="TradeInModal[0].Make"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[0].VIN"],#ModalTradeIn input[name="TradeInModal[0].Model"],#ModalTradeIn input[name="TradeInModal[0].SubModel"],#ModalTradeIn select[name="TradeInModal[0].CYL"],#ModalTradeIn select[name="TradeInModal[0].FuleType"],#ModalTradeIn select[name="TradeInModal[0].Transmision"],#ModalTradeIn input[name="TradeInModal[0].Color"],#ModalTradeIn input[name="TradeInModal[0].Miles"],#ModalTradeIn input[name="TradeInModal[0].LicensNo"]').val('');
            $('#ModalTradeIn input[name="TradeInModal[0].LicensNONE"]').prop('checked', false);
            $('#ModalTradeIn input[name="TradeInModal[0].LicensNo"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[0].TradeValue"],#ModalTradeIn input[name="TradeInModal[0].LienValue"],#ModalTradeIn input[name="TradeInModal[0].Amount"]').val('0.00');
            $('#tradein-bank-0').hide();
            $('#tradein-bank-1').hide();
            $('input[name="TradeInModal[0].Bank"]').val('');

            //DifferDownPayment Modal
            for (i = 0; i < 3; i++) {
                $('#ModalDifferDown input[name="AmountsPaymentsAndDates[' + i + '].Amount"]').val('0.00');
                $('#ModalDifferDown input[name="AmountsPaymentsAndDates[' + i + '].Date"]').val('');
            }

            //3rd Column
            $('input[name="APR"], input[name="AmountFinanced"], input[name="Payment"], input[name="FinalPayment"],input[name="TotalPayment"],input[name="FinanceCharges"],input[name="TotalSalesPrice"]').val('0.00');
            $('input[name="Term"], input[name="DaysDue"]').val('0');

            //Receives Notebook PRCO
            $('#ModalPRCO input').val('');


            //Falta arrastrar notas
            $('#ModalSalesNotes tbody').empty();
            //foto del vehiculo
            $('#ModalViewPhoto img').attr('src', '');
            //Falta arrastras duebill

            $('span[data-valmsg-for="ReceivesPRCO/Notebook"]').empty();

            /*VER SI SE UTILIZA*/
            $('button[name="btnCreate"]').prop('disabled', true);
            $('span.i-fa').empty();
            $('span[data-valmsg-for="Vehicle.StockNumber"]').empty();


            //Notes
            $('textarea[name="DueBill"],textarea[name="SalesNotes"]').val('');
            $('span#duebill-status').removeClass();
            $('button[name="SaveModalNotes"]').show();
            $('button[name="SaveNoteFinance"]').hide();
            $('button[name="SendNotif"]').hide();
            $('textarea[name="DueBill"]').prop('disabled', false);
            $('tbody#dubill-notes,tbody#sales-notes,span#duebill-status').empty();

            //DocInFinance
            $('div#ModalDocCheckList div.Notes,div#ModalDocCheckList div.NotesBank').empty();
            $('button.BtnAddDoc,button.BtnAddDocBank').addClass('hidden');
            $('div#ModalDocCheckList select').removeClass('red');
            $('div#ModalDocCheckList #tab-LupitasDoc select').val(0);
            $('div#ModalDocCheckList select.spanishNA').val(2);//Son los select removidos
            $('div#ModalDocCheckList select').removeClass('green');
            $('div#ModalDocCheckList select.spanish').removeClass('hidden');

            $.RemoveElements();
        }

    </script>

    <!-- STEP TWO-->-.
    <script>

        /*********    Start - REFERENCES   
         * Estas funciones obtienen varios datos de referencias del cliente y del co-buyer y sobre ella se hacen diferentes operaciones como guardar,resetear campos, obtener 
         * la informacion y eliminar las referencias y se utiliza en un modal llamado ModalSearchReference que esta en la carpeta de _ModalesCreate y ese modal se abre en la 
         .* vista de la informacion del cliente 
         * ************/
        function RemoveCoBuyer() {
            $('.fields-co-buyer').find('input:text').val('');
            $('#ModalCoBuyerReferences').find('input:text').val('');
            $('.fields-co-buyer').find('input.priceFormat').val('0.00');
            $('.fields-co-buyer').find('select').val('')
            $("input[name='Co_Buyer.HoldTitle'][value='OR']").prop("checked", false);
            $("input[name='Co_Buyer.HoldTitle'][value='AND']").prop("checked", true);
        }
        var twoReferences = true;
        function getReferences(Stock) {
            $.ajax({
                type: 'GET',
                url: "/References/GetReferences?StockNumber=" + Stock,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response.Success) {
                        ref = response.References;
                        for (var i = 0; i < ref.length - 2; i++) {
                            AddOtherReference();
                        }
                        for (var i = 0; i < ref.length; i++) {
                            $('References[0].Name').val(ref[i].Name);
                            $('References[0].Addresses.Address').val(ref[i].Addresses.Address);
                            $('References[0].Addresses.ZipCode').val(ref[i]);
                            $('References[0].Addresses.City').val(ref[i]);
                            $('References[0].Addresses.State').val(ref[i]);
                            $('References[0].Phone').val(ref[i]);
                            $('References[0].Relation').val(ref[i]);
                        }
                    }
                    else {


                    }
                }
            });
        }
        function AddOtherReference() {
            for (i = 2; i < 12; i++) {
                if ($('#references' + i).length == 0) {
                    AddReferences(i, "", "", "", "", "", "", "");
                    return 0;
                }
            }
        }
        function SaveReferences() {
            if (ValidateReferences() && window.twoReferences) {
                for (i = 0; i < 12; i++) {
                    if ($('input[name="References[' + i + '].Name"]').length > 0) {
                        referecenses_array[i][0] = true;
                        referecenses_array[i][1] = $('input[name="References[' + i + '].Name"]').val();
                        referecenses_array[i][2] = $('input[name="References[' + i + '].Addresses.Address"]').val();
                        referecenses_array[i][3] = $('input[name="References[' + i + '].Addresses.ZipCode"]').val();
                        referecenses_array[i][4] = $('input[name="References[' + i + '].Addresses.City"]').val();
                        referecenses_array[i][5] = $('input[name="References[' + i + '].Addresses.State"]').val();
                        referecenses_array[i][6] = $('input[name="References[' + i + '].Phone"]').val();
                        referecenses_array[i][7] = $('input[name="References[' + i + '].Relation"]').val();
                    } else {
                        referecenses_array[i][0] = false;
                        referecenses_array[i][1] = "";
                        referecenses_array[i][2] = "";
                        referecenses_array[i][3] = "";
                        referecenses_array[i][4] = "";
                        referecenses_array[i][5] = "";
                        referecenses_array[i][6] = "";
                        referecenses_array[i][7] = "";
                    }
                }
                $('span[data-valmsg-for="BuyerReferences"]').empty();
                $('button[name="AddReferences"]').addClass('btn-success');
                $('button[name="AddReferences"]').removeClass('btn-danger');

                $('#ModalReferences').modal('hide');
            }
            else {
                swal("Fill in the required fields (*).", "", "info");
            }
        }
        function CancelReferences() {
            $('#ModalReferences input').removeClass('validate-error-field')
            for (i = 0; i < 12; i++) {
                if (referecenses_array[i][0] == true) {
                    $('input[name="References[' + i + '].Name"]').val(referecenses_array[i][1]);
                    $('input[name="References[' + i + '].Addresses.Address"]').val(referecenses_array[i][2]);
                    $('input[name="References[' + i + '].Addresses.ZipCode"]').val(referecenses_array[i][3]);
                    $('input[name="References[' + i + '].Addresses.City"]').val(referecenses_array[i][4]);
                    $('input[name="References[' + i + '].Addresses.State"]').val(referecenses_array[i][5]);
                    $('input[name="References[' + i + '].Phone"]').val(referecenses_array[i][6]);
                    $('input[name="References[' + i + '].Relation"]').val(referecenses_array[i][7]);
                } else {
                    if (i >= 2) {
                        $('#references' + i).remove();
                    } else {
                        $('#ModalReferences input').val('');
                    }
                }
            }
            $('#ModalReferences').modal('hide');
        }
        function AddReferences(i, name, phone, relation, address, state, city, zipcode) {
            $('div#ModalReferences #references').append(' <div id="references' + i + '" class="col-xs-6 col-sm-6 col-md-6 col-lg-6 m-t-sm p-xxs"> ' +
                '<div class="row text-right"><button class="btn btn-danger btn-xs m-r-sm" onclick="RemoveReferences(' + i + ')">Delete</button></div>' +
                '<div class="form-group"> ' +
                '<label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">1</span>Name <span class="Red">*</span></label>' +
                '<div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '    <input class="form-control" type="text" name="References[' + i + '].Name" value="' + name + '" placeholder="NAME" onkeyup="javascript:this.value=this.value.toUpperCase();" />' +
                '</div>' +
                '    </div >' +
                '<div class="form-group">' +
                '   <label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">2</span>Address <span class="Red">*</span></label>' +
                '  <div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '        <input class="form-control" type="text" name="References[' + i + '].Addresses.Address" placeholder="ADDRESS" value="' + address + '" onkeyup="javascript:this.value=this.value.toUpperCase();" />' +
                '   </div>' +
                '</div>' +
                '<div class="form-group">' +
                '   <label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">3</span>Zip Code <span class="Red">*</span>  <span id="search-zipcode-7-' + i + '" class="zipcode"></span></label>' +
                '   <div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '       <input class="form-control" type="text" name="References[' + i + '].Addresses.ZipCode" placeholder="ZIP CODE" value="' + zipcode + '" data-mask="99999" onkeyup=" SearchZipCode(this.value,' + i + ', 7)"/>' +
                '   </div>' +
                '</div>' +
                '<div class="form-group">' +
                '   <label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">4</span>City <span class="Red">*</span></label>' +
                '   <div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '       <input class="form-control" type="text" name="References[' + i + '].Addresses.City" placeholder="CITY" value="' + city + '"onkeyup="javascript:this.value=this.value.toUpperCase();" />' +
                '   </div>' +
                '</div>' +
                '<div class="form-group">' +
                '   <label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">5</span>State <span class="Red">*</span></label>' +
                '   <div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '       <input class="form-control" type="text" name="References[' + i + '].Addresses.State" placeholder="STATE" value="' + state + '" onkeyup="javascript:this.value=this.value.toUpperCase();" />' +
                '   </div>' +
                '</div>' +
                '<div class="form-group">' +
                '   <label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">6</span>Phone # <span class="Red">*</span></label>' +
                '   <div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '       <input class="form-control" type="text" name="References[' + i + '].Phone" placeholder="(999) 999-9999" value="' + phone + '"  data-mask="(999) 999-9999" />' +
                '   </div>' +
                '</div>' +
                '<div class="form-group">' +
                '   <label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">7</span>Relation <span class="Red">*</span></label>' +
                '   <div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '       <input class="form-control" type="text" name="References[' + i + '].Relation" placeholder="RELATION" value="' + relation + '" onkeyup="javascript:this.value=this.value.toUpperCase();" />' +
                '   </div>' +
                '</div>' +
                '</div >');
        }
        function ValidateReferences() {
            validate = true;
            window.twoReferences = true;
            $('#ModalReferences input').removeClass('validate-error-field');

            for (i = 0; i < 12; i++) {

                if (i < 2) {
                    name = $('input[name="References[' + i + '].Name"]').val();
                    address = $('input[name="References[' + i + '].Addresses.Address"]').val();
                    zipCod = $('input[name="References[' + i + '].Addresses.ZipCode"]').val();
                    city = $('input[name="References[' + i + '].Addresses.City"]').val();
                    state = $('input[name="References[' + i + '].Addresses.State"]').val();
                    phone = $('input[name="References[' + i + '].Phone"]').val();
                    relation = $('input[name="References[' + i + '].Relation"]').val();

                    //Name
                    if (isNull(name)) {
                        validate = false;
                        window.twoReferences = false;
                    }

                    //Address
                    if (isNull(address)) {
                        validate = false;
                        window.twoReferences = false;
                    }

                    //Zip Code
                    if (isNull(zipCod)) {
                        validate = false;
                        window.twoReferences = false;
                    }

                    //City
                    if (isNull(city)) {
                        validate = false;
                        window.twoReferences = false;
                    }
                    //State
                    if (isNull(state)) {
                        validate = false;
                        window.twoReferences = false;
                    }
                    //Phone
                    if (isNull(phone)) {
                        window.twoReferences = false;
                        validate = false;
                    }
                    //Relation
                    if (isNull(relation)) {
                        window.twoReferences = false;
                        validate = false;
                    }
                }
                else if (i >= 2 && $('input[name="References[' + i + '].Name"]').length > 0) {
                    name = $('input[name="References[' + i + '].Name"]').val();
                    address = $('input[name="References[' + i + '].Addresses.Address"]').val();
                    zipCod = $('input[name="References[' + i + '].Addresses.ZipCode"]').val();
                    city = $('input[name="References[' + i + '].Addresses.City"]').val();
                    state = $('input[name="References[' + i + '].Addresses.State"]').val();
                    phone = $('input[name="References[' + i + '].Phone"]').val();
                    relation = $('input[name="References[' + i + '].Relation"]').val();

                    //Name
                    if (isNull(name)) {
                        validate = false;
                    }

                    //Address
                    if (isNull(address)) {
                        validate = false;
                    }

                    //Zip Code
                    if (isNull(zipCod)) {
                        validate = false;
                    }

                    //City
                    if (isNull(city)) {
                        validate = false;
                    }
                    //State
                    if (isNull(state)) {
                        validate = false;
                    }
                    //Phone
                    if (isNull(phone)) {
                        validate = false;
                    }
                    //Relation
                    if (isNull(relation)) {
                        validate = false;
                    }
                }
            }

            if (validate) {
                size = 12;
                //Addres not repet and phone
                for (i = 0; i < size; i++) {
                    if ($('input[name="References[' + i + '].Addresses.Address"]').length > 0) {
                        address = $('input[name="References[' + i + '].Addresses.Address"]').val();
                        phone = $('input[name="References[' + i + '].Phone"]').val();
                        for (j = 0; j < size; j++) {
                            if (i != j) {
                                if ($('input[name="References[' + j + '].Addresses.Address"]').length > 0) {
                                    auxAddress = $('input[name="References[' + j + '].Addresses.Address"]').val();
                                    auxPhone = $('input[name="References[' + j + '].Phone"]').val();

                                    address = address.replace(/\s/g, '');
                                    phone = phone.replace(/\s/g, '');
                                    auxAddress = auxAddress.replace(/\s/g, '');
                                    auxPhone = auxPhone.replace(/\s/g, '');
                                    if (address == auxAddress) {
                                        $('input[name="References[' + i + '].Addresses.Address"]').addClass('validate-error-field');
                                        $('input[name="References[' + j + '].Addresses.Address"]').addClass('validate-error-field');
                                        validate = false;
                                    }

                                    if (phone == auxPhone) {
                                        $('input[name="References[' + i + '].Phone"]').addClass('validate-error-field');
                                        $('input[name="References[' + j + '].Phone"]').addClass('validate-error-field');
                                        validate = false;
                                    }
                                }
                            }
                        }
                    }
                }
            }

            return validate;
        }
        function RemoveReferences(id) {
            Swal.fire({
                title: "Se eliminarán los datos ingresados, ¿Desea continuar?",
                text: "Delete?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: "Yes, Delete",
                cancelButtonText: "No",
            })
                .then(resultado => {
                    if (resultado.value) {
                        // Hicieron click en "Sí"
                        $('#references' + id).remove();

                        /* REASIGNED NAME TO REFERENCES BUYER*/
                        for (k = 2, j = 2; k < 12; k++) {
                            if ($('input[name="References[' + k + '].Name"]').length > 0) {
                                $('div#references' + k + ' button').attr("onclick", "RemoveReferences(" + j + ")");
                                $('div#references' + k).attr('id', 'references' + j);
                                $('input[name="References[' + k + '].Name"]').attr('name', 'References[' + j + '].Name');
                                $('input[name="References[' + k + '].Addresses.Address"]').attr('name', 'References[' + j + '].Addresses.Address');
                                $('input[name="References[' + k + '].Addresses.ZipCode"]').attr('name', 'References[' + j + '].Addresses.ZipCode');
                                $('input[name="References[' + k + '].Addresses.City"]').attr('name', 'References[' + j + '].Addresses.City');
                                $('input[name="References[' + k + '].Addresses.City"]').attr('name', 'References[' + j + '].Addresses.City');
                                $('input[name="References[' + k + '].Addresses.State"]').attr('name', 'References[' + j + '].Addresses.State');
                                $('input[name="References[' + k + '].Phone"]').attr('name', 'References[' + j + '].Phone');
                                $('input[name="References[' + k + '].Relation"]').attr('name', 'References[' + j + '].Relation');
                                j++;
                            }
                        }
                    } else {
                    }
                });

        }
        function ResetReferences() {
            Swal.fire({
                title: "Do you want to reset the Buyer's references?",
                text: "",
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: "Yes, Reset",
                cancelButtonText: "No",
            })
                .then(resultado => {
                    if (resultado.value) {
                        $('#ModalReferences input').val('');
                        for (i = 2; i < 12; i++) {
                            $('#ModalReferences #references' + i).remove();
                        }
                    }
                });
        }
        function AddOtherReferenceCoBuyer() {
            for (i = 2; i < 12; i++) {
                if ($('#referencesCoBuyer' + i).length == 0) {
                    AddReferencesCobuyer(i, "", "", "", "", "", "", "");
                    return 0;
                }
            }
        }
        function AddReferencesCobuyer(i, name, phone, relation, address, state, city, zipcode) {
            $('div#ModalCoBuyerReferences #referencesCoBuyer').append(' <div id="referencesCoBuyer' + i + '" class="col-xs-6 col-sm-6 col-md-6 col-lg-6 m-t-sm p-xxs"> ' +
                '<div class="row text-right"><button class="btn btn-danger btn-xs m-r-sm" onclick="RemoveReferencesCoBuyer(' + i + ')">Delete</button></div>' +
                '<div class="form-group"> ' +
                '<label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">1</span>Name <span class="Red">*</span></label>' +
                '<div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '    <input class="form-control" type="text" name="ReferencesCoBuyer[' + i + '].Name" value="' + name + '" placeholder="NAME" onkeyup="javascript:this.value=this.value.toUpperCase();" />' +
                '</div>' +
                '    </div >' +
                '<div class="form-group">' +
                '   <label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">2</span>Address <span class="Red">*</span></label>' +
                '  <div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '        <input class="form-control" type="text" name="ReferencesCoBuyer[' + i + '].Addresses.Address" placeholder="ADDRESS" value="' + address + '" onkeyup="javascript:this.value=this.value.toUpperCase();" />' +
                '   </div>' +
                '</div>' +
                '<div class="form-group">' +
                '   <label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">3</span>Zip Code <span class="Red">*</span></label>' +
                '   <div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '       <input class="form-control" type="text" name="ReferencesCoBuyer[' + i + '].Addresses.ZipCode" placeholder="ZIP CODE" value="' + zipcode + '" data-mask="99999" onkeyup=" SearchZipCode(this.value,' + i + ', 7)"/>' +
                '   </div>' +
                '</div>' +
                '<div class="form-group">' +
                '   <label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">4</span>City <span class="Red">*</span></label>' +
                '   <div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '       <input class="form-control" type="text" name="ReferencesCoBuyer[' + i + '].Addresses.City" placeholder="CITY" value="' + city + '"onkeyup="javascript:this.value=this.value.toUpperCase();" />' +
                '   </div>' +
                '</div>' +
                '<div class="form-group">' +
                '   <label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">5</span>State <span class="Red">*</span></label>' +
                '   <div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '       <input class="form-control" type="text" name="ReferencesCoBuyer[' + i + '].Addresses.State" placeholder="STATE" value="' + state + '" onkeyup="javascript:this.value=this.value.toUpperCase();" />' +
                '   </div>' +
                '</div>' +
                '<div class="form-group">' +
                '   <label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">6</span>Phone # <span class="Red">*</span></label>' +
                '   <div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '       <input class="form-control" type="text" name="ReferencesCoBuyer[' + i + '].Phone" placeholder="(999) 999-9999" value="' + phone + '"  data-mask="(999) 999-9999" />' +
                '   </div>' +
                '</div>' +
                '<div class="form-group">' +
                '   <label class="col-xs-5 col-sm-5 col-md-5 col-lg-5 no-padding"><span class="number">7</span>Relation <span class="Red">*</span></label>' +
                '   <div class=" col-xs-7 col-sm-7 col-md-7 col-lg-7 no-padding">' +
                '       <input class="form-control" type="text" name="ReferencesCoBuyer[' + i + '].Relation" placeholder="RELATION" value="' + relation + '" onkeyup="javascript:this.value=this.value.toUpperCase();" />' +
                '   </div>' +
                '</div>' +
                '</div >');
        }
        function ResetReferencesCoBuyer() {
            Swal.fire({
                title: "Do you want to reset the Co-Buyer's references?",
                text: "",
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: "Yes, Reset",
                cancelButtonText: "No",
            })
                .then(resultado => {
                    if (resultado.value) {
                        $('#ModalCoBuyerReferences input').val('');
                        for (i = 2; i < 12; i++) {
                            $('#ModalCoBuyerReferences #references' + i).remove();
                        }
                    }
                });
        }
        function RemoveReferencesCoBuyer(id) {
            Swal.fire({
                title: "The entered data will be deleted. Do you want to continue?",
                text: "",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: "Yes, Delete",
                cancelButtonText: "No",
            })
                .then(resultado => {
                    if (resultado.value) {
                        $('#referencesCoBuyer' + i).remove();
                    }
                });

        }
        var search_vehicles_result_Id_R = 0;
        $(document.body).on("keyup", '#ModalSearchReference input[name="StockReference"]', function (e) {
            if (e.keyCode === 13 && $.isNumeric(stock)) {
                SearchReferencerXCustomer(stock);
            }
        });
        function SearchReferencerXCustomer(stock) {
            $.ajax({
                type: 'GET',
                url: "/References/SearchReferences?StockNumber=" + stock,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $('tbody#search-vehicles-result-references ').empty();
                    if (response.success) {
                        $('tbody#search-vehicles-result-references ').append('<tr id="' + response.Id + '"><td>' + response.StockNumber + '</td><td>' + response.Year + '</td><td>' + response.Maker
                            + '</td><td>' + response.Model + '</td><td>' + response.Color + '</td><td>' + response.Miles + '</td><td>' + response.VIN + '</td></tr > ');
                    }
                    else {
                        $('tbody#search-vehicles-result-references ').append('<tr id="0"><td colspan="7" class="text-center fontl-bold">NO RESULT FOUND</td></tr > ');
                    }
                }
            });
        }
        function NextReference(cobuyer) {
            if (!cobuyer)
                buyer_cobuyer = "References";
            else
                buyer_cobuyer = "ReferencesCoBuyer";

            for (i = 0; i < 12; i++) {
                if (i < 2) {
                    if ($('input[name="' + buyer_cobuyer + '[' + i + '].Addresses.Address"]').length > 0) {
                        if (isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Addresses.Address"]').val()) &&
                            isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Addresses.ZipCode"]').val()) &&
                            isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Addresses.City"]').val()) &&
                            isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Addresses.State"]').val()) &&
                            isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Relation"]').val()) &&
                            isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Phone"]').val()) &&
                            isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Name"]').val())) {
                            return i;
                        }
                    }
                }
                else {
                    if ($('input[name="' + buyer_cobuyer + '[' + i + '].Addresses.Address"]').length == 0) {
                        return i;
                    }
                    else {
                        if (isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Addresses.Address"]').val()) &&
                            isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Addresses.ZipCode"]').val()) &&
                            isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Addresses.City"]').val()) &&
                            isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Addresses.State"]').val()) &&
                            isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Relation"]').val()) &&
                            isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Phone"]').val()) &&
                            isNull($('input[name="' + buyer_cobuyer + '[' + i + '].Name"]').val())) {
                            return i;
                        }
                    }
                }
            }
            return -1;
        }
        function GetReferrencesXCustomer(Id) {
            $.ajax({
                type: 'GET',
                url: "/References/GetReferences?id=" + Id,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response.success) {
                        //References Buyer
                        $.each(response.referencesBuyer, function (i, item) {
                            pos = NextReference(false);
                            if (pos != -1) {
                                console.log('la siguiente pos para las referencias es : ' + pos);
                                if (pos == 0 || pos == 1 || $('input[name="References[' + pos + '].Addresses.Address"]').length > 0) {
                                    $('input[name="References[' + pos + '].Addresses.Address"]').val(item.Addresses.Address);
                                    $('input[name="References[' + pos + '].Addresses.ZipCode"]').val(item.Addresses.ZipCode);
                                    $('input[name="References[' + pos + '].Addresses.City"]').val(item.Addresses.City);
                                    $('input[name="References[' + pos + '].Addresses.State"]').val(item.Addresses.State);
                                    $('input[name="References[' + pos + '].Relation"]').val(item.Relation);
                                    $('input[name="References[' + pos + '].Phone"]').val(item.Phone);
                                    $('input[name="References[' + pos + '].Name"]').val(item.Name);
                                }
                                else
                                    AddReferences(pos, item.Name, item.Phone, item.Relation, item.Addresses.Address, item.Addresses.State, item.Addresses.City, item.Addresses.ZipCode);
                            }
                        });

                        //References CoBuyer
                        $.each(response.referencesCoBuyer, function (i, item) {
                            pos = NextReference(true);
                            if (pos != -1) {
                                console.log('la siguiente pos para las referencias es : ' + pos);
                                if (pos == 0 || pos == 1) {
                                    $('input[name="ReferencesCoBuyer[' + i + '].Addresses.Address"]').val(item.Addresses.Address);
                                    $('input[name="ReferencesCoBuyer[' + i + '].Addresses.ZipCode"]').val(item.Addresses.ZipCode);
                                    $('input[name="ReferencesCoBuyer[' + i + '].Addresses.City"]').val(item.Addresses.City);
                                    $('input[name="ReferencesCoBuyer[' + i + '].Addresses.State"]').val(item.Addresses.State);
                                    $('input[name="ReferencesCoBuyer[' + i + '].Relation"]').val(item.Relation);
                                    $('input[name="ReferencesCoBuyer[' + i + '].Phone"]').val(item.Phone);
                                    $('input[name="ReferencesCoBuyer[' + i + '].Name"]').val(item.Name);
                                }
                                else
                                    AddReferencesCobuyer(pos, item.Name, item.Phone, item.Relation, item.Addresses.Address, item.Addresses.State, item.Addresses.City, item.Addresses.ZipCode);
                            }
                        });

                    }
                    else {

                    }
                }
            });
        }
        $(document.body).on("click", '#ModalSearchReference tbody#search-vehicles-result-references tr', function () {

            if (!isNull($(this).attr('id'))) {
                window.search_vehicles_result_Id_R = $(this).attr('id');
                GetReferrencesXCustomer(window.search_vehicles_result_Id_R);
                window.search_vehicles_result_Id_R = '';
                $('tbody#search-vehicles-result-references').html('<tr><td colspan="7" class="font-bold text-center">NO DATA RESULT</td></tr>');
                $('#ModalSearchReference input').val('');
                $('#ModalSearchReference').modal('hide');
            }
            else {
                window.search_vehicles_result_Id_R = 0;
            }
        });
        $(document.body).on("click", '#ModalSearchReference  button[name="Cancel"]', function () {
            window.search_vehicles_result_Id_R = '';
            $('#ModalSearchReference button[name="Save"]').prop('disabled', true);
            $('tbody#search-vehicles-result-references').html('<tr><td colspan="7" class="font-bold text-center">NO DATA RESULT</td></tr>');
            $('#ModalSearchReference input').val('');
            $('#ModalSearchReference').modal('hide');
        });
        function ValidateMailingAddress(address, zipcode, city, state, cobuyer) {
            typeCustomer = "BuyerMailingAddressModal";
            if (cobuyer) {
                typeCustomer = "Co_BuyerMailingAddressModal";
            }
            $('#' + typeCustomer + ' input').removeClass('validate-error-field');

            if ((!isNull($(address).val()) || !isNull($(zipcode).val()) || !isNull($(city).val()) || !isNull($(state).val()))
                && (isNull($(address).val()) || isNull($(zipcode).val()) || isNull($(city).val()) || isNull($(state).val()))) {

                if (isNull($(address).val())) {
                    $(address).addClass('validate-error-field')
                }
                if (isNull($(zipcode).val())) {
                    $(zipcode).addClass('validate-error-field')
                }
                if (isNull($(city).val())) {
                    $(city).addClass('validate-error-field')
                }
                if (isNull($(state).val())) {
                    $(state).addClass('validate-error-field')
                }
                return false;
            }
            else if (!isNull($(address).val()) && !isNull($(zipcode).val()) && !isNull($(city).val()) && !isNull($(state).val())) {
                return true;
            }
            else if (isNull($(address).val()) && isNull($(zipcode).val()) && isNull($(city).val()) && isNull($(state).val())) {
                return true;
            }
        }
        /********* ********************************************************************************************** terminacion de REFERENCES    ************/

        //función para saber cuanto tiempo hay en Time Employment or Time Residence
        function GetTotalTime(y, m) {
            years = 0, months = 0;
            if (isNull(y) || !$.isNumeric(y)) { years = 0 }
            else { years = y * 12; }
            if (isNull(m) || !$.isNumeric(m)) { months = 0 }
            else { months = m; }
            return years + months;
        }
        //Esta funcion limpia toda la vista de la informacion del cliente que se utiliza cada que se carga un nuevo stock.
        function CleanStepTwo() {

            $('input,select').removeClass('validate-error-field');
            $('span[data-valmsg-for="BuyerReferences"]').empty();
            $('button[name="AddReferences"]').addClass('btn-success');
            $('button[name="AddReferences"]').removeClass('btn-danger');

            //Buyer
            $('input[name="Buyer2.Name"],input[name="Buyer2.LastName"],input[name="Buyer2.MiddleName"],input[name="Buyer2.ITIN_Number"],' +
                'input[name="Buyer2.DriverLic_Number"],input[name="Buyer2.Phone"],input[name="Buyer2.Email"]').val('');
            $('select[name="Buyer2.DriverLicIDType"]').val("CADL");
            $('select[name="Buyer2.ITIN_SSN"],select[name="Buyer2.Ownership"],input[name="Co_Buyer.Expiration"]').val("");
            $('select[name="Buyer2.MaritalStatus"],select[name="Co_Buyer.MaritalStatus"]').val('5');
            $('select[name="Co_Buyer.ReferredBy"],select[name="Buyer2.ReferredBy"]').val('OTHER');
            $('input[name="Buyer2.Payment"]').val('');

            //References Buyer and CoBuyer
            $('#ModalReferences input,#ModalCoBuyerReferences input').val('');
            $('#ModalReferences #references2,#ModalReferences #references3,#ModalReferences #references4,#ModalReferences #references5').empty();
            $('#ModalCoBuyerReferences #referencesCoBuyer2,#ModalCoBuyerReferences #referencesCoBuyer3,#ModalCoBuyerReferences #referencesCoBuyer4,#ModalCoBuyerReferences #referencesCoBuyer5').empty();
            $('input[name="Buyer2.MailingAddress.Address"], input[name="Buyer2.MailingAddress.ZIPCode"],input[name="Buyer2.MailingAddress.City"], input[name="Buyer2.MailingAddress.State"],' +
                'input[name="Co_Buyer.MailingAddress.Address"], input[name="Co_Buyer.MailingAddress.ZIPCode"],input[name="Co_Buyer.MailingAddress.City"], input[name="Co_Buyer.MailingAddress.State"]').val('');

            for (i = 0; i <= 3; i++) {

                //Residence
                $('input[name="Buyer2.Residence[' + i + '].Address.Address"],input[name="Buyer2.Residence[' + i + '].Address.ZIPCode"],input[name="Buyer2.Residence[' + i + '].Address.City"],' +
                    'input[name="Buyer2.Residence[' + i + '].Address.State"],input[name="Buyer2.Residence[' + i + '].Year"],input[name="Buyer2.Residence[' + i + '].Months"],input[name="Buyer2.Residence[' + i + '].Address.County"]').val('');

                $('input[name="Co_Buyer.Residence[' + i + '].Address.Address"],input[name="Co_Buyer.Residence[' + i + '].Address.ZIPCode"],input[name="Co_Buyer.Residence[' + i + '].Address.City"],' +
                    'input[name="Co_Buyer.Residence[' + i + '].Address.State"],input[name="Co_Buyer.Residence[' + i + '].Address.County"],input[name="Co_Buyer.Residence[' + i + '].Year"],input[name="Co_Buyer.Residence[' + i + '].Months"]').val('');

                //Job
                $('input[name="Buyer2.Job[' + i + '].MonthlyIncome"]').val('0.00');
                $('input[name="Buyer2.Job[' + i + '].Employer"],input[name="Buyer2.Job[' + i + '].Years"],input[name="Buyer2.Job[' + i + '].Months"],' +
                    'input[name="Buyer2.Job[' + i + '].Phone"],input[name="Buyer2.Job[' + i + '].Contact"],input[name="Buyer2.Job[' + i + '].Address.Address"],input[name="Buyer2.Job[' + i + '].Address.ZIPCode"],' +
                    'input[name="Buyer2.Job[' + i + '].Address.City"],input[name="Buyer2.Job[' + i + '].Address.State"],input[name="Buyer2.Job[' + i + '].Address.County"]').val('');

                $('input[name="Co_Buyer.Job[' + i + '].MonthlyIncome"]').val('0.00');
                $('input[name="Co_Buyer.Job[' + i + '].Employer"],input[name="Co_Buyer.Job[' + i + '].Years"],input[name="Co_Buyer.Job[' + i + '].Months"],input[name="Co_Buyer.Job[' + i + '].Phone"],' +
                    'input[name="Co_Buyer.Job[' + i + '].Contact"],input[name="Co_Buyer.Job[' + i + '].Address.Address"],input[name="Co_Buyer.Job[' + i + '].Address.ZIPCode"],' +
                    'input[name="Co_Buyer.Job[' + i + '].Address.City"],input[name="Co_Buyer.Job[' + i + '].Address.State"],input[name="Co_Buyer.Job[' + i + '].Address.County"]').val('');
            }

            //CO_Buyer
            $('input[name="Co_Buyer.Name"],input[name="Co_Buyer.LastName"],input[name="Co_Buyer.MiddleName"],input[name="Co_Buyer.ITIN_Number"],' +
                'input[name="Co_Buyer.DateBirth"],input[name="Co_Buyer.DriverLic_Number"],input[name="Co_Buyer.Phone"],input[name="Co_Buyer.Email"]').val('');
            $('select[name="Co_Buyer.DriverLicIDType"]').val("CADL");
            $('select[name="Co_Buyer.ITIN_SSN"],select[name="Co_Buyer.Ownership"],input[name="Co_Buyer.Expiration"]').val("");
            $('input[name="Co_Buyer.Payment"]').val('');

            $("input[name='Co_Buyer.HoldTitle'][value='OR']").prop("checked", false);
            $("input[name='Co_Buyer.HoldTitle'][value='AND']").prop("checked", true);

            $('select[name="SalesAssociateOne"],select[name="SalesAssociateTwo"]').val("");
            $('select[name="SalesAssociateTwo"]').hide();

            $('#ModalSearchReference button[name="Save"]').prop('disabled', true);
            $('tbody#search-vehicles-result-references').html('<tr><td colspan="7" class="font-bold text-center">NO DATA RESULT</td></tr>');
            $('#ModalSearchReference input').val('');

            $('input[name="Buyer2.Job[0].Retire_SSI"]').val(false);
            $('.retire-ssi-required').html('*');
            $('input[name="Co_Buyer.Job[0].Retire_SSI"]').val(false);
            $('.cb-retire-ssi-required').html('*');

        }
        // Set First Payment Due Date and Days Due, parameter received soldDate
        function SetFirstPaymentDueAndDaysDue(date_) {

            // obtener la fecha sold Date
            var soldDate = new Date(date_);
            // first Payment Day
            var firstPaymentDueDate = new Date(soldDate);
            firstPaymentDueDate.setMonth(firstPaymentDueDate.getMonth() + 1);
            $('input[name="FirstPaymentDue"]').datepicker('setDate', firstPaymentDueDate.getMonth() + 1 + "/" + firstPaymentDueDate.getDate() + "/" + firstPaymentDueDate.getFullYear());

            //difference between dates
            const diffTime = Math.abs(firstPaymentDueDate - soldDate);
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
            $('input[name="DaysDue"]').val(diffDays);


        }
    </script>

    <!-- STEP 3-->
    <script>
        //Esta funcion no se manda llamar en ningun lado 
        function GetReportFile() {
            $('input[name="ReportFile"]').trigger("click");

        }
        $('input[name="ReportFile"]').change(function () {
            if (this.files.length != 0) {
                //FormData es necesario para el envio de archivo,
                //y de la siguiente manera capturamos todos los elementos del formulario
                var parametros = new FormData($("#IndexPdfForm")[0])

                //realizamos la petición ajax con la función de jquery
                $.ajax({
                    type: "POST",
                    url: "/AjaxSales/IndexPDF",
                    data: parametros,
                    contentType: false, //importante enviar este parametro en false
                    processData: false, //importante enviar este parametro en false
                    success: function (response) {
                        if (response.Success) {
                            $('input[name="ReportFile"]').val("");
                        }
                        else
                            swal("Error", "", "error");

                    },
                    error: function (r) {
                        swal("Server error", "", "error");
                    }
                });
            }
        });

        

        function deseabledOpenBK() {
            $("input").prop('disabled', true);
            $("textarea").prop('disabled', true);
            $("select").prop('disabled', true);
            $('select[name="OpenBK"]').prop('disabled', false);
            $("button[name='GetBanks_']").prop('disabled', true);
            $("button[name='Create']").prop('disabled', true);

        }

        function enabledOpenBK() {
            $("input").prop('disabled', false);
            $("textarea").prop('disabled', false);
            $("select").prop('disabled', false);
            $("button[name='GetBanks_']").prop('disabled', false);
            $("button[name='Create']").prop('disabled', false);

            if (incomeSelected == 1) {
                $("input[name='YTD']").prop("disabled", true);
                $("input[name='DateYTD']").prop("disabled", true);
            }
            else if (ytdSelected == 1) {
                $('input[name="HourlyIncome"]').prop('disabled', true);
                $("input[name='HoursPerWeek']").prop("disabled", true);
            }

        }

        

        function ValuePerDay(month, day) {
            //28 days
            if (month == 2) {
                if (day == 28) {
                    return (month - 1) + (0.03571428 * day);
                }
                else if (day == 29) {
                    return (month - 1) + (0.03448275 * day);
                }
            }
            //30 days
            else if (month == 4 || month == 6 || month == 9 || month == 11) {
                return (month - 1) + (0.033 * day);
            }
            //31 days
            else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12) {
                return (month - 1) + (0.032258064 * day);
            }
        }

        //Get Month and Day of the YTD Date
        function dateMonth(d) {
            var dt = new Date(d);
            var dtm = dt.getMonth();
            return dtm + 1;
        }
        function dateDay(d) {
            var dt = new Date(d);
            var dtm = dt.getDate();
            return dtm;// + 1;
        }


        
        percentWholeSale = 0;

        
        function GetLenderGuidelines(bankId) {
            $.ajax({
                type: 'GET',
                url: "/Applications/GetLenderGuidelines?bankId=" + bankId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("textarea[name=LenderGuidelines]").text('');
                    $("textarea[name=LenderGuidelines]").css("font-weight", "bold");
                    if (response.listLenderGuidelines.length > 0) {
                        $.each(response.listLenderGuidelines, function (i, r) {
                            $("textarea[name=LenderGuidelines]").append(r.LetterGuideline + ") " + r.Guidelines + "\n");
                        });
                    }
                    else {
                        $("textarea[name=LenderGuidelines]").text(response.message);
                    }
                }
            });
        }
        totalPoints = 0;

        function GetPossibleStips(bankId) {
            $.ajax({
                type: 'GET',
                url: "/Applications/GetPossibleStips?bankId=" + bankId + "&points=" + totalPoints,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("textarea[name=PossibleStips]").empty();
                    if (response.listPossibleStips.length > 0) {
                        $.each(response.listPossibleStips, function (i, r) {
                            $("textarea[name=PossibleStips]").append(r.Content);
                        });
                    }
                    else {
                        $("textarea[name=PossibleStips]").text(response.message);
                    }
                }
            });
        }

        

        //STEP 4
        function CleanStepFour() {
            $('#drivers-license,#insurance-card,#membership-application,#proof-of-income,#proof-of-residence,#proof-of-down-payment,#other,#other_,#proof-of-trade-in').empty();
            $('#drivers-license,#insurance-card,#membership-application,#proof-of-income,#proof-of-residence,#proof-of-down-payment,#other,#other_,#proof-of-trade-in').removeClass();
            $('td#drivers-license,td#insurance-card,td#membership-application,td#proof-of-income,td#proof-of-residence,#proof-of-down-payment,td#other,td#other_,#proof-of-trade-in').prev().empty();
            $('#drivers-license-cobuyer,#insurance-card-cobuyer,#membership-application-cobuyer,#proof-of-income-cobuyer,#proof-of-down-payment-cobuyer,#proof-of-residence-cobuyer,#other-cobuyer,#proof-of-trade-in-cobuyer').empty();
            $('#drivers-license-cobuyer,#insurance-card-cobuyer,#membership-application-cobuyer,#proof-of-income-cobuyer,#proof-of-down-payment-cobuyer,#proof-of-residence-cobuyer,#other-cobuyer,#proof-of-trade-in-cobuyer').removeClass();
            $('td#drivers-license-cobuyer,td#insurance-card-cobuyer,td#membership-application-cobuyer,td#proof-of-income-cobuyer,#proof-of-down-payment-cobuyer,td#proof-of-residence-cobuyer,#other-cobuyer,#proof-of-trade-in-cobuyer').prev().empty();
        }

        //Get CMA For Salesperson
        function getCMAPerSalesperson() {
            if (Employee != 0) {
                if (Employee.Title == "Salesperson") {
                    if (CmaCount > 0) {
                        if (Employee.CmaRev > 0) {
                            PendCma = 1;
                        }
                    }
                }
            } else {
                PendCma = 0;
            }

        }
    </script>
    <script>
        var CountTradeIn = 1;
        $('#ModalTradeIn button[name="BtnAddTradeIn"]').on('click', function () {
            AddTradeIn();
            $("#Span_T2").trigger("click");
            $('button[name="BtnRemoveTradeIn"]').removeClass("gone");
            $('button[name="DeleteTradeIn1"]').addClass("gone");
            if ($('input[name="TradeInModal[1].CardId"]').val() != null && $('input[name="TradeInModal[1].CardId"]').val() != "" && $('input[name="TradeInModal[1].CardId"]').val() != 0) {
                $('button[name="DeleteTradeIn2"]').removeClass("gone");
            }

        });
        $('#ModalTradeIn button[name="BtnRemoveTradeIn"]').on('click', function () {
            CountTradeIn = 1;
            ClearTradeIn(1);
            $("a#Span_T2").addClass("gone");
            $("#Span_T1").trigger("click");
            $('button[name="BtnRemoveTradeIn"]').addClass("gone");
            $('button[name="DeleteTradeIn2"]').addClass("gone");
            $('button[name="BtnAddTradeIn"]').removeClass("gone");
        });

        $('#Span_T1').on('click', function () {
            if ($('input[name="TradeInModal[0].CardId"]').val() != null && $('input[name="TradeInModal[0].CardId"]').val() != "" && $('input[name="TradeInModal[0].CardId"]').val() != 0) {
                $('button[name="DeleteTradeIn1"]').removeClass("gone");
            }

            $('button[name="DeleteTradeIn2"]').addClass("gone");
        });

        $('#Span_T2').on('click', function () {
            $('button[name="DeleteTradeIn1"]').addClass("gone");
            if ($('input[name="TradeInModal[1].CardId"]').val() != null && $('input[name="TradeInModal[1].CardId"]').val() != "" && $('input[name="TradeInModal[1].CardId"]').val() != 0) {
                $('button[name="DeleteTradeIn2"]').removeClass("gone");
            }
        });

        $('#ModalTradeIn button[name="DeleteTradeIn1"]').on('click', function () {
            Swal.fire({
                title: "Remove Total Net Trade-In amount?",
                text: "",
                icon: 'info',
                showCancelButton: true,
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes",
                cancelButtonText: "No",
                closeOnConfirm: true,
                closeOnCancel: true
            })
                .then(resultado => {
                    if (resultado.value) {
                        DeleteTradeIn(1);
                    } else {

                    }
                });
        });

        $('#ModalTradeIn button[name="DeleteTradeIn2"]').on('click', function () {
            Swal.fire({
                title: "Remove Total Net Trade-In amount?",
                text: "",
                icon: 'info',
                showCancelButton: true,
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes",
                cancelButtonText: "No",
                closeOnConfirm: true,
                closeOnCancel: true
            })
                .then(resultado => {
                    if (resultado.value) {
                        DeleteTradeIn(2);
                    } else {

                    }
                });
        });

        $('#ModalTradeIn button[name="RestoreTradeIn1"]').on('click', function () {
            Swal.fire({
                title: "Restore Total Trade-In amount?",
                text: "",
                icon: 'info',
                showCancelButton: true,
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes",
                cancelButtonText: "No",
                closeOnConfirm: true,
                closeOnCancel: true
            })
                .then(resultado => {
                    if (resultado.value) {
                        RestoreTradeIn(1);
                    } else {

                    }
                });
        });

        $('#ModalTradeIn button[name="RestoreTradeIn2"]').on('click', function () {
            Swal.fire({
                title: "Restore Total Trade-In amount?",
                text: "",
                icon: 'info',
                showCancelButton: true,
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "Yes",
                cancelButtonText: "No",
                closeOnConfirm: true,
                closeOnCancel: true
            })
                .then(resultado => {
                    if (resultado.value) {
                        RestoreTradeIn(2);
                    } else {

                    }
                });
        });

        function AddTradeIn() {
            $("a#Span_T2").removeClass("gone");
            CountTradeIn = 2;
            $('button[name="BtnAddTradeIn"]').addClass("gone");
        }
        function ClearTradeIn(Trade) {
            $('#ModalTradeIn input[name="TradeInModal[' + Trade + '].VIN"]').val("");
            $('#ModalTradeIn select[name="TradeInModal[' + Trade + '].Year"]').val("");
            $('#ModalTradeIn select[name="TradeInModal[' + Trade + '].Make"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + Trade + '].Model"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + Trade + '].SubModel"]').val("");
            $('#ModalTradeIn select[name="TradeInModal[' + Trade + '].CYL"]').val("");
            $('#ModalTradeIn select[name="TradeInModal[' + Trade + '].FuleType"]').val("");
            $('#ModalTradeIn select[name="TradeInModal[' + Trade + '].Transmision"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + Trade + '].Color"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + Trade + '].Miles"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + Trade + '].LicensNo"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + Trade + '].Engine"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + Trade + '].LicensNONE"]').prop('checked', false);
            $('#ModalTradeIn input[name="TradeInModal[' + Trade + '].LicensNo"]').prop('readonly', false);
            $('#ModalTradeIn input[name="TradeInModal[' + Trade + '].TradeValue"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + Trade + '].LienValue"]').val("");
            $('#ModalTradeIn input[name="TradeInModal[' + Trade + '].Amount"]').val("");
            $('#tradein-bank-' + Trade).hide();
            $('input[name="TradeInModal[' + i + '].Bank"]').val("");
        }

        //Funcion temporal
        function _RemoveReadOnly(row) {
            var _Field = null;
            switch (row) {
                case 1:
                    _Field = document.getElementById("FeesModal_DocFee");
                    break;
                case 2:
                    _Field = document.getElementById("FeesModal_SmogFee");
                    break;
                case 3:
                    _Field = document.getElementById("FeesModal_SmogCertificationFee");

                    break;
                case 4:
                    _Field = document.getElementById("FeesModal_StateEmissionExempti");
                    break;
                case 6:
                    _Field = document.getElementById("FeesModal_TireFee");
                    break;
                case 7:
                    _Field = document.getElementById("FeesModal_ElectronicRegistrationFee");
                    break;
            }

            var attr = _Field.getAttribute("readonly");
            if (attr == null)
                _Field.setAttribute("readonly", true);
            else
                _Field.removeAttribute("readonly");
        }

        function CleanFees() {
            if (window.FeesArray == null)
                window.FeesArray = {
                    "Doc_Fee": $("#FeesModal_DocFee").val(),
                    "Smog_Fee": $("#FeesModal_SmogFee").val(),
                    "SmogCertification_Fee": $("#FeesModal_SmogCertificationFee").val(),
                    "StateEmissionExempti_Fee": $("#FeesModal_StateEmissionExempti").val(),
                    "Cancellation_Fee": $("#FeesModal_CancellationOption").val(),
                    "TireFee_Fee": $("#FeesModal_TireFee").val(),
                    "ElectronicRegistration_Fee": $("#FeesModal_ElectronicRegistrationFee").val(),
                    "Total": $("input[name='Fees']").val()
                }
            $("div#ModalFees input").val("0.00");
            $("input[name='Fees']").val("0.00");
            $("input[name='SalesTax']").val("0.00");
            //DMVFeesModal.LicenseFee  DMVFeesModal.RegistrationTransfer DMVFeesModal.PublicOfficialFees RegistrationFeesDue DMVAutoCalculate
            if (window.DMVArray == null) {
                window.DMVArray = {
                    "LicenseFee": $("input[name='DMVFeesModal.LicenseFee']").val(),
                    "RegistrationTransfer": $("input[name='DMVFeesModal.RegistrationTransfer']").val(),
                    "PublicOfficialFees": $("input[name='DMVFeesModal.PublicOfficialFees']").val(),
                    "RegistrationFeesDue": $("input[name='RegistrationFeesDue']").val(),
                    "DMVAutoCalculate": $("input[name='DMVAutoCalculate']").val(),
                }
            }
            $("input[name='DMVAutoCalculate']").val("0.00");
            $("div#ModalDMV input").val("0.00");
            window.SetSubTotal();
        }
        function restoreFees() {
            if (window.FeesArray != null) {
                $("#FeesModal_DocFee").val(window.FeesArray.Doc_Fee);
                $("#FeesModal_SmogFee").val(window.FeesArray.Smog_Fee);
                $("#FeesModal_SmogCertificationFee").val(window.FeesArray.SmogCertification_Fee);
                $("#FeesModal_StateEmissionExempti").val(window.FeesArray.StateEmissionExempti_Fee);
                $("#FeesModal_TireFee").val(window.FeesArray.TireFee_Fee);
                $("#FeesModal_CancellationOption").val(window.FeesArray.Cancellation_Fee);
                $("#FeesModal_ElectronicRegistrationFee").val(window.FeesArray.ElectronicRegistration_Fee);
                $("#FeesModal_Total").val(window.FeesArray.Total);
                $("input[name='Fees']").val(window.FeesArray.Total);
            }
            if (window.DMVArray != null) {
                $("input[name='DMVFeesModal.LicenseFee']").val(window.DMVArray.LicenseFee);
                $("input[name='DMVFeesModal.RegistrationTransfer']").val(window.DMVArray.RegistrationTransfer);
                $("input[name='DMVFeesModal.PublicOfficialFees']").val(window.DMVArray.PublicOfficialFees);
                $("input[name='RegistrationFeesDue']").val(window.DMVArray.RegistrationFeesDue);
                $("input[name='DMVAutoCalculate']").val(window.DMVArray.DMVAutoCalculate);
            }
            window.DMVFees();
            window.ObtenerElTaxRate();
            window.SetSubTotal();
        }

        function saveDueBill() {
            var IdLoanStatus = $('input[name="LoanId"]').val();
            var DueBill = $('textarea[name="DueBill"]').val();
            var ApprovedBy = $('select[name="ApprovedBy"]').val();
            var DateApproved = $('input[name="DateApproved"]').val();
            var CarId = $('input[name="CarId"]').val();
            if (!validateToSaveDueBill(IdLoanStatus, DueBill, ApprovedBy, DateApproved)) {
                swal({
                    title: 'Saving Due Bill',
                    text: '',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    onOpen: () => {
                        swal.showLoading();
                    }
                });
                $.ajax({
                    type: 'GET',
                    url: "/AjaxSales/SaveDueBill?LoanStatus_Id=" + IdLoanStatus + "&DueBill=" + DueBill + "&DateApproved=" + DateApproved + "&ApprovedBy=" + ApprovedBy + "&CarId=" + CarId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.success) {
                            swal(response.Message, "", "info");
                            $('#ModalDueBillNotes').modal('hide');
                            $('textarea[name="DueBill"]').prop('disabled', true);
                            $('button[name="SaveDueBill"]').prop('disabled', true);

                        } else {
                            swal(response.Message, "", "info");
                        }
                    }//success
                });//$.ajax
            }
        }
        function FFundedEdit() {
            var password = $('input[name="PasswordE"]').val();
            console.log(password);
            $.ajax({
                type: "GET",
                url: "/AjaxSales/GetPasswordF?password=" + password,
                contentType: 'application/json',
                dataType: 'json',
                success: function (response) {
                    if (response.success) {
                        $('#ModalFundedEdit').modal('hide');
                        $("#home input").prop('disabled', false);
                        $("#profile input").prop('disabled', false);
                        $("#home select").prop('disabled', false);
                        $("#profile select").prop('disabled', false);
                        $('input[name="MilesAtSale"]').prop('disabled', false);
                        $('input[name="ROS"]').prop('disabled', false);
                        $('input[name="TimeTags"]').prop('disabled', false);
                        $('input[name="SelectTimeTags"]').prop('disabled', false);
                        $('input[name="SoldDate"]').prop('disabled', false);
                        $('input[name="SalePrice"]').prop('disabled', false);
                        $('input[name="SalesTax"]').prop('disabled', false);
                        $('input[name="DownPaymentPRCO"]').prop('disabled', false);
                        $('select[name="BankId"]').prop('disabled', false);
                        $('input[name="APR"]').prop('disabled', false);
                        $('input[name="Term"]').prop('disabled', false);
                        $('input[name="FirstPaymentDue"]').prop('disabled', false);
                        $('input[name="DaysDue"]').prop('disabled', false);
                        $('input[name="FinalPayment"]').prop('disabled', false);
                        $('input[name="FinanceCharges"]').prop('disabled', false);
                        $('select[name="StoreId"]').prop('disabled', false);
                        $('select[name="SalesAssociateOne"]').prop('disabled', false);


                        $("#ModalDocCheckList select").prop('disabled', false);
                        $("#ModalDueBillNotes input").prop('disabled', false);
                        $("#ModalDueBillNotes select").prop('disabled', false);
                        $("#ModalSalesPrice input").prop('disabled', false);
                        $("#ModalAccesories input").prop('disabled', false);
                        $("#ModalAccesories select").prop('disabled', false);
                        $("#ModalServiceCont input").prop('disabled', false);
                        $("#ModalServiceCont select").prop('disabled', false);
                        $("#ModalSalesTax select").prop('disabled', false);
                        $("#ModalDebtAgreement select").prop('disabled', false);
                        $("#ModalDebtAgreement input").prop('disabled', false);
                        $("#ModalTradeIn input").prop('disabled', false);
                        $("#ModalTradeIn input").prop('readonly', false);
                        $("#ModalDMV input").prop('disabled', false);
                        $("#ModalTradeIn select").prop('disabled', false);
                        $("#ModalDifferDown select").prop('disabled', false);
                        $("#ModalDifferDown input").prop('disabled', false);
                        $("#ModalLicenseNo input").prop('disabled', false);
                        $("#ModalPRCO input").prop('disabled', false);

                    }
                    else {
                        Swal.fire({
                            type: 'error',
                            title: 'Incorrect password',
                            showConfirmButton: false,
                            timer: 2500
                        });
                    }

                }

            });
        }
        function validateToSaveDueBill(IdLoanStatus, DueBill, ApprovedBy, DateApproved) {
            Message = "";
            ban = false;
            count = 64;
            if (IdLoanStatus == 0 || IdLoanStatus == null || IdLoanStatus.length == 0) {
                ban = true; Message = "<strong class='col-xs-1 no-padding-r'>" + LetterToAlert(++count) + "</strong><p class='col-xs-11 no-padding'>.To generate a DUE BILL a vehicle must be <strong>SOLD/TRIP</strong>!!</p>";
            }

            if (isNull(DueBill) || DueBill.length == 0) {
                ban = true; Message += "<strong class='col-xs-1 no-padding-r'>" + LetterToAlert(++count) + "</strong><p class='col-xs-11 no-padding'>.Invalid Service Request</p>";
            }

            if (isNull(DateApproved) || DateApproved.length == 0) {
                ban = true; Message += "<strong class='col-xs-1 no-padding-r'>" + LetterToAlert(++count) + "</strong><p class='col-xs-11 no-padding'>.Invalid Date Approved</p>";
            }

            if (ApprovedBy.length == 0) {
                ban = true; Message += "<strong class='col-xs-1 no-padding-r'>" + LetterToAlert(++count) + "</strong><p class='col-xs-11 no-padding'>.Invalid ApprovedBy</p>";
            }

            if (ban)
                swal({
                    icon: "error",
                    html: "<div id='AlertDueBill'>" + Message + "<div>",
                    width: "500px!important",
                    showCancelButton: false,
                    showConfirmButton: true
                });
            return ban;
        }
        function CancelDueBill() {
            $('textarea[name="DueBill"]').val("");
        }
        function SaleTaxRateJSON(address, city, zip) {
            var jsonResult;

            $.getJSON('https://api.allorigins.win/get?url=' + encodeURIComponent(url), function (data) {
                //alert(data.contents);

                console.log(JSON.parse(data.contents));

            });
        }


        function PrintTradeindis() {
            var carId = $('input[name="TradeInModal[0].CardId"]').val();
            if (carId != 0) {
                $.ajax({
                    type: 'GET',
                    url: "/AjaxSales/getCarDis?Id=" + carId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {
                        if (response.success == true) {
                            var name = $('input[name="Buyer2.Name"]').val() + " " + $('input[name="Buyer2.LastName"]').val();
                            var address = $('input[name="Buyer2.Residence[0].Address.Address"]').val();
                            var city = $('input[name="Buyer2.Residence[0].Address.City"]').val();
                            var state = $('input[name="Buyer2.Residence[0].Address.State"]').val();
                            var zipcode = $('input[name="Buyer2.Residence[0].Address.ZIPCode"]').val();


                            var stock = $('input[name="Vehicle.StockNumber"]').val();
                            var vin = response.cars.VIN;
                            var year = response.cars.Year;
                            var make = response.cars.Maker;
                            var model = response.cars.Model;
                            var miles = response.cars.Miles;



                            var pdf = new jsPDF();
                            pdf.setFontSize(14);
                            pdf.setFontType("normal");
                            pdf.text(60, 18, "Disclosure Statement for Trade in Vehicle");
                            pdf.setFontSize(12);
                            pdf.setFontType("normal");
                            pdf.text(20, 25, "Dealership information:");
                            pdf.text(20, 37, "Lupitas Auto Sales Inc.");
                            pdf.text(20, 42, "1501 Atwater Blvd.");
                            pdf.text(20, 47, "Atwater. CA 95301 ");

                            pdf.text(100, 25, "Customer information: ");
                            pdf.text(100, 37, "Name:");
                            pdf.text(120, 37, name);
                            pdf.text(100, 42, "Address:");
                            pdf.text(120, 42, address);
                            pdf.text(120, 47, city + ", " + state + ", " + zipcode);

                            pdf.setFontSize(10);
                            pdf.text(20, 60, "Stock No:");
                            pdf.text(36, 60, "N/A");
                            pdf.text(70, 60, "VIN:");
                            pdf.text(77, 60, vin);
                            pdf.text(130, 60, "Year:");
                            pdf.text(140, 60, year);


                            pdf.text(20, 65, "Make:");
                            pdf.text(31, 65, make);
                            pdf.text(70, 65, "Model:");
                            pdf.text(84, 65, model);
                            pdf.text(130, 65, "Miles:");
                            pdf.text(140, 65, miles);
                            pdf.setFontSize(12);


                            pdf.text(40, 80, "Customer be advised that a good faith estimate for  your trade-in vehicle does ");
                            pdf.text(20, 85, "not constitute  the final value amount until the vehicle is physically inspected by ");
                            pdf.text(20, 90, "Lupitas Autos Sales certified technicians. The dealership has the right to inspect the  ");
                            pdf.text(20, 95, "vehicle in trade  within five week days after the customer signs the conditional sales  ");
                            pdf.text(20, 100, "contract. ");
                            pdf.text(40, 105, "The trade-in amount that you receive on your good faith estimate is subject to ");
                            pdf.text(20, 110, "change after the inspections have been completed. The customer has the right to reject  ");
                            pdf.text(20, 115, "the final offer and/or cancel the conditional sales contract. ");
                            pdf.text(40, 120, "By signing below the customer(s) agrees to provide true and correct ");
                            pdf.text(20, 125, "information as to the conditions of mechanical, frame, or structural damage including  ");
                            pdf.text(20, 130, "but not limited to what the history reports may disclose. In the event that the  ");
                            pdf.text(20, 135, "information provided by the customer is inaccurate or fraudulent, the dealership has ");
                            pdf.text(20, 140, "the right to refuse the trade-in vehicle and/or to cancel the conditional sales contract. ");



                            pdf.text(60, 180, "____________________________________ Date:_________________ ");
                            pdf.text(80, 185, "Customer signature");

                            pdf.save('Trade-in_Disclosure_Statement.pdf');
                        }
                    },

                });

            }
        }
        function printDoc() {
            var carId = $('input[name="TradeInModal[0].CardId"]').val();

            var id = $('input[name="LoanId"]').val();
            if (carId != 0 && id != 0) {
                var url = "/DMVR/DownloandReg227?Id=" + carId + "&num=227" + "&LoanS=" + id;
                window.open(url);
            }
        }
        function printDocReg156() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=156";
                window.open(url);
            }
        }
        function printDocReg343() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=343";
                window.open(url);
            }
        }
        function printDocReg256() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=256";
                window.open(url);
            }
        }
        function printDocReg31() {
            var loanS = $('input[name="Vehicle.StockNumber"]').val();
            if (loanS != 0) {
                var url = "/AjaxArchives/GetDocumentVIN?stock=" + loanS;
                window.open(url);
            }
        }
        function BuyerGuideEnglish() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=3";
                window.open(url);
            }

        }
        function Law553() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=500";
                window.open(url);
            }

        }
        function VehicleDisclosures() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=4";
                window.open(url);
            }

        }
        function VehicleDisclosuresS() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=18";
                window.open(url);
            }

        }
        function LanguageAknowlegment() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=5";
                window.open(url);
            }

        }
        function LanguageAknowlegmentS() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=230";
                window.open(url);
            }

        }
        function InsuranceAgreement() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=6";
                window.open(url);
            }

        }
        function InsuranceAgreementS() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=14";
                window.open(url);
            }

        }
        function CreditScoreDisclosureCoBuyer() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=7";
                window.open(url);
            }

        }
        function CreditScoreDisclosureCoBuyerS() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=17";
                window.open(url);
            }

        }
        function CreditScoreDisclosureBuyer() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=8";
                window.open(url);
            }

        }
        function CreditScoreDisclosureBuyerS() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=16";
                window.open(url);
            }

        }
        function ContractCancelationOption() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=9";
                window.open(url);
            }

        }
        function ContractCancelationOptionS() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=15";
                window.open(url);
            }

        }
        function DMVEstimateFees() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=10";
                window.open(url);
            }

        }
        function DeclinationofOptionalServicePlan() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=11";
                window.open(url);
            }

        }
        function NoticetoCosigner() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=12";
                window.open(url);
            }

        }
        function VehicleLimitedWarranty() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=13";
                window.open(url);
            }

        }
        function RetailInstallmentSaleContract() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=19";
                window.open(url);
            }

        }
        function RetailInstallmentSaleContractS() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=20";
                window.open(url);
            }

        }
        function SalesQuote() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=21";
                window.open(url);
            }

        }
        function DocBuyersGuideSpanish() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=400";
                window.open(url);
            }

        }
        function CreditApplication() {
            var loanS = $('input[name="LoanId"]').val();
            if (loanS != 0) {
                var url = "/DMVR/DownloandReg2?Id=" + loanS + "&num=22";
                window.open(url);
            }

        }

        var printopc = 0;
        var printopc2 = 0;
        $('#tbodyPrint').on('click', 'tr', function () {
            var opcP = $(this).attr('id');
            if (opcP == "31") {
                printopc = 31;
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#6').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').addClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');

            }
            if (opcP == "12") {
                printopc = 12;
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#6').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').addClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "205") {
                printopc = 205;
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#6').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').addClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "3") {
                printopc = 3;
                $('tr#3').addClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#6').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "2") {
                printopc = 2;
                $('tr#2').addClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#6').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "19") {
                printopc = 19;
                $('tr#19').addClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#6').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }

            if (opcP == "6") {
                printopc = 6;
                $('tr#6').addClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "11") {
                printopc = 11;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').addClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "10") {
                printopc = 10;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').addClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');

            }
            if (opcP == "9") {
                printopc = 9;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').addClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "8") {
                printopc = 8;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').addClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "7") {
                printopc = 7;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#7').addClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "17") {
                printopc = 17;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#17').addClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "16") {
                printopc = 16;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#16').addClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "13") {
                printopc = 13;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#13').addClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "18") {
                printopc = 18;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').addClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "200") {
                printopc = 200;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#200').addClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "201") {
                printopc = 201;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').addClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "202") {
                printopc = 202;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').addClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "203") {
                printopc = 203;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').addClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');

            }
            if (opcP == "204") {
                printopc = 204;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').addClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "30") {
                printopc = 30;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').addClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');

            }
            if (opcP == "206") {
                printopc = 206;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#206').addClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');


            }
            if (opcP == "20") {
                printopc = 20;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#20').addClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');



            }
            if (opcP == "5") {
                printopc = 5;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').addClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').removeClass('ColorTr');
            }
            if (opcP == "230") {
                printopc = 230;
                $('tr#6').removeClass('ColorTr');
                $('tr#3').removeClass('ColorTr');
                $('tr#2').removeClass('ColorTr');
                $('tr#19').removeClass('ColorTr');
                $('tr#11').removeClass('ColorTr');
                $('tr#10').removeClass('ColorTr');
                $('tr#9').removeClass('ColorTr');
                $('tr#8').removeClass('ColorTr');
                $('tr#16').removeClass('ColorTr');
                $('tr#7').removeClass('ColorTr');
                $('tr#17').removeClass('ColorTr');
                $('tr#13').removeClass('ColorTr');
                $('tr#18').removeClass('ColorTr');
                $('tr#200').removeClass('ColorTr');
                $('tr#201').removeClass('ColorTr');
                $('tr#202').removeClass('ColorTr');
                $('tr#203').removeClass('ColorTr');
                $('tr#204').removeClass('ColorTr');
                $('tr#205').removeClass('ColorTr');
                $('tr#12').removeClass('ColorTr');
                $('tr#30').removeClass('ColorTr');
                $('tr#31').removeClass('ColorTr');
                $('tr#206').removeClass('ColorTr');
                $('tr#5').removeClass('ColorTr');
                $('tr#20').removeClass('ColorTr');
                $('tr#230').addClass('ColorTr');
            }
        });
        $('#tbodyPrint2').on('click', 'tr', function () {
            var opcP2 = $(this).attr('id');
            $(this).addClass('ColorTr');
            if (opcP2 == "A") {
                printopc2 = 10;
                $('tr#B').removeClass('ColorTr');
                $('tr#C').removeClass('ColorTr');
                $('tr#D').removeClass('ColorTr');
                $('tr#F').removeClass('ColorTr');
                $('tr#E').removeClass('ColorTr');
                $('tr#G').removeClass('ColorTr');
            }
            if (opcP2 == "B") {
                $('tr#A').removeClass('ColorTr');
                $('tr#C').removeClass('ColorTr');
                $('tr#D').removeClass('ColorTr');
                $('tr#E').removeClass('ColorTr');
                $('tr#F').removeClass('ColorTr');
                $('tr#G').removeClass('ColorTr');
                printopc2 = 11;
            }
            if (opcP2 == "C") {
                printopc2 = 12;
                $('tr#A').removeClass('ColorTr');
                $('tr#B').removeClass('ColorTr');
                $('tr#D').removeClass('ColorTr');
                $('tr#E').removeClass('ColorTr');
                $('tr#F').removeClass('ColorTr');
                $('tr#G').removeClass('ColorTr');
            }
            if (opcP2 == "D") {
                printopc2 = 17;
                $('tr#A').removeClass('ColorTr');
                $('tr#B').removeClass('ColorTr');
                $('tr#C').removeClass('ColorTr');
                $('tr#E').removeClass('ColorTr');
                $('tr#F').removeClass('ColorTr');
                $('tr#G').removeClass('ColorTr');
            }
            if (opcP2 == "E") {
                printopc2 = 28;
                $('tr#A').removeClass('ColorTr');
                $('tr#B').removeClass('ColorTr');
                $('tr#C').removeClass('ColorTr');
                $('tr#D').removeClass('ColorTr');
                $('tr#F').removeClass('ColorTr');
                $('tr#G').removeClass('ColorTr');
            }
            if (opcP2 == "F") {
                printopc2 = 30;
                $('tr#A').removeClass('ColorTr');
                $('tr#B').removeClass('ColorTr');
                $('tr#C').removeClass('ColorTr');
                $('tr#D').removeClass('ColorTr');
                $('tr#E').removeClass('ColorTr');
                $('tr#G').removeClass('ColorTr');
            }
            if (opcP2 == "G") {
                printopc2 = 31;
                $('tr#A').removeClass('ColorTr');
                $('tr#B').removeClass('ColorTr');
                $('tr#C').removeClass('ColorTr');
                $('tr#D').removeClass('ColorTr');
                $('tr#E').removeClass('ColorTr');
                $('tr#F').removeClass('ColorTr');
            }


        });
        $('#ClosePrint').click(function () {
            printopc = 0;
            printopc2 = 0;
            $('tr#2').removeClass('ColorTr');
            /*  $('tr#1').removeClass('ColorTr');*/
            $('tr#A').removeClass('ColorTr');
            $('tr#20').removeClass('ColorTr');
            $('tr#19').removeClass('ColorTr');
            $('tr#B').removeClass('ColorTr');
            $('tr#C').removeClass('ColorTr');
            $('tr#D').removeClass('ColorTr');
            $('tr#E').removeClass('ColorTr');
            $('tr#F').removeClass('ColorTr');
            $('tr#G').removeClass('ColorTr');
            $('tr#3').removeClass('ColorTr');
            $('tr#2').removeClass('ColorTr');
            $('tr#6').removeClass('ColorTr');
            $('tr#11').removeClass('ColorTr');
            $('tr#10').removeClass('ColorTr');
            $('tr#9').removeClass('ColorTr');
            $('tr#8').removeClass('ColorTr');
            $('tr#7').removeClass('ColorTr');
            $('tr#17').removeClass('ColorTr');
            $('tr#16').removeClass('ColorTr');
            $('tr#13').removeClass('ColorTr');
            $('tr#18').removeClass('ColorTr');
            $('tr#200').removeClass('ColorTr');
            $('tr#201').removeClass('ColorTr');
            $('tr#202').removeClass('ColorTr');
            $('tr#203').removeClass('ColorTr');
            $('tr#204').removeClass('ColorTr');
            $('tr#205').removeClass('ColorTr');
            $('tr#12').removeClass('ColorTr');
            $('tr#30').removeClass('ColorTr');
            $('tr#31').removeClass('ColorTr');
            $('tr#206').removeClass('ColorTr');
            $('tr#230').removeClass('ColorTr');
        });
        $('#Lenguaje').click(function () {
            var opc = $(this).val();
            if (opc == "Spanish") {
                $('tr#200').removeClass('hidden');
                $('tr#10').addClass('hidden');

                $('tr#201').removeClass('hidden');
                $('tr#7').addClass('hidden');

                $('tr#202').removeClass('hidden');
                $('tr#8').addClass('hidden');

                $('tr#203').removeClass('hidden');
                $('tr#9').addClass('hidden');

                $('tr#204').removeClass('hidden');
                $('tr#6').addClass('hidden');

                $('tr#205').removeClass('hidden');
                $('tr#12').addClass('hidden');

                $('tr#206').removeClass('hidden');
                $('tr#3').addClass('hidden');

                $('tr#20').removeClass('hidden');


                $('tr#230').removeClass('hidden');
                $('tr#11').addClass('hidden');
            }
            if (opc == "English") {
                $('tr#200').addClass('hidden');
                $('tr#10').removeClass('hidden');

                $('tr#201').addClass('hidden');
                $('tr#7').removeClass('hidden');

                $('tr#202').addClass('hidden');
                $('tr#8').removeClass('hidden');

                $('tr#203').addClass('hidden');
                $('tr#9').removeClass('hidden');

                $('tr#204').addClass('hidden');
                $('tr#6').removeClass('hidden');

                $('tr#205').addClass('hidden');
                $('tr#12').removeClass('hidden');

                $('tr#206').addClass('hidden');
                $('tr#3').removeClass('hidden');

                $('tr#230').addClass('hidden');
                $('tr#11').removeClass('hidden');

                $('tr#20').addClass('hidden');
            }

        });
        var Arreglo553 = new Array();
        $('#Use').change(function () {
            var message = "Are you sure to change it?";
            Swal.fire({
                title: message,
                showDenyButton: true,
                showCancelButton: true,
                confirmButtonText: 'YES',
                cancelButtonText: 'NO',
                confirmButtonColor: '#1c84c6',
                cancelButtonColor: '#ed5565',
                allowOutsideClick: false,
                allowEscapeKey: false,
                denyButtonText: 'NO'
            }).then((result) => {
                if (result.value == true) {

                } else {
                    $('#Use').val("Used");
                }
            })


        });

        $('#print1').click(function () {
            
            if (printopc == "3") {
                Arreglo553[0] = $('input[name="Buyer2.Name"]').val() + " " + $('input[name="Buyer2.LastName"]').val() + " " + $('input[name="Buyer2.MiddleName"]').val();
                Arreglo553[1] = $('input[name="Buyer2.Residence[0].Address.Address"]').val();
                Arreglo553[8] = $('input[name="Buyer2.Residence[0].Address.City"]').val() + ", " + $('input[name="Buyer2.Residence[0].Address.State"]').val() + " " + $('input[name="Buyer2.Residence[0].Address.ZIPCode"]').val();
                if (isNull($('input[name="Co_Buyer.Name"]').val())) {
                    Arreglo553[2] = "N/A";
                } else {
                    Arreglo553[2] = $('input[name="Co_Buyer.Name"]').val() + " " + $('input[name="Co_Buyer.LastName"]').val() + " " + $('input[name="Co_Buyer.MiddleName"]').val();
                }

                Arreglo553[3] = $('input[name="Co_Buyer.Residence[0].Address.Address"]').val();
                Arreglo553[9] = $('input[name="Co_Buyer.Residence[0].Address.City"]').val() + ", " + $('input[name="Co_Buyer.Residence[0].Address.State"]').val()  + " " + $('input[name="Co_Buyer.Residence[0].Address.ZIPCode"]').val();
                Arreglo553[4] = $('input[name="Vehicle.Year"]').val();
                Arreglo553[5] = $('input[name="Vehicle.Make1"]').val();

                Arreglo553[10] = $('input[name="Vehicle.Model"]').val().toUpperCase();
                Arreglo553[6] = $('input[name="MilesAtSale"]').val();
                Arreglo553[7] = $('input[name="Vehicle.VIN"]').val();

                Arreglo553[11] = $('select[name="Use"]').val();
                var arr = $('select[name="Store"]').val().split('-');

                Arreglo553[12] = arr[0];
                Arreglo553[64] = arr[1];


                Arreglo553[65] = $('input[name="Vehicle.Type"]').val();

                Arreglo553[13] = $('input[name="APR"]').val();
                Arreglo553[14] = $('input[name="FinanceCharges"]').val();
                Arreglo553[15] = $('input[name="AmountFinanced"]').val();
                Arreglo553[16] = $('input[name="TotalPayment"]').val();
                Arreglo553[17] = $('input[name="TotalDown"]').val();

                if (isNull($('input[name="SalePrice"]').val())) {
                    Arreglo553[18] = "N/A";
                } else {
                    Arreglo553[18] = $('input[name="SalePrice"]').val();
                }

                Arreglo553[19] = $('input[name="FeesModal.DocFee"]').val();
                Arreglo553[20] = $('input[name="FeesModal.SmogFee"]').val();

                if (isNull($('input[name="Accessories"]').val())) {
                    Arreglo553[21] = "N/A";
                    Arreglo553[22] = "N/A";
                } else {
                    Arreglo553[21] = $('input[name="Accessories"]').val();
                    Arreglo553[22] = "Auto Theft protection";
                }

                Arreglo553[23] = $('input[name="SalesTax"]').val();
                if (isNull($('input[name="FeesModal.ElectronicRegistrationFee"]').val())) {
                    Arreglo553[25] = "N/A";
                    Arreglo553[24] = "N/A";
                } else {
                    Arreglo553[25] = "Dealer Track";
                    Arreglo553[24] = $('input[name="FeesModal.ElectronicRegistrationFee"]').val();
                }

                Arreglo553[26] = $('input[name="ServiceContract"]').val();
                Arreglo553[27] = $('input[name="GapInsurance"]').val();
                Arreglo553[28] = $('input[name="FeesModal.SmogCertificationFee"]').val();
                Arreglo553[29] = $('input[name="Term"]').val();

                if (isNull($('input[name="Accesories[2].AmountAux"]').val())) {
                    Arreglo553[30] = "N/A";
                    Arreglo553[31] = "0.00";
                } else {
                    Arreglo553[30] = "PORTFOLIO PROTECTION";
                    Arreglo553[31] = $('input[name="Accesories[2].AmountAux"]').val();
                }
                if (isNull($('input[name="Payment"]').val())) {
                    Arreglo553[33] = "N/A";
                    Arreglo553[34] = "N/A";
                    Arreglo553[35] = "N/A";
                    Arreglo553[36] = "N/A";
                } else {
                    var auxc = $('input[name="Term"]').val() - 1;
                    Arreglo553[33] = auxc.toString();
                    Arreglo553[34] = $('input[name="Payment"]').val();
                    Arreglo553[35] = "Montly";
                    Arreglo553[36] = $('input[name="FirstPaymentDue"]').val();
                    
                }


                Arreglo553[37] = $('input[name="TradeIn"]').val();
                Arreglo553[38] = $('input[name="TradeInModal[0].TradeValue"]').val();
                Arreglo553[39] = $('input[name="TradeInModal[1].TradeValue"]').val();
                var s2 = $('input[name="TradeInModal[0].TradeValue"]').val() + $('input[name="TradeInModal[1].TradeValue"]').val();
                Arreglo553[42] = s2;
                Arreglo553[40] = $('input[name="TradeInModal[1].LienValue"]').val();
                Arreglo553[32] = $('input[name="TradeInModal[0].LienValue"]').val();
                var s1 = $('input[name="TradeInModal[1].LienValue"]').val() + $('input[name="TradeInModal[0].LienValue"]').val();
                Arreglo553[41] = s1;

                Arreglo553[43] = $('input[name="TradeInModal[0].Amount"]').val();
                Arreglo553[44] = $('input[name="TradeInModal[1].Amount"]').val();
                var s3 = $('input[name="TradeInModal[0].Amount"]').val() + $('input[name="TradeInModal[1].Amount"]').val();
                Arreglo553[45] = s3;

                Arreglo553[46] = $('input[name="FeesModal.TireFee"]').val();
                Arreglo553[47] = $('input[name="DMVFeesModal.RegistrationTransfer"]').val();
                Arreglo553[48] = $('input[name="DMVFeesModal.LicenseFee"]').val();


                if (isNull($('input[name="Accesories[1].AmountAux"]').val())) {
                    Arreglo553[49] = "N/A";
                    Arreglo553[50] = "0.00";
                } else {
                    Arreglo553[49] = "PORTFOLIO PROTECTION";
                    Arreglo553[50] = $('input[name="Accesories[1].AmountAux"]').val();
                }

                Arreglo553[51] = $('input[name="ServiceContractModal.Price"]').val();

                if (isNull($('input[name="ServiceContractModal.Terms"]').val())) {
                    Arreglo553[52] = "N/A";
                    Arreglo553[53] = "Service Contract Refused";
                } else {
                    Arreglo553[52] = $('input[name="ServiceContractModal.Terms"]').val();
                    Arreglo553[53] = $('select[name="ServiceContractModal.Company"]').val();
                }

                if (isNull($('select[name="TradeInModal[0].Year"]').val())) {
                    Arreglo553[54] = "N/A";
                    Arreglo553[59] = "N/A";
                    Arreglo553[60] = "N/A";
                } else { 
                    if (isNull($('select[name="TradeInModal[1].Year"]').val())) {
                        Arreglo553[59] = "N/A";
                    } else {
                        Arreglo553[59] = $('select[name="TradeInModal[1].Year"]').val();
                    }

                    if (isNull($('select[name="TradeInModal[1].Make"]').val())) {
                        Arreglo553[60] = "N/A";
                    } else {
                        Arreglo553[60] = $('select[name="TradeInModal[1].Make"]').val();
                    }
                    Arreglo553[54] = $('select[name="TradeInModal[0].Year"]').val();
                }

                if (isNull($('select[name="TradeInModal[0].Make"]').val())) {
                    Arreglo553[55] = "N/A";
                } else {
                    Arreglo553[55] = $('select[name="TradeInModal[0].Make"]').val();
                }

                if (isNull($('select[name="TradeInModal[0].Model"]').val())) {
                    Arreglo553[56] = "N/A";
                } else {
                    Arreglo553[56] = $('input[name="TradeInModal[0].Model"]').val();
                }

                if (isNull($('select[name="TradeInModal[0].VIN"]').val())) {
                    Arreglo553[57] = "N/A";
                } else {
                    Arreglo553[57] = $('input[name="TradeInModal[0].VIN"]').val();
                }

                if (isNull($('select[name="TradeInModal[0].Miles"]').val())) {
                    Arreglo553[58] = "N/A";
                } else {
                    Arreglo553[58] = $('input[name=" TradeInModal[0].Miles"]').val();
                }

                if (isNull($('select[name="TradeInModal[1].Model"]').val())) {
                    Arreglo553[61] = "N/A";
                } else {
                    Arreglo553[61] = $('input[name="TradeInModal[1].Model"]').val();
                }

                if (isNull($('select[name="TradeInModal[1].Miles"]').val())) {
                    Arreglo553[62] = "N/A";
                } else {
                    Arreglo553[62] = $('input[name="TradeInModal[1].Miles"]').val();
                }

                if (isNull($('select[name="TradeInModal[1].VIN"]').val())) {
                    Arreglo553[63] = "N/A";
                } else {
                    Arreglo553[63] = $('input[name="TradeInModal[1].VIN"]').val();
                }
                var total1 = (parseFloat(setSplit($('input[name="SalePrice"]').val())) + parseFloat(setSplit($('input[name="FeesModal.DocFee"]').val())) + parseFloat(setSplit($('input[name="FeesModal.SmogFee"]').val())) + parseFloat(setSplit($('input[name="Accessories"]').val())) + parseFloat(setSplit($('input[name="Accesories[1].AmountAux"]').val())) + parseFloat(setSplit($('input[name="SalesTax"]').val())) + parseFloat(setSplit()) + parseFloat(setSplit($('input[name="FeesModal.ElectronicRegistrationFee"]').val())) + parseFloat(setSplit($('input[name="ServiceContract"]').val())) + parseFloat(setSplit($('input[name="TradeInModal[0].LienValue"]').val())) + parseFloat(setSplit($('input[name="TradeInModal[1].LienValue"]').val())) + parseFloat(setSplit($('input[name="GapInsurance"]').val()))).toString();
                var total2 = (parseFloat(setSplit($('input[name="DMVFeesModal.LicenseFee"]').val())) + parseFloat(setSplit($('input[name="DMVFeesModal.RegistrationTransfer"]').val())) + parseFloat(setSplit($('input[name="FeesModal.TireFee"]').val()))).toString();
                var total3 = (parseFloat(setSplit(total2)) + parseFloat(setSplit(total1)) + parseFloat(setSplit($('input[name="FeesModal.SmogCertificationFee"]').val()))).toString();
                Arreglo553[66] = formatearNumero(total1).toString();
                Arreglo553[67] = formatearNumero(total2).toString();
                Arreglo553[68] = formatearNumero(total3).toString();
                Arreglo553[69] = $('input[name="TotalSalesPrice"]').val();
                Arreglo553[70] = $('input[name="SoldDate"]').val();

                var dateM = $('input[name="FirstPaymentDue"]').val();
                var parts = dateM.split('/');
                var dateM1 = new Date(parts[2], parts[0], parts[1]);
                var months = $('input[name="Term"]').val() ;
                /*dateM1.setMonth(dateM1.getMonth() + months);*/
                var DateM2 = addMonths(dateM1, months - 1);
                var d1 = DateM2.toString("MM/dd/yyyy");
                d1 = (DateM2.getMonth() + "/" + DateM2.getDate() + "/" + DateM2.getFullYear());

                Arreglo553[71] = d1;

                if (Arreglo553.length > 0) {
                    DocprintDoc553(Arreglo553);
                    Law553();
                    
                }
            }
            if (printopc == "2") {
                DMV262SinTradeIn();
            }
            if (printopc == "19") {
                BuyerGuideEnglish();
            }
            if (printopc == "6") {
                VehicleDisclosures();
            }
            if (printopc == "204") {
                VehicleDisclosuresS();
            }
            if (printopc == "11") {
                LanguageAknowlegment();
            }
            if (printopc == "230") {
                LanguageAknowlegmentS();
            }
            if (printopc == "10") {
                InsuranceAgreement();
            }
            if (printopc == "200") {
                InsuranceAgreementS();
            }
            if (printopc == "203") {
                CreditScoreDisclosureCoBuyerS();
            }
            if (printopc == "9") {
                CreditScoreDisclosureCoBuyer();
            }
            if (printopc == "8") {
                CreditScoreDisclosureBuyer();
            }
            if (printopc == "202") {
                CreditScoreDisclosureBuyerS();
            }
            if (printopc == "7") {
                ContractCancelationOption();
            }
            if (printopc == "201") {
                ContractCancelationOptionS();
            }
            if (printopc == "17") {
                DMVEstimateFees();
            }
            if (printopc == "16") {
                DeclinationofOptionalServicePlan();
            }
            if (printopc == "13") {
                NoticetoCosigner();
            }
            if (printopc == "18") {
                VehicleLimitedWarranty();
            }
            if (printopc == "12") {
                RetailInstallmentSaleContract();
            }
            if (printopc == "205") {
                RetailInstallmentSaleContractS();
            }
            if (printopc == "30") {
                SalesQuote();
            }
            if (printopc == "31") {
                CreditApplication();
            }
            if (printopc == "206") {
                DocprintDoc553Spanish();
            }
            if (printopc == "20") {
                DocBuyersGuideSpanish();
            }
            if (printopc == "5") {
                $("#ModalDMVROS").modal("show");

            }
        });
        $("#ROSDMV").click(() => {
            let stockNumber = $("#Vehicle_StockNumber").val();
            let IdBank = $('select[name="BankId"]').val();
            let id = $('select[name ="SalesAssociateOne"]').val();//"User.Identity.GetUserId()";
            let stateCustomer = $('input[name="Buyer2.Residence[0].Address.State"]').val();

            if (stockNumber == "" || stockNumber == null || stockNumber == undefined) {
                Swal({
                    title: "Search a Vehicle",
                    text: '',
                    type: 'info',
                    timer: 3000,
                    showCancelButton: false,
                    showConfirmButton: false
                });
            }
            else if (IdBank == "" || IdBank == null || IdBank == undefined || IdBank == 0) {
                Swal({
                    title: "Select a Finance by",
                    text: '',
                    type: 'info',
                    timer: 3000,
                    showCancelButton: false,
                    showConfirmButton: false
                });
            }
            else if (id == "" || id == null || id == undefined || id == 0) {
                Swal({
                    title: "Select a Sales Associate",
                    text: '',
                    type: 'info',
                    timer: 3000,
                    showCancelButton: false,
                    showConfirmButton: false
                });
            }
            else if (stateCustomer == "" || stateCustomer == null || stateCustomer == undefined) {
                Swal({
                    title: "Asign a state to buyer",
                    text: '',
                    type: 'info',
                    timer: 3000,
                    showCancelButton: false,
                    showConfirmButton: false
                });
            }
            else {
                GetDMVDESKToken(stockNumber, IdBank, id, stateCustomer);
            }


        });
        $('#printSC').click(function () {

            if (printopc2 == "10") {
                printDocReg156();
            }
            if (printopc2 == "11") {
                printDocReg343();
            }
            if (printopc2 == "12") {
                printDocReg256();
            }
            if (printopc2 == "17") {
                printDocReg31();
            }
            if (printopc2 == "28") {
                printDoc();
            }
            if (printopc2 == "30") {
                DMV262();
            }
            if (printopc2 == "31") {
                PrintTradeindis();
            }
        });

        //DMVTOKEN

        function getToken() {
            $.ajax({
                type: "GET",
                url: "/AjaxSales/getVITUToken",
                contentType: false,
                processData: false,
                cache: false,
                dataType: "json",
                error: function () {
                    swal.close();
                    Swal({
                        title: "The operation could not be completed!",
                        text: '',
                        type: 'info',
                        timer: 3000,
                        showCancelButton: false,
                        showConfirmButton: false
                    });
                },
                success: function (response) {
                    swal.close();
                    if (response.success) {
                        let dateExpired = response.token.DateExpired;

                        dateExpired = dateExpired.substring(6, dateExpired.length - 2);
                        //console.log(dateExpired);
                        if (new Date(parseInt(dateExpired)) > new Date()) {
                            tokenVITU = response.token.Token
                        }
                        else {
                            GetVITUToken();

                        }
                    }
                },
            });
        }

        //RunCredit
        $("#creditmodal").click(() => {
            //data-toggle='modal' data-target='#ModalCredit
            let name = $("#Buyer2_Name").val() + " " +$("#Buyer2_MiddleName").val()+ " " + $("#Buyer2_LastName").val();
            let coname = $("#Co_Buyer_Name").val() + " " +$("#Co_Buyer_MiddleName").val()+ " " + $("#Co_Buyer_LastName").val();
            if ($("#Buyer2_Name").val() != "" && $("#Buyer2_LastName").val() != "" && $("#Buyer2_MiddleName").val() != "") {
                $("#buyerName").text("Buyer (" + name + ")");
            }
            else {
                swal("assing a buyer (Name Middle Last)");
                return;

            }
            if ($("#Co_Buyer_Name").val() != "" && $("#Co_Buyer_LastName").val() != "" && $("#Co_Buyer_MiddleName").val() != "") {
                $("#cobuyer").removeClass("bg-disable-lp");
                $("#cobuyer,#CobuyerName").removeClass("disabled-lp");
                $("#CobuyerName").removeClass("bg-white-lp");
                
                $("#CobuyerName").text("Cobuyer (" + coname + ")");
            }
            else {
                $("#cobuyer").addClass("bg-disable-lp");
                $("#cobuyer,#CobuyerName").addClass("disabled-lp");
                $("#CobuyerName").addClass("bg-white-lp");
            }
            $("#ModalCredit").modal("show");
            
        });

        $("#runCredit").click(() => {
            let bureau = "";
            let client = "";
            if (!$("#XPN").is(':checked') && !$("#TU").is(':checked') && !$("#EFX").is(':checked')) {
                swal("select a bureau");
              
            }
            else if (!$("#buyer").is(':checked') && !$("#cobuyer").is(':checked')) {
                swal("select a client");
            }
            else {
                client = $('input[name="buyer"]').val();
                bureau = $('input[name="bureau"]').val();
                console.log({ client, bureau });
                if (client == 1) {
                    runCredit($("#Buyer2_Residence_0__Address_Address").val(), bureau, $("#Buyer2_Residence_0__Address_City").val(), $("#Buyer2_Name").val() + " " + $("#Buyer2_LastName").val(), $("#Buyer2_Residence_0__Address_State").val(), $('input[name="Buyer2.ITIN_Number"]').val(), $("#Buyer2_Residence_0__Address_ZIPCode").val());
                }
                else {
                    runCredit($("#Co_Buyer_Residence_0__Address_Address").val(), bureau, $("#Co_Buyer_Residence_0__Address_City").val(), $("Co_#Buyer2_Name").val() + " " + $("#Co_Buyer_LastName").val(), $("#Co_Buyer_Residence_0__Address_State").val(), $('input[name="Co_Buyer.ITIN_Number"]').val(), $("#Co_Buyer_Residence_0__Address_ZIPCode").val());

                }
            }
            
          
        });


        function SearchCRMVin(Vin) {
            if (Vin != "" && Vin != null && Vin.length == 6) {
                $.ajax({
                    type: "GET",
                    url: "/AjaxSales/SearchCRMVin?Vin=" + Vin,
                    contentType: false,
                    processData: false,
                    cache: false,
                    dataType: "json",
                    error: function () {
                        swal.close();
                        Swal({
                            title: "The operation could not be completed!",
                            text: '',
                            type: 'info',
                            timer: 3000,
                            showCancelButton: false,
                            showConfirmButton: false
                        });
                    },
                    success: function (response) {
                        swal.close();
                        if (response.success) {
                            if (response.customerinfo.length > 0) {
                                CRMCustomerList = response.customerinfo;
                                Swal.fire({
                                    title: "You have this stock No. in the CRM.",
                                    text: "Would you like to view the costumers for it?",
                                    type: "info",
                                    showCancelButton: true,
                                    confirmButtonColor: "#DD6B55",
                                    confirmButtonText: "Yes",
                                    cancelButtonText: "No",
                                    closeOnConfirm: false,
                                    closeOnCancel: false
                                })
                                    .then(resultado => {
                                        if (resultado.value) {
                                            $("#CRMArrows").addClass("hidden");
                                            $("#CRMArrows2").addClass("hidden");

                                            $('input[name="CRMName"]').val(CRMCustomerList[0].Name);
                                            $('input[name="CRMMiddleName"]').val(CRMCustomerList[0].MiddleName);
                                            $('input[name="CRMLastName"]').val(CRMCustomerList[0].LastName);
                                            $('input[name="CRMPhone"]').val(CRMCustomerList[0].Phone);
                                            $('input[name="CRMAddress"]').val(CRMCustomerList[0].Address);
                                            $('input[name="CRMCity"]').val(CRMCustomerList[0].City);
                                            $('input[name="CRMState"]').val(CRMCustomerList[0].State);
                                            $('input[name="CRMZipCode"]').val(CRMCustomerList[0].ZipCode);
                                            $('input[name="CRMEmail"]').val(CRMCustomerList[0].Email);

                                            if (response.customerinfo.length > 1) {
                                                $("#CRMArrows").removeClass("hidden");
                                                $("#CRMArrows2").removeClass("hidden");
                                            }

                                            $('#ProspectCustomer').modal('show');
                                        } else {

                                        }
                                    });
                            }
                        }
                    },
                });
            }

        }

        function SearchCRMStock(stock) {
            if (stock != "" && stock != "" && stock != null) {
                $.ajax({
                    type: "GET",
                    url: "/AjaxSales/SearchCRMStock?stocknumber=" + stock,
                    contentType: false,
                    processData: false,
                    cache: false,
                    dataType: "json",
                    error: function () {
                        swal.close();
                        Swal({
                            title: "The operation could not be completed!",
                            text: '',
                            type: 'info',
                            timer: 3000,
                            showCancelButton: false,
                            showConfirmButton: false
                        });
                    },
                    success: function (response) {
                        swal.close();
                        if (response.success) {
                            if (response.success) {
                                if (response.customerinfo.length > 0) {
                                    CRMCustomerList = response.customerinfo;
                                    Swal.fire({
                                        title: "You have this stock No. in the CRM.",
                                        text: "Would you like to view the costumers for it?",
                                        type: "info",
                                        showCancelButton: true,
                                        confirmButtonColor: "#DD6B55",
                                        confirmButtonText: "Yes",
                                        cancelButtonText: "No",
                                        closeOnConfirm: false,
                                        closeOnCancel: false
                                    })
                                        .then(resultado => {
                                            if (resultado.value) {
                                                $("#CRMArrows").addClass("hidden");


                                                $('input[name="CRMName"]').val(CRMCustomerList[0].Name);
                                                $('input[name="CRMMiddleName"]').val(CRMCustomerList[0].MiddleName);
                                                $('input[name="CRMLastName"]').val(CRMCustomerList[0].LastName);
                                                $('input[name="CRMPhone"]').val(CRMCustomerList[0].Phone);
                                                $('input[name="CRMAddress"]').val(CRMCustomerList[0].Address);
                                                $('input[name="CRMCity"]').val(CRMCustomerList[0].City);
                                                $('input[name="CRMState"]').val(CRMCustomerList[0].State);
                                                $('input[name="CRMZipCode"]').val(CRMCustomerList[0].ZipCode);
                                                $('input[name="CRMEmail"]').val(CRMCustomerList[0].Email);

                                                if (response.customerinfo.length > 1) {
                                                    $("#CRMArrows").removeClass("hidden");
                                                }

                                                $('#ProspectCustomer').modal('show');
                                            } else {

                                            }
                                        });
                                }
                            }
                        }
                    },
                });
            }

        }

        $('#CRMRight').click(function () {
            if (CRMCustomerListIndex == CRMCustomerList.length - 1) {
                CRMCustomerListIndex = 0;
            } else {
                CRMCustomerListIndex = CRMCustomerListIndex + 1;
            }
            $('input[name="CRMName"]').val(CRMCustomerList[CRMCustomerListIndex].Name);
            $('input[name="CRMMiddleName"]').val(CRMCustomerList[CRMCustomerListIndex].MiddleName);
            $('input[name="CRMLastName"]').val(CRMCustomerList[CRMCustomerListIndex].LastName);
            $('input[name="CRMPhone"]').val(CRMCustomerList[CRMCustomerListIndex].Phone);
            $('input[name="CRMAddress"]').val(CRMCustomerList[CRMCustomerListIndex].Address);
            $('input[name="CRMCity"]').val(CRMCustomerList[CRMCustomerListIndex].City);
            $('input[name="CRMState"]').val(CRMCustomerList[CRMCustomerListIndex].State);
            $('input[name="CRMZipCode"]').val(CRMCustomerList[CRMCustomerListIndex].ZipCode);
            $('input[name="CRMEmail"]').val(CRMCustomerList[CRMCustomerListIndex].Email);

        });

        $('#CRMLeft').click(function () {
            if (CRMCustomerListIndex == 0) {
                CRMCustomerListIndex = CRMCustomerList.length - 1;
            } else {
                CRMCustomerListIndex = CRMCustomerListIndex - 1;
            }
            $('input[name="CRMName"]').val(CRMCustomerList[CRMCustomerListIndex].Name);
            $('input[name="CRMMiddleName"]').val(CRMCustomerList[CRMCustomerListIndex].MiddleName);
            $('input[name="CRMLastName"]').val(CRMCustomerList[CRMCustomerListIndex].LastName);
            $('input[name="CRMPhone"]').val(CRMCustomerList[CRMCustomerListIndex].Phone);
            $('input[name="CRMAddress"]').val(CRMCustomerList[CRMCustomerListIndex].Address);
            $('input[name="CRMCity"]').val(CRMCustomerList[CRMCustomerListIndex].City);
            $('input[name="CRMState"]').val(CRMCustomerList[CRMCustomerListIndex].State);
            $('input[name="CRMZipCode"]').val(CRMCustomerList[CRMCustomerListIndex].ZipCode);
            $('input[name="CRMEmail"]').val(CRMCustomerList[CRMCustomerListIndex].Email);

        });

        $('#SetCRMCustomerInfo').click(function () {
            SearchBusiness(CRMCustomerList[CRMCustomerListIndex].Id);

            $('#ProspectCustomer').modal('hide');

        });


        function CertificateLabels(words, num, margin) {
            var label = '<div style=" width:593.3px; height:22.67px; display:grid; grid-template-columns: repeat(27, 1fr); padding-top:' + margin + 'px; padding:auto 0;margin-left:30px;">';
            var j = 0;
            var aux = 0;
            if (words == null && num == 27) {
                label = label + "</br>";
            }
            if (words != null)
                for (var i = 1; i <= 27; i++) {
                    if (i > num[j]) {
                        j++;
                        aux = 0;
                    }

                    if (!words[j] || 0 === words[j].length || /^\s*$/.test(words[j]) || !words[j].trim() || aux >= words[j].length) {
                        label = label + "<label style='width:15px; height:100%; margin: 0; padding:0;'>&#32</label>";
                    } else if (aux < words[j].length) {
                        var char = aux;
                        label = label + "<label style='width:15px;text-transform: uppercase; line-height: 23px; height:100%; text-align:center; margin:auto 0; padding: auto 0; font-size:14px !important; '>" + words[j][aux] + "</label>";
                        aux++;
                    }
                }
            label = label + "</div>"
            return label;
        }

        function DMV262() {
            var carId = $('input[name="TradeInModal[0].CardId"]').val();
            $.ajax({
                type: 'GET',
                url: "/AjaxDMV/getStoreReg262?CarId=" + carId,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response.success == true) {

                        $('div#DMV262Body').empty();

                        var name = $('input[name="Buyer2.Name"]').val() + " " + $('input[name="Buyer2.MiddleName"]').val() + " " + $('input[name="Buyer2.LastName"]').val();
                        var id = $('input[name="Buyer2.DriverLic_Number"]').val();
                        var address = $('input[name="Buyer2.Residence[0].Address.Address"]').val();
                        var city = $('input[name="Buyer2.Residence[0].Address.City"]').val();
                        var state = $('input[name="Buyer2.Residence[0].Address.State"]').val();
                        var zipcode = $('input[name="Buyer2.Residence[0].Address.ZIPCode"]').val();
                        var phoneC = $('input[name="Buyer2.Phone"]').val();
                        var date = $('input[name="ConDate2"]').val();
                        var datesold = $('input[name="SoldDate"]').val();


                        var miles = response.car.Miles;
                        var year = response.car.Year;
                        var make = response.car.Maker;
                        var license = response.car.LicenseNo;
                        var VIN = response.car.VIN;


                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr 2fr 2fr ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '<label style="text-align:right; margin-left:-3px;"></label>' +
                            '<label style="text-align:right; margin-left 15px;"></label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr 2fr 2fr ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '<label style="text-align:right; margin-left:-3px;"></label>' +
                            '<label style="text-align:right; margin-left 15px;"></label>' +
                            '</div >');

                        $('div#DMV262Body').append('<div style="width:630px; display:grid; grid-template-columns: 2fr 2fr 2fr 2fr 2fr ; margin: 35px 0 0 0;">' +
                            '<label style="text-align:left; ">' + VIN + '</label>' +
                            '<label style="text-align:center; margin-left:6px; ">' + year + '</label>' +
                            '<label style="text-align:left;">' + make + '</label>' +
                            '<label style="text-align:left; margin-left:0px !important;">' + license + '</label>' +
                            '<label></label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 4fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;">' + name + '</label></br>' +
                            '<label></label>' +
                            '<label></label>' +
                            '<label></label></br>' +
                            '<label style="text-transform: uppercase;">Lupitas Auto SAles Inc.</label>' +
                            '<label style="text-transform: uppercase; font-size:18px !important;">' + datesold + '</label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 4fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label></br>' +
                            '<label style="text-transform: uppercase;"></label></br>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 3fr 2fr 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style=" margin-left:12px;"></label>' +
                            '<label></label>' +
                            '<label style="text-align:right; margin-left:12px;"></label>' +
                            '<label style="text-align:center; margin-left 8px;"></label>' +
                            '<label style="text-align:right; margin-left 12px;"></label>' +
                            '</div >');

                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns:  5fr  2fr 1fr 1fr 28px 1fr   ; margin: 67px 0 0 0;">' +
                            '<label style="text-transform: uppercase;">Lupitas Auto Sales Inc.</label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '<label style="text-transform: uppercase;text-align:center; margin-left:0px !important;">' + datesold + '</label>' +
                            '<label></label>' +
                            '<label style="text-transform: uppercase;text-align:right;">49673</label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr 2fr ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label style="text-align:right; margin-left:12px;"></label>' +
                            '<label style="text-align:right; margin-left 12px;"></label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 3fr 2fr 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style=" margin-left:12px;">' + response.Store.Address + '</label>' +
                            '<label style="text-align:right; margin-left:12px;">' + response.Store.City + '</label>' +
                            '<label style="text-align:right; margin-left:12px;">' + response.Store.State + '</label>' +
                            '<label style="text-align:center; margin-left 8px;">' + response.Store.ZipCode + '</label>' +
                            '<label style="text-align:right; margin-left 12px;">' + response.Store.Phone + '</label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 5fr  2fr 1fr 1fr 28px 1fr   ; margin: 54px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '<label style="text-transform: uppercase;text-align:center;margin-left:0px !important; ">' + datesold + '</label>' +
                            '<label></label>' +
                            '<label style="text-transform: uppercase;text-align:right; "> ' + id + '</label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr 2fr ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label style="text-align:right; margin-left:12px;"></label>' +
                            '<label style="text-align:right; margin-left 12px;"></label>' +
                            '</div >');

                        //aqui
                        //aqui va
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 3fr 2fr 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style=" margin-left:12px;">' + address + '</label>' +
                            '<label style="text-align:right; margin-left:12px;">' + city + '</label>' +
                            '<label style="text-align:right; margin-left:12px;">' + state + '</label>' +
                            '<label style="text-align:center; margin-left 8px;">' + zipcode + '</label>' +
                            '<label style="text-align:right; margin-left 12px;">' + phoneC + '</label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 3fr 3fr   ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;text-align:center;">' + name + '</label>' +
                            '<label style="text-align:right; margin-left 12px; text-transform: uppercase;">Lupitas Auto Sales Inc.</label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '<label style="text-align:right; margin-left 12px;">' + datesold + '</label>' +
                            '</div >');



                        //Open print tab
                        swal.close();
                        var style = "<style>#DMV262Body{ *width: 680px;height: 771px;margin: 0;padding: 0 0 0 84.41px; background-position: center center; background-size: cover;align-items: center; font-size:14px; font-weight: bold;}</style>"
                        $('div#DMV262Body').append(style);
                        var contenido = document.getElementById('DMV262div');
                        var ventana = window.open('', "blank_");
                        ventana.document.body.style.fontFamily = 'open sans';
                        ventana.document.body.innerHTML = contenido.innerHTML;
                        ventana.window.print();
                        ventana.window.focus();
                        ventana.window.close();

                    }
                },//success

            });

        }
        function DMV262SinTradeIn() {
            $.ajax({
                type: 'GET',
                url: "/AjaxDMV/getStoreReg262St",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response.success == true) {

                        $('div#DMV262Body').empty();

                        var name = $('input[name="Buyer2.Name"]').val() + " " + $('input[name="Buyer2.MiddleName"]').val() + " " + $('input[name="Buyer2.LastName"]').val();
                        var id = $('input[name="Buyer2.DriverLic_Number"]').val();
                        var address = $('input[name="Buyer2.Residence[0].Address.Address"]').val();
                        var city = $('input[name="Buyer2.Residence[0].Address.City"]').val();
                        var state = $('input[name="Buyer2.Residence[0].Address.State"]').val();
                        var zipcode = $('input[name="Buyer2.Residence[0].Address.ZIPCode"]').val();
                        var phoneC = $('input[name="Buyer2.Phone"]').val();
                        var date = $('input[name="ConDate2"]').val();
                        var datesold = $('input[name="SoldDate"]').val();


                        var miles = $('input[name="Vehicle.Miles"]').val();
                        var year = $('input[name="Vehicle.Year"]').val();
                        var make = $('input[name="Vehicle.Make"]').val();
                        var license = $('input[name="Vehicle.LicenseNo"]').val();
                        var VIN = $('input[name="Vehicle.VIN"]').val();


                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr 2fr 2fr ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '<label style="text-align:right; margin-left:-3px;"></label>' +
                            '<label style="text-align:right; margin-left 15px;"></label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr 2fr 2fr ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '<label style="text-align:right; margin-left:-3px;"></label>' +
                            '<label style="text-align:right; margin-left 15px;"></label>' +
                            '</div >');

                        $('div#DMV262Body').append('<div style="width:630px; display:grid; grid-template-columns: 2fr 2fr 2fr 2fr 2fr ; margin: 35px 0 0 0;">' +
                            '<label style="text-align:left; ">' + VIN + '</label>' +
                            '<label style="text-align:center; margin-left:6px; ">' + year + '</label>' +
                            '<label style="text-align:left;">' + make + '</label>' +
                            '<label style="text-align:left; margin-left:0px !important;">' + license + '</label>' +
                            '<label></label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 4fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;">Lupitas Auto SAles Inc.</label></br>' +
                            '<label></label>' +
                            '<label></label>' +
                            '<label></label></br>' +
                            '<label style="text-transform: uppercase;">' + name + '</label>' +
                            '<label style="text-transform: uppercase; font-size:18px !important;">' + datesold + '</label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 4fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label></br>' +
                            '<label style="text-transform: uppercase;"></label></br>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 3fr 2fr 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style=" margin-left:12px;"></label>' +
                            '<label></label>' +
                            '<label style="text-align:right; margin-left:12px;"></label>' +
                            '<label style="text-align:center; margin-left 8px;"></label>' +
                            '<label style="text-align:right; margin-left 12px;"></label>' +
                            '</div >');

                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '</div >');

                        //aqui
                        //aqui va
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 5fr  2fr 1fr 1fr 28px 1fr   ; margin: 54px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '<label style="text-transform: uppercase;text-align:center;margin-left:0px !important; ">' + datesold + '</label>' +
                            '<label></label>' +
                            '<label style="text-transform: uppercase;text-align:right; "> ' + id + '</label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr 2fr ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label style="text-align:right; margin-left:12px;"></label>' +
                            '<label style="text-align:right; margin-left 12px;"></label>' +
                            '</div >');

                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 3fr 2fr 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style=" margin-left:12px;">' + address + '</label>' +
                            '<label style="text-align:right; margin-left:12px;">' + city + '</label>' +
                            '<label style="text-align:right; margin-left:12px;">' + state + '</label>' +
                            '<label style="text-align:center; margin-left 8px;">' + zipcode + '</label>' +
                            '<label style="text-align:right; margin-left 12px;">' + phoneC + '</label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns:  5fr  2fr 1fr 1fr 28px 1fr   ; margin: 67px 0 0 0;">' +
                            '<label style="text-transform: uppercase;">Lupitas Auto Sales Inc.</label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '<label style="text-transform: uppercase;text-align:center; margin-left:0px !important;">' + datesold + '</label>' +
                            '<label></label>' +
                            '<label style="text-transform: uppercase;text-align:right;">49673</label>' +
                            '</div >');
                        //aqui
                        //aqui va

                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr 2fr ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label style="text-align:right; margin-left:12px;"></label>' +
                            '<label style="text-align:right; margin-left 12px;"></label>' +
                            '</div >');


                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 3fr 2fr 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style=" margin-left:12px;">' + response.Store.Address + '</label>' +
                            '<label style="text-align:right; margin-left:12px;">' + response.Store.City + '</label>' +
                            '<label style="text-align:right; margin-left:12px;">' + response.Store.State + '</label>' +
                            '<label style="text-align:center; margin-left 8px;">' + response.Store.ZipCode + '</label>' +
                            '<label style="text-align:right; margin-left 12px;">' + response.Store.Phone + '</label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 3fr 3fr   ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;text-align:center;">' + name + '</label>' +
                            '<label style="text-align:right; margin-left 12px; text-transform: uppercase;">Lupitas Auto Sales Inc.</label>' +
                            '</div >');
                        $('div#DMV262Body').append('<div style="width:593.3px; display:grid; grid-template-columns: 2fr 2fr 2fr 2fr  ; margin: 40px 0 0 0;">' +
                            '<label style="text-transform: uppercase;"></label>' +
                            '<label></label>' +
                            '<label></label>' +
                            '<label style="text-align:right; margin-left 12px;">' + datesold + '</label>' +
                            '</div >');

                        //Open print tab
                        swal.close();
                        var style = "<style>#DMV262Body{ *width: 680px;height: 771px;margin: 0;padding: 0 0 0 84.41px; background-position: center center; background-size: cover;align-items: center; font-size:14px; font-weight: bold;}</style>"
                        $('div#DMV262Body').append(style);
                        var contenido = document.getElementById('DMV262div');
                        var ventana = window.open('', "blank_");
                        ventana.document.body.style.fontFamily = 'open sans';
                        ventana.document.body.innerHTML = contenido.innerHTML;
                        ventana.window.print();
                        ventana.window.focus();
                        ventana.window.close();

                    }
                },//success

            });

        }
        function addMonths(date, months) {
            var d = date.getDate();
            date.setMonth(date.getMonth() + +months);
            if (date.getDate() != d) {
                date.setDate(0);
            }
            return date;
        }
    </script>
}
