@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "Weekly Schedule";
    var IsEmployee = ViewBag.SalesAuth.ScheduleWeek == 1 ? false : true;

}
@section Styles{
    <!--Calendar multi range  https://www.jqueryscript.net/time-clock/Date-Range-Picker-For-Twitter-Bootstrap.html-->
    <link rel="stylesheet" href="~/Elements/css/FrameworkLupitas/daterangepicker.css" />
    <!--Calendar multi range-->
    <link href="~/Elements/plugins/blueimp/css/blueimp-gallery.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <link href="~/Elements/css/FrameworkLupitas/framework_lupitas.css" rel="stylesheet" />
    <style>
        .swal2-container, .datepicker {
            z-index: 9999 !important;
        }

        .datepicker-days {
            display: block !important;
        }
    </style>

}
<div class="mt-lp-5 mx-lp-0 container-main-lp-100 bg-blue-lp-3" id="TaskManager">

    <a class="button-float-lp" id="requestpendings">
        <span class="button-float-lp__content"> <i class="fas fa-info mt-lp-2 tc-black-lp"></i></span>
        <span class="button-float-lp__badge" id="pending-number">0</span>
    </a>


    <div class=" py-lp-1 px-lp-025 grid-lp col-lp-3 col-md-lp gap-lp-0 ">
        <div class="span-lp"></div>

        <div class="span-lp pl-lp-1 ts-lp-2 tw-bold-lp center-lp" id="titlePage">
            SCHEDULE
        </div>
        @if (ViewBag.SalesAuth.ScheduleWeek == 1)
        {
            <div class="span-lp">
                <div class="flex-lp justify-content--center">

                    <select class="input-lp  centery-lp mr-lp-1" id="employees">
                        <option>Select a Employee</option>
                    </select>
                   
                </div>
       
            </div>
        }
    </div>
    <div class="px-lp-025 grid-lp col-lp-2 col-md-lp-3 gap-lp-0">
        @if (ViewBag.SalesAuth.ScheduleWeek == 1)
        {
            <div class="span-lp"></div>
            <div class="span-lp right-lp">
                <a  id="ModalSaveActiveForeman" class="button-lp a-white-lp button-lp--secondary button-lp--md button-lp__container">Virtual Assitant</a>
              
            </div>
          

        }
    </div>
    <div class="tabs ">
        <ul class="tabs__list ">
            <li class="tabs__item tabs__item--active">
                <a class="tabs__link tw-bold-lp" href="#"> My schedule</a>
            </li>
            @if (ViewBag.SalesAuth.ScheduleWeek == 1)
            {
                <li class="tabs__item tabs__item-no-tab tabs__item-no-tab-function">
                    <a class=" a-lp tabs__link " id="addTaskModalButton" data-target="addTaskModal">
                        <img src="~/Elements/gallery/addtask.png" class="no-padding" style="width:30px; height:30px">
                    </a>
                </li>
            }

                <li class="tabs__item">
                    <a class="tabs__link tw-bold-lp" href="#">PTO</a>
                </li>
                @if (ViewBag.SalesAuth.ScheduleWeek == 1)
                {
                    <li class="tabs__item">
                        <a class="tabs__link tw-bold-lp" href="#">Shift Swapping</a>
                    </li>
                    <li class="tabs__item">
                        <a class="tabs__link tw-bold-lp" href="#">Schedule Details</a>
                    </li>
                    <li class="tabs__item">
                        <a class="tabs__link tw-bold-lp" href="#">Performance Report</a>
                    </li>
                }

            </ul>
        <div class="tabs__content">
            <div class="tabs__section tabs__section--active" data-index="0">
                <div class="grid-lp col-lp-7 col-md-lp" id="scheduleContainer">
                    <div class="span-lp" id="SUNContainer">
                        <div class="card-lp span-lp w-lp-100 mt-lp-05 mx-lp-auto " id="SUNParent">
                            <div class="card-lp__body ts-lp-125 tw-normal-lp  tw-bold-lp center-lp h-lp-35 justify-content--center flex-lp align-items--center flex-direction-col-r-lp" id="SUN">Sunday </div>
                            <button type="button" id="showSUN" class="button-lp button-lp--mn py-lp-05" style="
                                display: inline-block;
                                float: right;
                                position: relative;
                                top: -35px;
                            ">
                                <i class="fas fa-bars tc-black-lp" aria-hidden="true"></i>
                            </button>
                        </div>
                        <div id="activitiesSUN" class="">
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN1"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN2"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN3"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN4"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN5"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN6"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN7"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN8"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN9"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN10"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN11"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN12"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN13"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN14"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN15"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN16"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN17"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN18"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN19"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN20"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SUN21"></div>
                            </div>
                        </div>

                    </div>
                    <div class="span-lp" id="MONContainer">
                        <div class="card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto " id="MONParent">
                            <div class="card-lp__body ts-lp-125 tw-normal-lp  tw-bold-lp center-lp h-lp-35 justify-content--center flex-lp align-items--center flex-direction-col-r-lp" id="MON">Monday </div>
                            <button id="showMON" class="button-lp button-lp--mn py-lp-05 " style="
                                display: inline-block;
                                float: right;
                                position: relative;
                                top: -35px;
                            ">
                                <i class="fas fa-bars tc-black-lp" aria-hidden="true"></i>
                            </button>
                        </div>
                        <div id="activitiesMON" class="">
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON1"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON2"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON3"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON4"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON5"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON6"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON7"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON8"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON9"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON10"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON11"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON12"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON13"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON14"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON15"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON16"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON17"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON18"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON19"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON20"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="MON21"></div>
                            </div>
                        </div>

                    </div>
                    <div class="span-lp" id="TUEContainer">
                        <div class="card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto ">
                            <div class="card-lp__body ts-lp-125 tw-normal-lp  tw-bold-lp h-lp-35 center-lp justify-content--center flex-lp align-items--center flex-direction-col-r-lp" id="TUE">Tuesday </div>
                            <button type="button" id="showTUE" class="button-lp button-lp--mn py-lp-05 " style="
                                display: inline-block;
                                float: right;
                                position: relative;
                                top: -35px;
                            ">
                                <i class="fas fa-bars tc-black-lp" aria-hidden="true"></i>
                            </button>
                        </div>
                        <div id="activitiesTUE" class="">
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE1"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE2"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE3"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE4"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE5"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE6"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE7"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE8"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE9"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE10"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE11"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE12"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE13"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE14"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE15"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE16"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE17"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE18"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE19"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE20"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="TUE21"></div>
                            </div>
                        </div>
                    </div>
                    <div class="span-lp" id="WEDContainer">
                        <div class="card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto ">
                            <div class="card-lp__body ts-lp-125 tw-normal-lp  tw-bold-lp center-lp h-lp-35 justify-content--center flex-lp align-items--center flex-direction-col-r-lp" id="WED">Wednesday </div>
                            <button type="button" id="showWED" class="button-lp button-lp--mn py-lp-05 " style="
                                display: inline-block;
                                float: right;
                                position: relative;
                                top: -35px;
                            ">
                                <i class="fas fa-bars tc-black-lp" aria-hidden="true"></i>
                            </button>
                        </div>
                        <div id="activitiesWED">
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED1"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED2"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED3"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED4"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED5"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED6"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED7"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED8"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED9"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED10"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED11"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED12"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED13"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED14"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED15"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED16"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED17"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED18"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED19"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED20"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="WED21"></div>
                            </div>
                        </div>

                    </div>
                    <div class="span-lp" id="THUContainer">
                        <div class="card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto ">
                            <div class="card-lp__body ts-lp-125 tw-normal-lp  tw-bold-lp center-lp h-lp-35 justify-content--center flex-lp align-items--center flex-direction-col-r-lp" id="THU">Thursday </div>
                            <button type="button" id="showTHU" class="button-lp button-lp--mn py-lp-05  " style="
                                display: inline-block;
                                float: right;
                                position: relative;
                                top: -35px;
                            ">
                                <i class="fas fa-bars tc-black-lp" aria-hidden="true"></i>
                            </button>
                        </div>
                        <div id="activitiesTHU">
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU1"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU2"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU3"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU4"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU5"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU6"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU7"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU8"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU9"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU10"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU11"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU12"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU13"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU14"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU15"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU16"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU17"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU18"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU19"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU20"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="THU21"></div>
                            </div>
                        </div>

                    </div>
                    <div class="span-lp" id="FRIContainer">
                        <div class="card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto ">
                            <div class="card-lp__body ts-lp-125 tw-normal-lp  tw-bold-lp center-lp h-lp-35 justify-content--center flex-lp align-items--center flex-direction-col-r-lp" id="FRI">Friday </div>
                            <button type="button" id="showFRI" class="button-lp button-lp--mn py-lp-05 " style="
                                display: inline-block;
                                float: right;
                                position: relative;
                                top: -35px;
                            ">
                                <i class="fas fa-bars tc-black-lp" aria-hidden="true"></i>
                            </button>
                        </div>
                        <div id="activitiesFRI">
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI1"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI2"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI3"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI4"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI5"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI6"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI7"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI8"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI9"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI10"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI11"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI12"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI13"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI14"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI15"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI16"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI17"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI18"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI19"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI20"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="FRI21"></div>
                            </div>
                        </div>

                    </div>
                    <div class="span-lp" id="SATContainer">
                        <div class="card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto ">
                            <div class="card-lp__body ts-lp-125 tw-normal-lp  tw-bold-lp center-lp justify-content--center flex-lp align-items--center flex-direction-col-r-lp h-lp-35" id="SAT">Saturday </div>
                            <button type="button" id="showSAT" class="button-lp button-lp--mn py-lp-05 " style="
                                display: inline-block;
                                float: right;
                                position: relative;
                                top: -35px;
                            ">
                                <i class="fas fa-bars tc-black-lp" aria-hidden="true"></i>
                            </button>
                        </div>
                        <div id="activitiesSAT">
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT1"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT2"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT3"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT4"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT5"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT6"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT7"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT8"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT9"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT10"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT11"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT12"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT13"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT14"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT15"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT16"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT17"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT18"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT19"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT20"></div>
                            </div>
                            <div class="bg-grey-lp card-lp span-lp  w-lp-100 mt-lp-05 mx-lp-auto tooltip-lp context-menu-one h-lp-6">
                                <div class="card-lp__body ts-lp-125 tw-normal-lp  center-lp" id="SAT21"></div>
                            </div>
                        </div>

                    </div>
                </div>


            </div>
            @Html.Partial("_ScheduleTabPTO")
            <div class="tabs__section" data-index="2">
                <div class="grid-lp col-lp col-md-lp">
                    <div class="span-lp">
                        <div class=" bg-secondary-lp card-lp py-lp-025 ">
                            <div class="tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp bcb-white-lp">Swapping Days Requests</div>
                            <div class="grid-lp col-lp-2">
                                @if (IsEmployee)
                                {
                                    <div class="span-lp tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">My Requests</div>
                                }
                                else
                                {
                                    <div class="span-lp tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">Employee Requests</div>
                                }
                                @if (!IsEmployee)
                                {
                                    <div class="span-lp tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">My Requests</div>
                                }
                                else
                                {
                                    <div class="span-lp tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">Administrator Requests</div>
                                }
                            </div>

                        </div>
                        <div class="grid-lp col-lp-2">
                            <div class="span-lp overflow-y-lp" id="historyChangeDay">

                            </div>
                            <div class="span-lp overflow-y-lp" id="historyChangeDayAdmon">

                            </div>
                        </div>

                    </div>


                </div>
            </div>
            <div class="tabs__section" data-index="3">
                <div class="flex-lp my-lp-15 w-lp-100  center-lp">

                    <div class="card-lp   mr-lp-05 mt-lp-05 flex-grow-lp-1">

                        <div class="card-lp__body ts-lp-125 tw-normal-lp ">
                            <div>
                                <div class="flex-lp flex-direction-row-lp justify-content--space-between h3-lp tc-black-lp tw-bold-lp">
                                    @if (User.IsInRole("Administrator"))
                                    {
                                        <p class="centery-lp ts-lp-2   tw-bold-lp">
                                            Employee's Weekly Report
                                        </p>
                                    }
                                    else
                                    {
                                        <p class="centery-lp ts-lp-2   tw-bold-lp">
                                            My Weekly Report
                                        </p>
                                    }
                                    <span class="ts-lp-2" id="progress-rank-week">0/0</span>
                                </div>
                                <progress class="progress progress--background pb-lp-0 mb-lp-0" id="progress-week" max="0" value="0">  </progress>
                                <div class="flex-lp flex-direction-row-lp justify-content--space-between h3-lp tc-black-lp tw-bold-lp">
                                    <div class="flex-lp"><span class="bg-danger-lp w-lp-10 status-mark-relative"></span><p class="tc-danger-lp pl-lp-05" id="undone-week"></p></div>
                                    <div class="flex-lp"><span class="bg-primary-lp w-lp-10 status-mark-relative"></span><p class="tc-primary-lp pl-lp-05" id="pending-week"></p></div>
                                    <div class="flex-lp"><span class="bg-secondary-lp w-lp-10 status-mark-relative"></span><p class="tc-secondary-lp pl-lp-05" id="done50-week"></p></div>
                                    <!--<div class="flex-lp"> <span class="bg-orange-lp w-lp-10 status-mark-relative"></span><p class="tc-orange-lp pl-lp-05" id="done100-week"></p></div>-->
                                    <div class="flex-lp"> <span class="bg-success-lp w-lp-10 status-mark-relative"></span><p class="tc-success-lp pl-lp-05" id="done-week"></p></div>


                                </div>

                            </div>
                            <div class="grid-lp col-lp-2">
                                <div class=" span-lp">
                                    <div class="">
                                        <p class="ts-lp-125 left-lp tw-bold-lp">Complete and Uncomplete task by day</p>
                                        <div class="  mb-lp-05">
                                            <div class="flex-lp justify-content--space-between">
                                                <div class="">
                                                    <p class="ts-lp-125">Weekly Complete Actions</p>
                                                    <p class="ts-lp-3" id="totalCompletedSchedule">50</p>
                                                </div>
                                                <div>
                                                    <p class="ts-lp-125">Weekly Uncomplete Actions</p>
                                                    <p class="ts-lp-3" id="totalUncompletedSchedule">50</p>
                                                </div>
                                                <div>
                                                    <p class="ts-lp-125">Weekly Advance</p>
                                                    <p class="ts-lp-3" id="totalAdvanceSchedule">50</p>
                                                </div>
                                            </div>
                                        </div>

                                        <canvas id="ScheduleReport"></canvas>
                                    </div>
                                </div>

                            </div>
                        </div>

                    </div>


                </div>
            </div>
            <div class="tabs__section" data-index="4">
                <div class="my-lp-15 w-lp-100  center-lp">
                    <div class="flex-lp flex-direction-row-r-lp h2-lp tc-black-lp tw-bold-lp">

                        <div class="flex-lp flex-direction-row-lp justify-content--space-between h3-lp tc-black-lp tw-bold-lp ml-lp-3">
                            <div class="flex-lp"><span class="bg-danger-lp w-lp-10 status-mark-relative mr-lp-1"></span><p class="tc-danger-lp pl-lp-0   pr-lp-1" id="undone-week-simple"></p></div>
                            <div class="flex-lp"><span class="bg-primary-lp w-lp-10 status-mark-relative mr-lp-1"></span><p class="tc-primary-lp pl-lp-0  pr-lp-1" id="pending-week-simple"></p></div>
                            <div class="flex-lp"><span class="bg-secondary-lp w-lp-10 status-mark-relative mr-lp-1"></span><p class="tc-secondary-lp pl-lp-0  pr-lp-1" id="done50-week-simple"></p></div>
                            <div class="flex-lp"> <span class="bg-success-lp w-lp-10 status-mark-relative mr-lp-1"></span><p class="tc-success-lp pl-lp-0  pr-lp-1" id="done-week-simple"></p></div>
                        </div>
                        <span class="pl-lp-3" id="progress-rank-week-simple">0/0</span>
                        <p class="pr-lp-1">Weekly Progress</p>

                    </div>
                    <ul class="tabs__list2">
                        <li class="tabs__item2 tabs__item--active2">
                            <a class="tabs__link tw-bold-lp" href="#">Daily</a>
                        </li>
                        <li class="tabs__item2">
                            <a class="tabs__link tw-bold-lp" href="#">Monthly</a>
                        </li>
                        <li class="tabs__item2">
                            <a class="tabs__link tw-bold-lp" href="#">Annual</a>
                        </li>
                    </ul>
                    <div class="tabs__content">
                        <div class="tabs__section2 tabs__section--active2" data-index2="0">
                            <div class="grid-lp gap-lp-05">
                                <div class="grid-lp col-lp-2 mt-lp-05">
                                    <div class="card-lp span-lp ">
                                        <div class="">
                                            <p class="ts-lp-125 left-lp tw-bold-lp">Today Performance</p>
                                            <div class="  mb-lp-05">
                                                <div class="flex-lp justify-content--space-between">
                                                    <div class="">
                                                        <p class="ts-lp-125">Today Total Actions</p>
                                                        <p class="ts-lp-3" id="totalCompleted">50</p>
                                                    </div>
                                                    <div>
                                                        <p class="ts-lp-125">Today Untotal Actions</p>
                                                        <p class="ts-lp-3" id="totalUncompleted">50</p>
                                                    </div>
                                                    <div>
                                                        <p class="ts-lp-125">Today Advance</p>
                                                        <p class="ts-lp-3" id="totalAdvance">50</p>
                                                    </div>
                                                </div>
                                            </div>

                                            <canvas id="TodayReport"></canvas>
                                        </div>
                                    </div>

                                </div>
                            </div>

                        </div>
                        <div class="tabs__section2 " data-index2="1">

                            <div class="grid-lp gap-lp-05">


                                <div class="grid-lp col-lp-2">

                                    <div class="span-lp mt-lp-05">
                                        <div class="card-lp">
                                            <p class="ts-lp-125 left-lp tw-bold-lp">Monthly Performance</p>
                                            <div class="  mb-lp-05 hidden-lp">
                                                <div class="flex-lp justify-content--space-between">
                                                    <div class="">
                                                        <p class="ts-lp-125">Monthly Total Actions</p>
                                                        <p class="ts-lp-3" id="totalCompletedMonth">50</p>
                                                    </div>
                                                    <div>
                                                        <p class="ts-lp-125">Monthly Untotal Actions</p>
                                                        <p class="ts-lp-3" id="totalUncompletedMonth">50</p>
                                                    </div>
                                                    <div>
                                                        <p class="ts-lp-125">Monthly Advance</p>
                                                        <p class="ts-lp-3" id="totalAdvanceMonth">50</p>
                                                    </div>
                                                </div>
                                            </div>

                                            <canvas id="MonthReport"></canvas>

                                        </div>
                                    </div>
                                    <div class=" span-lp grid-lp col-lp-2 mt-lp-05">
                                        <div class="card-lp span-lp">
                                            <p class="ts-lp-125 left-lp tw-bold-lp">Monthly Performance Details</p>
                                            <div class="mb-lp-05">
                                                <div class="">
                                                    <div class="flex-lp justify-content--space-between">
                                                        <p class="ts-lp-125">Tasks</p>
                                                        <p class="ts-lp-125"> Quantity</p>

                                                    </div>
                                                    <hr class="my-lp-0" />
                                                    <div class="flex-lp justify-content--space-between">
                                                        <div class="ts-lp-125 tw-bold-lp" id="taskMonth"></div>
                                                        <div class="ts-lp-125 tw-bold-lp" id="quantityMonth"></div>
                                                    </div>
                                                </div>
                                            </div>



                                        </div>

                                    </div>


                                </div>
                            </div>
                        </div>
                        <div class="tabs__section2 " data-index2="2">

                            <div class="grid-lp col-lp-2">
                                <div class="card-lp span-lp span-md-lp-3 mr-lp-05 mt-lp-05 ">
                                    <div class="">
                                        <p class="ts-lp-125 left-lp tw-bold-lp">Annual Performance</p>
                                        <canvas id="YearReport"></canvas>
                                    </div>
                                </div>
                                <div class=" span-lp grid-lp col-lp-2 mt-lp-05">
                                    <div class="card-lp span-lp">
                                        <p class="ts-lp-125 left-lp tw-bold-lp">Annual Performance</p>
                                        <div class="mb-lp-05">
                                            <div class="">
                                                <div class="flex-lp justify-content--space-between">
                                                    <p class="ts-lp-125">Best Month</p>
                                                    <p class="ts-lp-125">Worst Month</p>

                                                </div>
                                                <hr class="my-lp-0" />
                                                <div class="flex-lp justify-content--space-between">
                                                    <div class="ts-lp-125 tw-bold-lp" id="bestMonth"></div>
                                                    <div class="ts-lp-125 tw-bold-lp" id="worstMonth"></div>
                                                </div>
                                            </div>
                                        </div>



                                    </div>
                                    <div class="card-lp span-lp">
                                        <p class="ts-lp-125 left-lp tw-bold-lp">Monthly Performance</p>
                                        <div class="mb-lp-05">
                                            <div class="">
                                                <div class="flex-lp justify-content--space-between">
                                                    <p class="ts-lp-125">Tasks</p>
                                                    <p class="ts-lp-125"> Quantity</p>

                                                </div>
                                                <hr class="my-lp-0" />
                                                <div class="flex-lp justify-content--space-between">
                                                    <div class="ts-lp-125 tw-bold-lp" id="taskYear"></div>
                                                    <div class="ts-lp-125 tw-bold-lp" id="quantityYear"></div>
                                                </div>
                                            </div>
                                        </div>



                                    </div>
                                </div>




                            </div>
                        </div>
                    </div>





                </div>
            </div>

        </div>
    </div>
</div>
<div class="modal fade" id="addTaskModal" data-backdrop="static" data-keyboard="false" role="dialog">
    <input type="hidden" id="idTask" />
  
    <div class="modal-dialog w-md-lp-80 w-lp-70">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class=" grid-lp col-lp-3 col-md-lp  m-lp-1">
                <div class="span-lp"></div>
                <div class="span-lp centerxy-lp tw-bold-lp ts-lp-175"><div id="titleModalTask">hola</div></div>
                <div class="span-lp flex-direction-row-r-lp flex-lp">

                    <button type="button" class="button-lp button-lp--danger button-lp--md px-lp-1" id="closeModalAssigment">
                        X
                    </button>
                    <div class="flex-lp mr-lp-1">
                        <button type="button" name="EditTask" id="EditTask" class="hidden-lp button-lp button-lp--success button-lp--md button-lp__container mr-lp-05   hidden-lp"><strong>Save</strong></button>
                        <button type="button" name="DeleteTask" id="DeleteTask" class="button-lp button-lp--danger button-lp--md button-lp__container   hidden-lp"><strong>Delete</strong></button>
                        <button href="" class="button-lp button-lp--secondary button-lp--sm button-lp__container" id="ReseatTask" name="ReseatTask" style=""><i class="fas fa-redo-alt tc-white-lp" aria-hidden="true"></i></button>

                    </div>
                    <button type="button" name="SaveTask" id="SaveTask" class="hidden-lp button-lp button-lp--success  button-lp--md button-lp__container "><strong>Save</strong></button>


                </div>



            </div>

            <!-- Modal body -->

            <div class="" id="contentdiv">

                <div class="ibox-content" style="padding-top: 2px !important;">

                    <div class="row">
                        <div class="col-md-4"></div>
                        <div class="col-xs-12 col-md-12">
                            <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                                <div class="span-lp centery-lp justify-content--space-between">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-1">1.Location </div>
                                </div>
                                <div class="span-lp">
                                    <div class="grid-lp col-lp gap-lp-0">
                                        <div class="span-lp">
                                            <select name="storesTask" id="storesTask" class="input-lp tw-bold-lp">
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                                <div class="span-lp centery-lp justify-content--space-between">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-1">2. Assigment </div>

                                </div>
                                <div class="span-lp grid-lp col-lp-6 gap-lp-0">

                                    <input maxlength="30" class="span-lp-6 input-lp tw-bold-lp lh-lp py-lp-auto tt-uppercase-lp" name="titleTask" id="titleTask" placeholder="Title" data-toggle="tooltip"
                                           autocomplete="off" required />


                                </div>

                            </div>
                            <div id="typeTask">
                                <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                                    <div class="span-lp centery-lp justify-content--space-between">
                                        <div class="tc-black-lp tw-bold-lp ts-lp-1">3. Assigment Type  </div>

                                    </div>
                                    <div class="span-lp grid-lp col-lp gap-lp-0 bg-white-lp">

                                        <select name="typeTaskSelector" id="typeTaskSelector" class="span-lp input-lp">
                                            <option value="">Select Type</option>
                                            <option value="0">Recurrent</option>
                                            <option value="1">Non-Recurrent</option>
                                        </select>

                                    </div>

                                </div>

                                <div id="datesingletask" class="hidden-lp">
                                    <div class="grid-lp col-lp-2 gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05 " id="data_1">
                                        <div class="span-lp  centery-lp justify-content--space-between">
                                            <div class="tc-black-lp tw-bold-lp ts-lp-1">4. Assigment Date </div>
                                        </div>
                                        <div class="span-lp" id="dateTaskinput">
                                            <div class="grid-lp col-lp gap-lp-0">
                                                <div class="span-lp-4 input-group date">
                                                    <span class="input-group-addon bg-secondary-lp p-xxs fecha">
                                                        <i class="far fa-calendar-alt" aria-hidden="true"></i>
                                                    </span>
                                                    <input type="text" name="dateTask" id="dateTask" value="" class="form-control input-lp ts-lp-1" data-mask="99/99/9999" placeholder="mm/dd/yyyy">
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                                <div class="span-lp centery-lp justify-content--space-between">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-1">5. Days </div>
                                </div>
                                <div class="span-lp">
                                    <div class="grid-lp col-lp gap-lp-0">
                                        <div class="span-lp">
                                            <select name="dayTask" id="dayTask" class="input-lp tw-bold-lp">
                                                <option value="">Select Day</option>
                                                <option value="MON">Monday</option>
                                                <option value="TUE">Tuesday</option>
                                                <option value="WED">Wednesday</option>
                                                <option value="THU">Thursday</option>
                                                <option value="FRI">Friday</option>
                                                <option value="SAT">Saturday</option>
                                                <option value="SUN">Sunday</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                                <div class="span-lp centery-lp justify-content--space-between">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-1">6. Starts </div>
                                </div>
                                <div class="span-lp">
                                    <div class="grid-lp col-lp gap-lp-0">
                                        <div class="span-lp">
                                            <select name="startTask" id="startTask" class="input-lp tw-bold-lp">
                                                <option value="">Select Start Time</option>
                                                <option value="1">9:00 AM</option>
                                                <option value="2">9:30 AM</option>
                                                <option value="3">10:00 AM</option>
                                                <option value="4">10:30 AM</option>
                                                <option value="5">11:00 AM</option>
                                                <option value="6">11:30 AM</option>
                                                <option value="7">12:00 PM</option>
                                                <option value="8">12:30 PM</option>
                                                <option value="9">01:00 PM</option>
                                                <option value="10">01:30 PM</option>
                                                <option value="11">02:00 PM</option>
                                                <option value="12">02:30 PM</option>
                                                <option value="13">03:00 PM</option>
                                                <option value="14">03:30 PM</option>
                                                <option value="15">04:00 PM</option>
                                                <option value="16">04:30 PM</option>
                                                <option value="17">05:00 PM</option>
                                                <option value="18">05:30 PM</option>
                                                <option value="19">06:00 PM</option>
                                                <option value="20">06:30 PM</option>
                                                <option value="21">07:00 PM</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                                <div class="span-lp centery-lp justify-content--space-between">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-1">7. Ends</div>
                                </div>
                                <div class="span-lp">
                                    <div class="grid-lp col-lp gap-lp-0">
                                        <div class="span-lp">
                                            <select name="endTask" id="endTask" class="input-lp tw-bold-lp">
                                                <option value="">Select End Time</option>

                                                <option value="1">9:30 AM</option>
                                                <option value="2">10:00 AM</option>
                                                <option value="3">10:30 AM</option>
                                                <option value="4">11:00 AM</option>
                                                <option value="5">11:30 AM</option>
                                                <option value="6">12:00 PM</option>
                                                <option value="7">12:30 PM</option>
                                                <option value="8">01:00 PM</option>
                                                <option value="9">01:30 PM</option>
                                                <option value="10">02:00 PM</option>
                                                <option value="11">02:30 PM</option>
                                                <option value="12">03:00 PM</option>
                                                <option value="13">03:30 PM</option>
                                                <option value="14">04:00 PM</option>
                                                <option value="15">04:30 PM</option>
                                                <option value="16">05:00 PM</option>
                                                <option value="17">05:30 PM</option>
                                                <option value="18">06:00 PM</option>
                                                <option value="19">06:30 PM</option>
                                                <option value="20">07:00 PM</option>
                                                <option value="21">07:30 PM</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div id="statusTask">
                                <div class="span-lp bg-secondary-lp centerxy-lp card-lp py-lp-025">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">Assigment Status</div>
                                </div>
                                <div class="center-lp">
                                    <label class="pr-lp-2">
                                        <input type="radio" name="statustask" value="1"> Uncomplete
                                    </label>
                                    <label class="pr-lp-2">
                                        <input type="radio" name="statustask" value="2"> Pending Review
                                    </label>
                                    <label class="pr-lp-2">
                                        <input type="radio" name="statustask" value="3"> Below standards
                                    </label>

                                    <label class="pr-lp-2">
                                        <input type="radio" name="statustask" value="5"> Successfully completed
                                    </label>
                                </div>
                            </div>
                            <div class="grid-lp col-lp-3 col-md-lp gap-lp-0">
                                <div class="span-lp bcb-white-lp ">
                                    <div class="span-lp bg-secondary-lp card-lp py-lp-025">
                                        <div class="tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">1. Assigment Description</div>
                                    </div>
                                    <div class="span-lp">
                                        <textarea class="input-lp tw-bold-lp b-lp--bold tt-uppercase-lp" name="descTask" id="descTask" rows="10" placeholder="Notes" cols="50"></textarea>
                                    </div>
                                </div>
                                <div class="span-lp  bcb-white-lp ">
                                    <div class="span-lp bg-secondary-lp card-lp py-lp-025">
                                        <div class="tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">2. Employee's Comments</div>
                                    </div>
                                    <div class="span-lp">
                                        <textarea class="input-lp tw-bold-lp b-lp--bold tt-uppercase-lp" name="commentTask" id="commentTask" rows="10" placeholder="Notes" cols="50"></textarea>
                                    </div>
                                </div>
                                <div class="span-lp   bcb-white-lp ">
                                    <div class="span-lp bg-secondary-lp card-lp py-lp-025">
                                        <div class="tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">3.Management's Feedback</div>
                                    </div>
                                    <div class="span-lp">
                                        <textarea class="input-lp tw-bold-lp b-lp--bold tt-uppercase-lp" name="feedTask" id="feedTask" rows="10" placeholder="Notes" cols="50"></textarea>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
            </div>


        </div>
    </div>
</div>
<div class="modal fade" id="ForemanModal" data-backdrop="static" data-keyboard="false" role="dialog">
 
    <div class="modal-dialog w-md-lp-80 w-lp-70">
        <div class="modal-content">
            <!-- Modal Header -->
            <div class=" grid-lp col-lp-3 col-md-lp  m-lp-1">
                <div class="span-lp"></div>
                <div class="span-lp centerxy-lp tw-bold-lp ts-lp-175"><div id="">Virtual Foreman</div></div>
                <div class="span-lp flex-direction-row-r-lp flex-lp">

                    <button type="button" class="button-lp button-lp--danger button-lp--md px-lp-1" id="closeModalForeman">
                        X
                    </button>
                </div>



            </div>

            <!-- Modal body -->

            <div class="" id="contentdiv">

                <div class="ibox-content" style="padding-top: 2px !important;">

                    <div class="row">
                        <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                            <div class="span-lp centery-lp justify-content--space-between">
                                <div class="tc-black-lp tw-bold-lp ts-lp-1">1. Switching Virtual Assistant </div>
                            </div>
                            <div class="span-lp">
                                <div class="grid-lp col-lp gap-lp-0">
                                    <div class="span-lp">
                                        <select name="activeForeman" id="activeForeman" class="input-lp tw-bold-lp"><option value="0">Turn Off</option><option value="1">Turn On</option></select>
                                    </div>
                                </div>
                                <!--<div class="span-lp right-lp  hidden">
                <input type="checkbox" id="activeForeman" name="activeForeman">
                <label for="activeForeman" class=" ts-lp-125">Active Foreman</label>
            </div>-->
                            </div>
                        </div>
                        <div class="span-lp right-lp">
                            <button type="button" name="SaveActiveForeman" id="SaveActiveForeman" class="hidden-lp button-lp button-lp--success button-lp--md button-lp__container"><strong>Save</strong></button>
                        </div>

                        <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                            <div class="span-lp centery-lp justify-content--space-between">
                                <div class="tc-black-lp tw-bold-lp ts-lp-1">2. Select a Notifier </div>
                            </div>
                            <div class="span-lp bg-white-lp tc-black-lp pl-lp-1">
                                <div class="grid-lp col-lp-2 col-md-lp-2 ">
                                    @if (ViewBag.SubTitle == "CEO" || User.IsInRole("Administrator"))
                                    {

                                        <div class="span-lp ">
                                            <input type="checkbox" id="activeManager" name="activeManager">
                                            <label for="activeManager" class=" ts-lp-125">Active Store Manager</label>
                                        </div>
                                        <div class="span-lp ">
                                            <input type="checkbox" id="activeFinance" name="activeFinance">
                                            <label for="activeFinance" class=" ts-lp-125">Active Finance Manager</label>
                                        </div>
                                        <div class="span-lp">
                                            <input type="checkbox" id="activeAdmin" name="activeAdmin">
                                            <label for="activeAdmin" class=" ts-lp-125">Active General Manager</label>
                                        </div>
                                        <div class="span-lp">
                                            <input type="checkbox" id="activeMaster" name="activeMaster">
                                            <label for="activeMaster" class=" ts-lp-125">Active CEO</label>
                                        </div>
                                    }
                                </div>
                                <div class="grid-lp col-lp-2 col-md-lp-2 ">
                                    @if (ViewBag.SubTitle == "General Manager")
                                    {
                                        <div class="span-lp right-lp ">
                                            <input type="checkbox" id="activeManager" name="activeManager">
                                            <label for="activeManager" class=" ts-lp-125">Active Store Manager</label>
                                        </div>
                                        <div class="span-lp right-lp  ">
                                            <input type="checkbox" id="activeFinance" name="activeFinance">
                                            <label for="activeFinance" class=" ts-lp-125">Active Finance Manager</label>
                                        </div>
                                        <div class="span-lp right-lp ">
                                            <input type="checkbox" id="activeAdmin" name="activeAdmin">
                                            <label for="activeAdmin" class=" ts-lp-125">Active General Manager</label>
                                        </div>
                                    }
                                </div>
                                <div class="grid-lp col-lp-2 col-md-lp-2 ">
                                    @if (ViewBag.SubTitle == "Finance Manager")
                                    {


                                        <div class="span-lp right-lp ">
                                            <input type="checkbox" id="activeManager" name="activeManager">
                                            <label for="activeManager" class=" ts-lp-125">Active Manager</label>
                                        </div>
                                        <div class="span-lp right-lp  ">
                                            <input type="checkbox" id="activeFinance" name="activeFinance">
                                            <label for="activeFinance" class=" ts-lp-125">Active Finance Manager</label>
                                        </div>

                                    }
                                </div>
                                <div class="grid-lp col-lp">
                                    @if (ViewBag.SubTitle == "Store Manager")
                                    {
                                        <div class="span-lp right-lp ">
                                            <input type="checkbox" id="activeManager" name="activeManager">
                                            <label for="activeManager" class=" ts-lp-125">Active Manager</label>
                                        </div>

                                    }


                                </div>
                            </div>
                        </div>
                        

                    </div>

                </div>
            </div>


        </div>
    </div>
</div>


<div class="modal fade pl-lp-0" id="ChangeDay" data-backdrop="static" data-keyboard="false" role="dialog" style="z-index:9999 !important">

    <div class="modal-dialog w-md-lp-80 w-lp-70">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header ">
                <div class="centerxy-lp">
                    <h2 class="modal-title center-lp  tw-normal-lp ts-lp-175 w-fit-c-lp pr-lp-6 flex-grow-lp-1 " id="titleModalChangeDay"><strong>Shift Swapping Dashboard</strong></h2>
                </div>
                <div class="flex-lp flex-direction-row-r-lp">
                    <button type="button" name="SaveChangeDay" id="SaveChangeDay" class="hidden-lp button-lp button-lp--success  button-lp--md button-lp__container "><strong>Save</strong></button>
                    <button type="button" name="EditChangeDay" id="EditChangeDay" class="hidden-lp button-lp button-lp--success  button-lp--md button-lp__container "><strong>Save</strong></button>
                    <button type="button" class="ml-lp-05 button-lp button-lp--danger button-lp--md px-lp-1" id="closeModalChangeDay">
                        X
                    </button>
                    <button href="" class="button-lp button-lp--secondary button-lp--sm button-lp__container" id="ReseatChange" name="ReseatChange" style=""><i class="fas fa-redo-alt tc-white-lp" aria-hidden="true"></i></button>

                </div>
                <div class="flex-lp flex-direction-row-r-lp flex-direction-row-r-md-lp mt-lp-1" id="containerstatuschangeday">
                    <select class="input-lp ts-lp-1 w-lp-20 w-md-lp-50 tt-uppercase-lp" id="statuschangeday" name="statuschangeday">
                        <option value="0">Pending</option>
                        <option value="1">Aproved</option>
                        <option value="2">Decline</option>
                    </select>
                    <div class="tc-black-lp tw-bold-lp centery-lp">Status:</div>
                </div>
            </div>

            <!-- Modal body -->

            <div class="" id="contentdiv">

                <div class="ibox-content" style="padding-top: 2px !important;">

                    <div class="row">
                        <div class="col-md-4"></div>
                        <div class="col-xs-12 col-md-12">
                            <input type="hidden" name="idRequest" id="idRequest" value="" class=" input-lp ts-lp-1" />
                            <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                                <div class="span-lp centery-lp justify-content--space-between">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-1">1. I would like to swap </div>

                                </div>
                                <div class="span-lp grid-lp col-lp-6 gap-lp-0">
                                    <input class="span-lp-6 input-lp tw-bold-lp lh-lp py-lp-auto tt-uppercase-lp disabled-lp bg-disable-lp" name="Daytochange" id="Daytochange" required />
                                </div>

                            </div>


                            <div class="grid-lp col-lp-2 gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05" id="data_1">
                                <div class="span-lp  centery-lp justify-content--space-between">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-1">2. I'm willing to work in place</div>
                                </div>
                                <div class="span-lp">
                                    <div class="grid-lp col-lp gap-lp-0">
                                        <div class="span-lp-4 input-group date">
                                            <span class="input-group-addon bg-secondary-lp p-xxs fecha">
                                                <i class="far fa-calendar-alt"></i>
                                            </span>
                                            <input type="text" name="dateChange" id="dateChange" value="" class="form-control input-lp ts-lp-1" data-mask="99/99/9999" placeholder="mm/dd/yyyy" />
                                        </div>

                                    </div>
                                </div>
                            </div>



                            <div class="grid-lp col-lp gap-lp-0">
                                <div class="span-lp bcb-white-lp ">
                                    <div class="span-lp bg-secondary-lp card-lp py-lp-025">
                                        <div class="tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">1. Basis for swapping a shift</div>
                                    </div>
                                    <div class="span-lp">
                                        <textarea class="input-lp tw-bold-lp tt-uppercase-lp b-lp--bold " name="reasonchange" id="reasonchange" rows="10" placeholder="Notes" cols="50"></textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="grid-lp col-lp gap-lp-0" id="containercommentschange">
                                <div class="span-lp bcb-white-lp ">
                                    <div class="span-lp bg-secondary-lp card-lp py-lp-025">
                                        <div class="tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">2. Comments</div>
                                    </div>
                                    <div class="span-lp">
                                        <textarea class="input-lp tw-bold-lp tt-uppercase-lp b-lp--bold " name="commentschange" id="commentschange" rows="10" placeholder="Notes" cols="50"></textarea>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>
<div class="modal fade" id="ChangeDayDetails" data-backdrop="static" data-keyboard="false" role="dialog">

    <div class="modal-dialog w-md-lp-80 w-lp-70">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header flex-lp ">
                <h2 class="modal-title center-lp tw-normal-lp ts-lp-175 w-fit-c-lp pr-lp-6 flex-grow-lp-1 " id="titleModalChangeDay"><strong>Shift Swapping Details</strong></h2>

                <div class="flex-lp">
                    <button type="button" class="button-lp button-lp--danger button-lp--md px-lp-1" data-dismiss="modal">
                        X
                    </button>
                </div>



            </div>

            <!-- Modal body -->

            <div class="" id="contentdiv">

                <div class="ibox-content" style="padding-top: 2px !important;">

                    <div class="row">
                        <div class="col-md-4"></div>
                        <div class="col-xs-12 col-md-12">

                            <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                                <div class="span-lp centery-lp justify-content--space-between">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-1">1. Date I would like to swap </div>

                                </div>
                                <div class="span-lp grid-lp col-lp-6 gap-lp-0">
                                    <input class="span-lp-6 input-lp tw-bold-lp lh-lp py-lp-auto tt-uppercase-lp disabled-lp bg-disable-lp" name="DaytochangeDetails" id="DaytochangeDetails" required />
                                </div>

                            </div>
                            <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                                <div class="span-lp centery-lp justify-content--space-between">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-1">2. Day I'm willing to work in place </div>

                                </div>
                                <div class="span-lp grid-lp col-lp-6 gap-lp-0">
                                    <input class="span-lp-6 input-lp tw-bold-lp lh-lp py-lp-auto tt-uppercase-lp disabled-lp bg-disable-lp" name="DayChangedDetails" id="DayChangedDetails" required />
                                </div>

                            </div>


                            <div class="grid-lp col-lp-2 gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                                <div class="span-lp  centery-lp justify-content--space-between">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-1">3. Date I'm willing to work in place</div>
                                </div>
                                <div class="span-lp">
                                    <div class="grid-lp col-lp gap-lp-0">
                                        <div class="span-lp-4 input-group date">
                                            <span class="input-group-addon bg-secondary-lp p-xxs fecha">
                                                <i class="far fa-calendar-alt"></i>
                                            </span>
                                            <input type="text" name="dateChangeDetails" id="dateChangeDetails" value="" class="form-control input-lp ts-lp-1 disabled-lp bg-disable-lp" data-mask="99/99/9999" placeholder="mm/dd/yyyy" />
                                        </div>

                                    </div>
                                </div>
                            </div>



                            <div class="grid-lp col-lp gap-lp-0">
                                <div class="span-lp bcb-white-lp ">
                                    <div class="span-lp bg-secondary-lp card-lp py-lp-025">
                                        <div class="tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">1. Basis for swapping a shift</div>
                                    </div>
                                    <div class="span-lp">
                                        <textarea class="input-lp tw-bold-lp tt-uppercase-lp disabled-lp bg-disable-lp" name="reasonchangeDetails" id="reasonchangeDetails" rows="10" placeholder="" cols="50"></textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="grid-lp col-lp gap-lp-0">
                                <div class="span-lp bcb-white-lp ">
                                    <div class="span-lp bg-secondary-lp card-lp py-lp-025">
                                        <div class="tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">2. Comments</div>
                                    </div>
                                    <div class="span-lp">
                                        <textarea class="input-lp tw-bold-lp tt-uppercase-lp disabled-lp bg-disable-lp" name="commentschangeDetails" id="commentschangeDetails" rows="10" placeholder="" cols="50"></textarea>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>
<div class="modal fade" id="pending-request" data-backdrop="static" data-keyboard="false" role="dialog">

    <div class="modal-dialog w-md-lp-80 w-lp-70">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header flex-lp ">
                <h2 class="modal-title center-lp tw-normal-lp ts-lp-175 w-fit-c-lp pr-lp-6 flex-grow-lp-1 " id="titleModalChangeDay"><strong>Pending Requests</strong></h2>
                <div class="flex-lp">
                    <button type="button" class="button-lp button-lp--danger button-lp--md px-lp-1" data-dismiss="modal">
                        X
                    </button>
                </div>



            </div>

            <!-- Modal body -->

            <div class="" id="contentdiv">
                <div class="ibox-content" style="padding-top: 2px !important;">
                    <div class="grid-lp col-lp-2 col-md-lp">
                        <div class="span-lp">
                            <div class=" bg-secondary-lp card-lp py-lp-025 ">
                                <div class="tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp "> Requests for Swapping a Shift</div>
                            </div>
                            <div id="requestchangedaysList" class="overflow-y-lp bg-disable-lp">

                            </div>
                        </div>

                        <div>
                            <div class="span-lp bg-secondary-lp card-lp py-lp-025 ">
                                <div class="tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">Vacations Request</div>
                            </div>
                            <div id="requestvacationsList" class="overflow-y-lp">
                                <div class="card-lp">
                                    <div class="card-lp__title">Comming soon!!!</div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>

<div class="modal fade" id="PTODetails" data-backdrop="static" data-keyboard="false" role="dialog">

    <div class="modal-dialog w-md-lp-80 w-lp-70">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header flex-lp ">
                <h2 class="modal-title center-lp tw-normal-lp ts-lp-175 w-fit-c-lp pr-lp-6 flex-grow-lp-1 " id="titleModalChangeDay"><strong>Shift Swapping Details</strong></h2>

                <div class="flex-lp">
                    <button type="button" class="button-lp button-lp--danger button-lp--md px-lp-1" data-dismiss="modal">
                        X
                    </button>
                </div>



            </div>

            <!-- Modal body -->

            <div class="" id="contentdiv">

                <div class="ibox-content" style="padding-top: 2px !important;">

                    <div class="row">
                        <div class="col-md-4"></div>
                        <div class="col-xs-12 col-md-12">

                            <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                                <div class="span-lp centery-lp justify-content--space-between">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-1">1.Check Out and Check In Dates </div>
                                </div>
                                <div class="span-lp grid-lp gap-lp-0">

                                </div>

                            </div>
                            <div class="grid-lp col-lp-2  gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                                <div class="span-lp centery-lp justify-content--space-between">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-1">2. Day I'm willing to work in place </div>

                                </div>
                                <div class="span-lp grid-lp col-lp-6 gap-lp-0">
                                    <input class="span-lp-6 input-lp tw-bold-lp lh-lp py-lp-auto tt-uppercase-lp disabled-lp bg-disable-lp" name="DayChangedDetails" id="DayChangedDetails" required />
                                </div>

                            </div>


                            <div class="grid-lp col-lp-2 gap-lp-0 bcb-white-lp bg-primary-lp  pl-lp-05">
                                <div class="span-lp  centery-lp justify-content--space-between">
                                    <div class="tc-black-lp tw-bold-lp ts-lp-1">3. Date I'm willing to work in place</div>
                                </div>
                                <div class="span-lp">
                                    <div class="grid-lp col-lp gap-lp-0">
                                        <div class="span-lp-4 input-group date">
                                            <span class="input-group-addon bg-secondary-lp p-xxs fecha">
                                                <i class="far fa-calendar-alt"></i>
                                            </span>
                                            <input type="text" name="dateChangeDetails" id="dateChangeDetails" value="" class="form-control input-lp ts-lp-1 disabled-lp bg-disable-lp" data-mask="99/99/9999" placeholder="mm/dd/yyyy" />
                                        </div>

                                    </div>
                                </div>
                            </div>



                            <div class="grid-lp col-lp gap-lp-0">
                                <div class="span-lp bcb-white-lp ">
                                    <div class="span-lp bg-secondary-lp card-lp py-lp-025">
                                        <div class="tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">1. Basis for Paid Time Off</div>
                                    </div>
                                    <div class="span-lp">
                                        <textarea class="input-lp tw-bold-lp tt-uppercase-lp disabled-lp bg-disable-lp b-lp--bold" name="reasonchangeDetails" id="reasonchangeDetails" rows="10" placeholder="Notes" cols="50"></textarea>
                                    </div>
                                </div>
                            </div>

                            <div class="grid-lp col-lp gap-lp-0">
                                <div class="span-lp bcb-white-lp ">
                                    <div class="span-lp bg-secondary-lp card-lp py-lp-025">
                                        <div class="tc-black-lp tw-bold-lp ts-lp-125 tc-white-lp ">2. Comments</div>
                                    </div>
                                    <div class="span-lp">
                                        <textarea class="input-lp tw-bold-lp tt-uppercase-lp disabled-lp bg-disable-lp b-lp--bold" name="commentschangeDetails" id="commentschangeDetails" rows="10" placeholder="Notes" cols="50"></textarea>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>


        </div>
    </div>
</div>
@section scripts{

    <!--Calendar multi range-->
    <script src="~/Scripts/Material/moment.min.js"></script>
    <script src="~/Scripts/Material/daterangepicker.js"></script>
    <!--Calendar multi range-->
    <script src="~/LupScripts/plugins/pace/pace.min.js"></script>
    <script src="~/LupScripts/plugins/datatables/datatables.min.js"></script>
    <script src="~/LupScripts/myScripts.js"></script>
    <script src="~/Scripts/Material/framework_lupitas.js"></script>

    <script src="~/LupScripts/plugins/sweetalert2/sweetalert2.all.min.js"></script>
    <script src="https://kit.fontawesome.com/5242c5f78d.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        $(document).ready(() => {
        /*ACTIVE FOREMAN*/
            $('#ModalSaveActiveForeman').click(() => {
                $('#ForemanModal').modal('show');

            });
            $("#closeModalForeman").click(() => {
                $('#ForemanModal').modal('hide');
                $('#SaveActiveForeman').click();
            });

            $('#SaveActiveForeman').click(
                function () {
                    let UserId = $("#employees").val();
                    let WeekDay = {
                        1: "MON",
                        2: "TUE",
                        3: "WED",
                        4: "THU",
                        5: "FRI",
                        6: "SAT",
                        0: "SUN"
                    };
                    let date = new Date();

                    let time = `${date.getHours() < 10 ? "0" : ""}${date.getHours()}:${date.getMinutes() < 10 ? "0" : ""}${date.getMinutes()}`;
                    let isValid = false;
                    let activeForeman=$("#activeForeman").val()=="1"?1:0;
                    let activeCEO = `${$("#activeMaster").is(':checked') ? 1 : 0}`;
                    let activeGM=`${$("#activeAdmin").is(':checked') ? 1 : 0}`;
                    let activeFG = `${$("#activeFinance").is(':checked') ? 1 : 0}`;
                    let activeSM = `${$("#activeManager").is(':checked') ? 1 : 0}`;

                    if (UserId != "") {

                        if (@Html.Raw(Json.Encode(ViewBag.SubTitle))== "CEO" || '@User.IsInRole("Administrator")'=='True')
                        {
                            if (activeForeman == 1 && activeCEO == 0 && activeGM == 0 && activeFG == 0 && activeSM == 0)
                            {
                                Swal("Activate at least one chain of command (CEO, General Manager, Finance Manager or Store Manager) ", "", "info");
                            }
                            else {
                                isValid = true;
                            }
                        }
                        if (@Html.Raw(Json.Encode(ViewBag.SubTitle)) == "General Manager") {
                            if (activeForeman == 1 && activeGM == 0 && activeFG == 0 && activeSM == 0) {
                                Swal("Activate at least one chain of command (General Manager, Finance Manager or Store Manager) ", "", "info");
                            }
                            else {
                                isValid = true;
                            }
                        }
                        if (@Html.Raw(Json.Encode(ViewBag.SubTitle)) == "Finance Manager")
                        {
                            if (activeForeman == 1 && activeFG == 0 && activeSM == 0) {
                                Swal("Activate at least one chain of command (Finance Manager or Store Manager) ", "", "info");
                            }
                            else {
                                isValid = true;
                            }

                         }
                        if (@Html.Raw(Json.Encode(ViewBag.SubTitle)) == "Store Manager") {
                            if (activeForeman == 1 && activeSM == 0) {
                                Swal("Activate (Store Manager) to receive notifications ", "", "info");
                            }
                            else {
                                isValid = true;
                            }
                         }


                        if (isValid) {

                            swal({
                                title: `Swiching ${$("#activeForeman").is(':checked') ? "on" : "off"} Foreman...`,
                                text: '',
                                allowOutsideClick: false,
                                showConfirmButton: false,
                                onOpen: () => {
                                    $.ajax({
                                        type: 'GET',
                                        url: `/AJAXScheduleForeman/ActiveScheduleForeman?UserId=${UserId}&Time=${time}&WeekDay=${WeekDay[date.getDay()]}&active=${activeForeman}&manager=${$('#activeManager').is(':checked') ? 1 : 0}&finance=${$('#activeFinance').is(':checked') ? 1 : 0}&admin=${$('#activeAdmin').is(':checked') ? 1 : 0}&master=${$('#activeMaster').is(':checked') ? 1 : 0}`,
                                        contentType: "application/json; charset=utf-8",
                                        dataType: "json",
                                        success: function (response) {
                                            Swal.showLoading();
                                            if (response.success) {
                                                swal.close();
                                                Swal("Save", "", "info");
                                            }

                                        },//success

                                    });//$.ajax
                                }
                            });
                        }

                    }
                    else {
                        Swal("Select employee", "", "info");
                        $('#activeForeman').val("0");
                        $('#activeAdmin').prop("checked", false);
                        $('#activeManager').prop("checked", false);
                        $('#activeMaster').prop("checked", false);
                        $('#activeFinance').prop("checked", false);
                    }


                });

            $('#basic').daterangepicker({
                // The start of the initially selected date range
                startDate: moment().startOf('day'),
                // The end of the initially selected date range
                endDate: moment().endOf('day'),
                applyButtonClasses: 'button-lp--secondary a-white-lp',

            });
            $('#basic').on('apply.daterangepicker', function (ev, picker) {
                alert(unjobbledays.length);

            });

            $("#addPTO").click(() => {


                $("#ptoRequest").removeClass("hidden-lp");
                $("#savePTO").removeClass("hidden-lp");
                $("#addPTO").addClass("hidden-lp");
            });
            $("#savePTO").click(() => {
                $("#ptoRequest").addClass("hidden-lp");
                //assign those lines if the save is success
                $("#savePTO").addClass("hidden-lp");
                $("#addPTO").removeClass("hidden-lp");
            });
             /**
             * this menthod leds you save a request both administrator and employee
             **/
            $("#SaveChangeDay").click(() =>
            {
                let day = $('input[name="dateChange"]').val();
                let year = parseInt(`${day.split("/")[2]}`);
                let month = parseInt(`${day.split("/")[0]}`-1);
                let daymonth = parseInt(`${day.split("/")[1]}`);

                let daySelected = new Date(year, month, daymonth);
                let now = new Date();

                if (now < daySelected)
                {
                    let shortnameweek = daySelected.toLocaleString('en-us', { weekday: 'short' });

                    if (unjobbledays.find(item => item == shortnameweek.toUpperCase())) {


                        let formData = new FormData();
                        formData.append("day", $("#Daytochange").val());
                        formData.append("dayby", `(${daySelected.toLocaleString('en-us', { month: 'short' })}/${daySelected.getDate()})\t${shortnameweek} \t`);
                        formData.append("userid", ('@IsEmployee'== "True") ? CurrentUser:$("#employees").val());
                        formData.append("date", $('input[name="dateChange"]').val());
                        formData.append("reason", $("#reasonchange").val());

                        swal({
                            title: 'Sending Request...',
                            text: '',
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            onOpen: () => {
                                Swal.showLoading();
                                $.ajax({
                                    type: "POST",
                                    cache: false,
                                    contentType: false,
                                    processData: false,
                                    beforeSend: function () { },
                                    url:  ('@IsEmployee'== "True") ?"/AjaxChangeDay/AddEmployeeChangeDay":"/AjaxChangeDay/AddAdmonChangeDay",
                                    data: formData,
                                    error: function (e) {

                                        Swal("Error", "", "info");
                                    },
                                    success: function (response) {
                                        swal.close()
                                        if (response.success) {
                                            swal(response.message, "", "info");

                                        }
                                        else {
                                            swal(response.message,"","info");
                                        }
                                        $("#ChangeDay").modal('hide');

                                    },//success

                                });
                            }
                        });


                    }
                    else {
                        swal("Select a free day");

                    }
                }
                else {
                    swal("Select a day greater than now");
                }


            });
        });
    </script>
    <script>
        $(document).ready(function () {

        /***********************************************************************************************/
        /********************************   Change Day Requests     *******************************/
        /***********************************************************************************************/
            /**
             * Show the modal for pendiding request
             */


            $("#requestpendings").click(() => { $("#pending-request").modal('show'); });

            $("#closeModalChangeDay").click(() => {
                let day = $('input[name="dateChange"]').val();
                let year = parseInt(`${day.split("/")[2]}`);
                let month = parseInt(`${day.split("/")[0]}` - 1);
                let daymonth = parseInt(`${day.split("/")[1]}`);

                let daySelected = new Date(year, month, daymonth);
                let now = new Date();

                if (!$("#containercommentschange").hasClass("hidden-lp")) {
                    if ($("#statuschangeday").val() != "0" || $("#commentschange").val() != "") {
                        $("#EditChangeDay").click();
                    }
                    else {
                        $('#ChangeDay').modal('hide');
                    }
                }
                else {
                    if (now < daySelected || $("#reasonchange").val() != "") {
                        $("#SaveChangeDay").click();
                    }
                    else {
                        $('#ChangeDay').modal('hide');
                    }
                }
                //$('#ChangeDay').modal('hide');
            });
            /**
             * this menthod leds you save a request both administrator and employee
             **/
            $("#SaveChangeDay").click(() =>
            {
                let day = $('input[name="dateChange"]').val();
                let year = parseInt(`${day.split("/")[2]}`);
                let month = parseInt(`${day.split("/")[0]}`-1);
                let daymonth = parseInt(`${day.split("/")[1]}`);

                let daySelected = new Date(year, month, daymonth);
                let now = new Date();

                if (now < daySelected)
                {
                    let shortnameweek = daySelected.toLocaleString('en-us', { weekday: 'short' });

                    if (unjobbledays.find(item => item == shortnameweek.toUpperCase())) {


                        let formData = new FormData();
                        formData.append("day", $("#Daytochange").val());
                        formData.append("dayby", `(${daySelected.toLocaleString('en-us', { month: 'short' })}/${daySelected.getDate()})\t${shortnameweek} \t`);
                        formData.append("userid", ('@IsEmployee'== "True") ? CurrentUser:$("#employees").val());
                        formData.append("date", $('input[name="dateChange"]').val());
                        formData.append("reason", $("#reasonchange").val());

                        swal({
                            title: 'Sending Request...',
                            text: '',
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            onOpen: () => {
                                Swal.showLoading();
                                $.ajax({
                                    type: "POST",
                                    cache: false,
                                    contentType: false,
                                    processData: false,
                                    beforeSend: function () { },
                                    url:  ('@IsEmployee'== "True") ?"/AjaxChangeDay/AddEmployeeChangeDay":"/AjaxChangeDay/AddAdmonChangeDay",
                                    data: formData,
                                    error: function (e) {

                                        Swal("Error", "", "info");
                                    },
                                    success: function (response) {
                                        swal.close()
                                        if (response.success) {
                                            swal(response.message, "", "info");

                                        }
                                        else {
                                            swal(response.message,"","info");
                                        }
                                        $("#ChangeDay").modal('hide');

                                    },//success

                                });
                            }
                        });


                    }
                    else {
                        swal("Select a free day");

                    }
                }
                else {
                    swal("Select a day greater than now");
                }


            });
            /**
             * this menthod leds you edit a request both administrator and employee
             **/
            $("#EditChangeDay").click(() => {
                if ($("#commentschange").val() == "") {
                    $("#commentschange").addClass("validate-error-field-lp");
                    swal("Assign a Comment", "", "info");

                }
                else {
                    $("#commentschange").removeClass("validate-error-field-lp");
                }

                if ($("#statuschangeday").val() == "0") {
                    $("#statuschangeday").addClass("validate-error-field-lp");
                    swal("Aproved or Decline the request", "", "info");

                }
                else {
                    $("#statuschangeday").removeClass("validate-error-field-lp");
                }
                if ($("#commentschange").val() != "" && $("#statuschangeday").val() != "0") {
                    let formData = new FormData();
                    formData.append("idRequest", $("#idRequest").val());
                    formData.append("comment", $("#commentschange").val());
                    formData.append("status", $("#statuschangeday").val());
                    swal({
                        title: 'Saving Request...',
                        text: '',
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        onOpen: () => {
                            Swal.showLoading();
                            $.ajax({
                                type: "POST",
                                cache: false,
                                contentType: false,
                                processData: false,
                                beforeSend: function () { },
                                url: "/AjaxChangeDay/EditChangeDay",
                                data: formData,
                                error: function (e) {
                                    Swal("Error", "", "info");
                                },
                                success: function (response) {
                                    swal.close()
                                    if (response.success) {
                                        swal(response.message, "", "info");
                                        $("#ChangeDay").modal('hide');
                                        PendingRequest();
                                        showChangeDayHistory(('@IsEmployee' == "True") ? CurrentUser : $("#employees").val(), true);
                                        showChangeDayHistory(('@IsEmployee' == "True") ? CurrentUser : $("#employees").val(), false);
                                        $("#idRequest").val("");
                                        $("#commentschange").val("");
                                        $("#statuschangeday").val("");
                                        $("#Daytochange").val("");
                                    }
                                    else {
                                        swal(response.message, "", "info");
                                    }

                                },//success

                            });
                        }
                    });
                }

            });
            $("#ReseatChange").click(() => {
                Swal.fire({
                    title: 'Are you sure you want to lose changes?',
                    showCancelButton: true,
                    confirmButtonText: 'Keep editing',
                    confirmButtonColor: '#009688',
                    cancelButtonText: 'Discard changes',
                    cancelButtonColor: '#ff0000',
                }).then((result) => {
                    /* Read more about isConfirmed, isDenied below */
                    if (!result.value) {
                        $("#reasonchange").val("");
                        $("#dateChange").val("");

                        $("#ChangeDay").modal('hide');


                    }
                    else {



                    }
                })



            });

            /***********************************************************************************************/
            /********************************   Schedule an Details Code     *******************************/
            /***********************************************************************************************/
            /**
             * Save the date of the first day and end day of the current week
             * */
            const today = new Date();


            //  Get the first day of the current week (Sunday)
            const firstDay1 = new Date(today.setDate(today.getDate() - today.getDay()));

            const initDate = `${firstDay1.getMonth() + 1}/${firstDay1.getDate()}/${firstDay1.getFullYear()}`;

            //  Get the last day of the current week (Saturday)
            const lastDay1 = new Date(today.setDate(today.getDate() - today.getDay() + 6));
            const endDate = `${lastDay1.getMonth() + 1}/${lastDay1.getDate()}/${lastDay1.getFullYear()}`;


            /**
             * Contains the current UserId of whom log in;
             * */
            let CurrentUser = "@User.Identity.GetUserId()";
            /**
             * Contains a list of  activated employees in web site
             * */
            let employees = @Html.Raw(Json.Encode(ViewBag.employees));
            /**
             * Contains a list of current stores in web site
             * */
            let stores = @Html.Raw(Json.Encode(ViewBag.stores));

            /**
             * contains all current tasks of employee selected
             * */
            let tasks = [];
            /**
             * Checks if the current user is into employee list or not
             */
            isEmployee();

            /**
             * Check if is time to Reset the schedule or reset if now is monday and Reset value in table EmployeeResetEmployee is TRUE
             */
             resetSchedule(CurrentUser);

            /**
             * Fills the select with current employees
             */
            fillEmployees(employees);
            /**
             * Fills the select with current stores
             */
            fillStores(stores);
            /**
             * This dictionary contains the keys with values (using in select de current task) of the start time
             * */
            let dictHour = {
                1: "09:00 AM",
                2: "09:30 AM",
                3: "10:00 AM",
                4: "10:30 AM",
                5: "11:00 AM",
                6: "11:30 AM",
                7: "12:00 PM",
                8: "12:30 PM",
                9: "01:00 PM",
                10: "01:30 PM",
                11: "02:00 PM",
                12: "02:30 PM",
                13: "03:00 PM",
                14: "03:30 PM",
                15: "04:00 PM",
                16: "04:30 PM",
                17: "05:00 PM",
                18: "05:30 PM",
                19: "06:00 PM",
                20: "06:30 PM",
                21: "07:00 PM",
            };
            /**
            * This dictionary contains the keys with values (using in select de current task) of the end time
            * */
            let dictHourLast = {
                1: "09:30 AM",
                2: "10:00 AM",
                3: "10:30 AM",
                4: "11:00 AM",
                5: "11:30 AM",
                6: "12:00 PM",
                7: "12:30 PM",
                8: "01:00 PM",
                9: "01:30 PM",
                10: "02:00 PM",
                11: "02:30 PM",
                12: "03:00 PM",
                13: "03:30 PM",
                14: "04:00 PM",
                15: "04:30 PM",
                16: "05:00 PM",
                17: "05:30 PM",
                18: "06:00 PM",
                19: "06:30 PM",
                20: "07:00 PM",
                21: "07:30 PM",
            };
            /**
            * This dictionary contains the keys with values (using in select de current task) of the days of the month and
            * to avoid to show information of another days different to current
            * */
            let dayOfWeek = {
                "MON": 1,
                "TUE": 2,
                "WED": 3,
                "THU": 4,
                "FRI": 5,
                "SAT": 6,
                "SUN": 0
            };
            let dayOfWeekInv = {
                1:"MON",
                2:"TUE",
                3:"WED",
                4:"THU",
                5:"FRI",
                6:"SAT",
                0:"SUN"
            };
          



            /**
             * This Function Show the modal to add a new task only if you select a employee earlier

             */
            $('#addTaskModalButton').click(function () {
                $("#titleModalTask").text(" Add Assignment");
                if (validateEmployee()) {

                    showAndUnshow(false, null, false);

                    $('#addTaskModal').modal('show');
                }
            });




            /**
             * This function listen if the value selected into select change.
             * If it change then:
             *  1. Gets Information of employee from employee's list
             *  2. Validates if you select a employee of a list
             *  3. Assigns the title page
             *  4  Searches all task of employee selected and shows them
             *
             */
            $("#employees").change(function () {

                let employee = employees.find(item => {
                    return item.UserId == $(this).val();
                });

                let userId = $("#employees").val();
                if (validateEmployee())
                {
                    if (employee.Name.trim().toLowerCase().endsWith("s")) {
                        $("#titlePage").text(employee.Name.trim() + "' SCHEDULE")
                    }
                    else {
                        $("#titlePage").text(employee.Name.trim() + "'S SCHEDULE")
                    }
                    resetSchedule(userId);
                   // console.log({ initDate, endDate });
                    $.ajax({
                        type: 'GET',
                        url: "/AjaxEmployeeSchedule/showTasks?userId=" + userId + "&initDate=" + initDate + "&endDate=" + endDate,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {

                            if (response.success == true) {

                                if (response.tasks != null) {

                                    if (response.tasks.length > 0)
                                    {
                                        let changes = response.tasksDynamicChanges;
                                        cleanAllTask(tasks);
                                        tasks = [];
                                        if (changes.length > 0) {
                                            for (let i = 0; i < changes.length; i++) {
                                                tasks = response.tasks.filter(item => item.Day !== changes[i].DayChanged);
                                            }
                                        }
                                        else { tasks = response.tasks; }

                                        asignTask(tasks);
                                    } else {
                                        cleanAllTask(tasks);
                                        tasks = [];
                                        swal("No tasks has been assigned to " + employee.Name.trim() + " !", "", "info");
                                    }
                                    getPerformanceData(userId);//LoadPerformance
                                    loadAdvances(response.totalBDMonth, response.totalBDYear);

                                }


                            }

                        },//success

                    });//$.ajax
                    $.ajax({
                        type: 'GET',
                        url: "/AJAXScheduleForeman/GetStatusForeman?UserId=" + userId ,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {

                            if (response.success)
                            {
                                if (userId == CurrentUser || response.data.EmployeesModel.Subtitle=='@Html.Raw(Json.Encode(ViewBag.SubTitle))') {
                                    if (response.data.EmployeesModel.Subtitle!="Master") {
                                        $("#ModalSaveActiveForeman").addClass("hidden-lp");
                                    }
                                }
                                else { $("#ModalSaveActiveForeman").removeClass("hidden-lp"); }
                                if (response.message == "") {
                                    //check box assign status

                                    if (response.data.sc.IsActive == 1) {
                                        $('#activeForeman').val("1");
                                    }
                                    else {
                                        $('#activeForeman').val("0");
                                       // alert(false);
                                    }
                                    if (response.data.sc.IsActiveAdmin == 1) {
                                        $('#activeAdmin').prop("checked", true);
                                    }
                                    else {
                                        $('#activeAdmin').prop("checked", false);
                                        // alert(false);
                                    }
                                    if (response.data.sc.IsActiveManager == 1) {
                                        $('#activeManager').prop("checked", true);
                                    }
                                    else {
                                        $('#activeManager').prop("checked", false);
                                        // alert(false);
                                    }
                                    if (response.data.sc.IsActiveMaster == 1) {
                                        $('#activeMaster').prop("checked", true);
                                    }
                                    else {
                                        $('#activeMaster').prop("checked", false);
                                        // alert(false);
                                    }
                                    if (response.data.sc.IsActiveFinance == 1) {
                                        $('#activeFinance').prop("checked", true);
                                    }
                                    else {
                                        $('#activeFinance').prop("checked", false);
                                        // alert(false);
                                    }


                                }
                                else {
                                    //clean status
                                }
                            }

                        },//success

                    });//$.ajax
                    cleanAllChangeDays();
                    showChangeDayHistory(userId, true);
                    showChangeDayHistory(userId, false);

                }



            });

            $("#closeModalAssigment").click(() => {
                let id = $("#idTask").val();
                if ($("#storesTask").val() == "" && $("#titleTask").val() == "" && $("#dayTask").val() == "" && $("#startTask").val() == "" && $("#endTask").val() == "" && $('#typeTaskSelector').val()=="") {
                    $('#addTaskModal').modal('hide');
                    return;
                }
                if (id == "") {
                    $("#SaveTask").click();
                }
                else {
                    $("#EditTask").click()
                }
            });

            $("#ReseatTask").click(() => {
                if ("@IsEmployee" == "True")
                {
                    Swal.fire({
                        title: 'Are you sure you want to discard changes?',
                        showCancelButton: true,
                        confirmButtonText: 'Keep editing',
                        confirmButtonColor: '#009688',
                        cancelButtonText: 'Discard changes',
                        cancelButtonColor: '#ff0000',
                    }).then((result) => {
                        /* Read more about isConfirmed, isDenied below */
                        if (!result.value) {
                            $("#commentTask").val("");
                            $("#addTaskModal").modal('hide');
                        }
                        else {
                        }
                    })

                }
                else {
                    if ($("#idTask").val() != "") {
                        Swal.fire({
                            title: 'Are you sure you want to discard changes?',
                            showCancelButton: true,
                            confirmButtonText: 'Keep editing',
                            confirmButtonColor: '#009688',
                            cancelButtonText: 'Discard changes',
                            cancelButtonColor: '#ff0000',
                        }).then((result) => {
                            /* Read more about isConfirmed, isDenied below */
                            if (!result.value) {
                                $("#feedTask").val("");
                                $("#addTaskModal").modal('hide');
                            }
                            else {
                            }
                        });
                    }
                    else {
                        Swal.fire({
                            title: 'Are you sure you want to discard changes?',
                            showCancelButton: true,
                            confirmButtonText: 'Keep editing',
                            confirmButtonColor: '#009688',
                            cancelButtonText: 'Discard changes',
                            cancelButtonColor: '#ff0000',
                        }).then((result) => {
                            /* Read more about isConfirmed, isDenied below */
                            if (!result.value) {
                                $("#titleTask").val("");
                                $("#dayTask").val("");
                                $("#startTask").val("");
                                $("#endTask").val("");
                                $("#descTask").val("");
                                $("#commentTask").val("");
                                $("#feedTask").val("");
                                $("#idTask").val("");
                                $("#storesTask").val("");
                                $("#dateTask").val("");
                                $("#typeTaskSelector").val("");
                                $("#datesingletask").addClass("hidden-lp");
                                $("#addTaskModal").modal('hide');


                            }
                            else {



                            }
                        })
                    }

                }




            });
            /**
             * This function Save a New Task to Employee selected if:
             *  1. Validates if you select a employee
             *  2. Validates if you fill all the fields
             *  3. Validate if exists another task in the same interval time and day of week
             *      If step for is true (exist another task) shows a popup
             *  4. Tries to add and save to database the task
             *  If step 4 is success show a popup and update the schedule
             */
            $("#SaveTask").click(()=> {
                if (unjobbledays.find(item => item == $("#dayTask").val()) && $("#typeTaskSelector").val()==0) {

                    Swal("You don't can assign a  periodic task on a non-business day", "", "info");
                    return;

                }
                if (validateEmployee()) {


                    if (validateFields($("#startTask").val(), $("#endTask").val(), $("#titleTask").val(), $("#dayTask").val(), $("#descTask").val(), $("#storesTask").val())) {
                        let areTasks = compareTime(tasks, $("#dayTask").val(), $("#startTask").val(), $("#endTask").val());
                        if (!areTasks) {


                            let title= $("#titleTask").val();
                            let day= $("#dayTask").val();
                            let initTime= $("#startTask").val();
                            let endTime= $("#endTask").val();
                            let desc = $("#descTask").val();
                            let userId = $("#employees").val();
                            let store = $("#storesTask").val();
                            let taskType = $('#typeTaskSelector').val()=="1" ? 1 : 0;
                            let DateSingleTask = $("#dateTask").val();
                            $.ajax({
                                type: 'GET',
                                url: "/AjaxEmployeeSchedule/addTask?title=" + title + "&day=" + day + "&initTime=" + initTime + "&endTime=" + endTime + "&desc=" + desc + "&userId=" + userId + "&store=" + store+ "&taskType=" + taskType + "&DateSingleTask=" + DateSingleTask  + "&initDate=" + initDate + "&endDate=" + endDate ,
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                success: function (response) {

                                    if (response.success == true) {
                                        $('#addTaskModal').modal('hide');
                                        swal("Task was added");
                                        let changes = response.tasksDynamicChanges;

                                        cleanAllTask(tasks);
                                        tasks = [];
                                        if (changes.length > 0) {
                                            for (let i = 0; i < changes.length; i++) {
                                                tasks = response.tasks.filter(item => item.Day !== changes[i].DayChanged);
                                            }
                                        }
                                        else { tasks = response.tasks; }

                                        asignTask(tasks);
                                        showAndUnshow(false, null, true);
                                    }

                                },//success

                            })//$.ajax



                        }
                        else {

                            swal("Exists a Task with the same interval time");
                        }
                    }

                }
            });
            /** 4525232632
             * This function  Edit a Task to Employee selected if:
             *  1. Validates if you select a employee
             *  2. Validates if you fill all the fields
             *  3. Validate if exists another task in the same interval time and day of week
             *      If step for is true is the same task
             *  3. Validate if exists another task in the same interval time and different day of week
             *      If step for is true (exist another task) shows a popup
             *  4. Tries to Edit and save to database the task
             *  If step 4 is success show a popup and update the schedule
             */
            $("#EditTask").click(function ()
            {

                if ("@IsEmployee" == "True")
                {
                    if ($("#commentTask").val() != "") {
                        editTask();
                         $("#commentTask").removeClass("validate-error-field-lp");

                    }
                    else {
                        $("#commentTask").addClass("validate-error-field-lp");
                        swal("Missing Required Fields");
                    }
                }
                else {
                    editTask();
                }


            });
            /**
             * Delete a specific task of a employee selected
             */
            $("#DeleteTask").click(function () {
                if (validateEmployee()) {
                    let id = $("#idTask").val();
                    let userId = $("#employees").val();
                    $.ajax({
                        type: 'GET',
                        url: "/AjaxEmployeeSchedule/deleteTask?idTask=" + id + "&userId=" + userId + "&initDate=" + initDate + "&endDate=" + endDate ,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {

                            if (response.success)
                            {
                                let changes = response.tasksDynamicChanges;

                                cleanAllTask(tasks);
                                tasks = [];
                                if (changes.length > 0) {
                                    for (let i = 0; i < changes.length; i++) {
                                        tasks = response.tasks.filter(item => item.Day !== changes[i].DayChanged);
                                    }
                                }
                                else { tasks = response.tasks; }
                                asignTask(tasks);
                                showAndUnshow(false, null, true);
                                swal("Task was deleted", "");

                            }

                        },//success

                    });
                }

            });

            /**
             * Show a modal to edit or delete only if the current employee has a Administrator Role
             */
            $('.context-menu-one').click(function () {
                 article = $(this); //$(this) is what you clicked!
                if (!article.find('div').is(':empty')) {
                    fillTaskToEditorDelete(article.find('div').find("p").attr("id"));
                }
            });
            if (window.matchMedia('(max-width: 1500px)').matches) {

                $("#showSUN, #showMON, #showTUE, #showWED, #showTHU, #showFRI, #showSAT").show();
                $("#activitiesMON,#activitiesTUE,#activitiesWED,#activitiesTHU,#activitiesFRI,#activitiesSAT,#activitiesSUN").hide();
            } else {
                $("#showSUN, #showMON, #showTUE, #showWED, #showTHU, #showFRI, #showSAT").hide();
                $("#activitiesMON,#activitiesTUE,#activitiesWED,#activitiesTHU,#activitiesFRI,#activitiesSAT,#activitiesSUN").show();
            }

            $("#showSUN").click(() => {

                if ($("#activitiesSUN").is(":visible")) {
                    $("#activitiesSUN").hide();
                }
                else {
                    $("#activitiesSUN").show();
                }
            });
            $("#showMON").click(() => {

                if ($("#activitiesMON").is(":visible")) {
                    $("#activitiesMON").hide();
                }
                else {
                    $("#activitiesMON").show();
                }
            });
            $("#showTUE").click(() => {

                if ($("#activitiesTUE").is(":visible")) {
                    $("#activitiesTUE").hide();
                }
                else {
                    $("#activitiesTUE").show();
                }
            });
            $("#showWED").click(() => {

                if ($("#activitiesWED").is(":visible")) {
                    $("#activitiesWED").hide();
                }
                else {
                    $("#activitiesWED").show();
                }
            });
            $("#showTHU").click(() => {

                if ($("#activitiesTHU").is(":visible")) {
                    $("#activitiesTHU").hide();
                }
                else {
                    $("#activitiesTHU").show();
                }
            });
            $("#showFRI").click(() => {

                if ($("#activitiesFRI").is(":visible")) {
                    $("#activitiesFRI").hide();
                }
                else {
                    $("#activitiesFRI").show();
                }
            });
            $("#showSAT").click(() => {

                if ($("#activitiesSAT").is(":visible")) {
                    $("#activitiesSAT").hide();
                }
                else {
                    $("#activitiesSAT").show();
                }
            });
            $('#typeTaskSelector').change(() => {
                let selected = $('#typeTaskSelector').val();
                if (selected == 0) {
                    $("#datesingletask").addClass("hidden-lp");
                }
                else { $("#datesingletask").removeClass("hidden-lp"); }
            });


            /**
             * Fill the modal to edit or delete a specific task
             * @@param id is the id of the selectes task
             *
             */
            function fillTaskToEditorDelete(id) {
                let task = tasks.find(item => { return item.Id == id; });
                showAndUnshow(true, task, false);
                $('#addTaskModal').modal('show');

            }

            let totalSchedule = 0;
            let totalDone = 0;
            let totalUndone = 0;
            let completeScheduleDay = [0, 0, 0, 0, 0, 0, 0];
            let uncompleteScheduleDay = [0, 0, 0, 0, 0, 0, 0];
            let completedDay = [];
            let uncompletedDay = [];
            let unjobbledays = ["MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"];
            let currentDateByDay = [];

            let chartSchedule;
            loadSheduleData(completedDay, uncompletedDay);
            /**
             * @@param day value with the day to change
             *
             **/
            function exchangeDay(day) {

                $("#ChangeDay").modal("show");
                $("#idRequest").val("");
                $("#Daytochange").val(day);
                let date = new Date();
                $("#dateChange").val(`${ (date.getMonth() + 1) < 9 ? "0" + (date.getMonth() + 1) : (date.getMonth() + 1)}/${date.getDate() < 9 ? "0" + date.getDate() : date.getDate()}/${date.getFullYear()}`).removeClass("disabled-lp bg-disable-lp");
                $("#reasonchange").val("").removeClass("disabled-lp bg-disable-lp");
                $(".fecha").removeClass("disabled-lp");
                $("#containercommentschange").addClass("hidden-lp");
                $("#containerstatuschangeday").addClass("hidden-lp");

            }

            /**
             * Assigns all the task of employee selected in the schedule
             * @@param tasks
             */

            function asignTask(tasks)
            {

                let done = 0;
                let done50 = 0;
                let undone = 0;
                let pending = 0;
                tasks.forEach(task => {
                    if (task.Done == 0 && task.Done50 == 0 && task.Pending==0) {
                        undone++;
                    }
                    else if (task.Done == 1) {
                        done++;
                    }
                    else if (task.Done50 == 1) {
                        done50++;
                    }
                    else if (task.Pending == 1) {
                        pending++;
                    }

                    switch (task.Day) {
                        case "MON":
                            WeekDay("MON", "MONButton", task.Day, task.Done, task.Done50, task.Pending, task.TaskType);
                            break;
                       case "TUE":
                            WeekDay("TUE", "TUEButton", task.Day, task.Done, task.Done50, task.Pending, task.TaskType);
                            break;
                       case "WED":
                            WeekDay("WED", "WEDButton", task.Day, task.Done, task.Done50, task.Pending, task.TaskType);
                            break;
                       case "THU":
                            WeekDay("THU", "THUButton", task.Day, task.Done, task.Done50, task.Pending, task.TaskType);
                            break;
                       case "FRI":
                            WeekDay("FRI", "FRIButton", task.Day, task.Done, task.Done50, task.Pending, task.TaskType);
                            break;
                       case "SAT":
                            WeekDay("SAT", "SATButton", task.Day, task.Done, task.Done50, task.Pending, task.TaskType);
                            break;
                        case "SUN":
                            WeekDay("SUN", "SUNButton", task.Day, task.Done, task.Done50, task.Pending, task.TaskType);
                            break;

                    }
                    let i = task.InitTime;
                   /* for (; i <= task.EndTime; i++)
                    {*/
                        $("#" + task.Day + i).parent(".card-lp").removeClass("bg-grey-lp ");
                        $("#" + task.Day + i).empty();


                        if (isCurrentTask(task.InitTime, task.EndTime, task.Day))
                        {

                            $("#" + task.Day + i).parent().addClass("intermitente-lp");
                            $("#" + task.Day + i).append('<p class="centerxy-lp mb-lp-0" id="' + task.Id + '">' + task.Title.toUpperCase() + ' ' + '(' + abbrevStore(task.StoreId) + ')' + '</p><p>' + dictHour[task.InitTime] + ' to ' + dictHourLast[task.EndTime] + '</p><span class=" centerxy-lp tooltiptext" >' + task.Description + '</span>');

                        }
                        else
                        {
                            if (task.Done == 0 && task.Done50 == 0 && task.Pending == 0) {
                                $("#" + task.Day + i).append('<span class="bg-danger-lp w-lp-10 status-mark"></span><p class="centerxy-lp mb-lp-0" id="' + task.Id + '">' + task.Title.toUpperCase() + ' ' + '(' + abbrevStore(task.StoreId) + ')' + '</p><p>' + dictHour[task.InitTime] + ' to ' + dictHourLast[task.EndTime] + '</p><span class=" centerxy-lp tooltiptext" >' + task.Description + '</span>');
                            }
                            else if (task.Done == 1) {
                                $("#" + task.Day + i).append('<span class="bg-success-lp w-lp-10 status-mark"></span><p class="centerxy-lp mb-lp-0" id="' + task.Id + '">' + task.Title.toUpperCase() + ' ' + '(' + abbrevStore(task.StoreId) + ')' + '</p><p>' + dictHour[task.InitTime] + ' to ' + dictHourLast[task.EndTime] + '</p><span class=" centerxy-lp tooltiptext" >' + task.Description + '</span>');
                            }
                            else if (task.Done50 == 1) {
                                $("#" + task.Day + i).append('<span class="bg-secondary-lp w-lp-10 status-mark"></span><p class="centerxy-lp mb-lp-0" id="' + task.Id + '">' + task.Title.toUpperCase() + ' ' + '(' + abbrevStore(task.StoreId) + ')' + '</p><p>' + dictHour[task.InitTime] + ' to ' + dictHourLast[task.EndTime] + '</p><span class=" centerxy-lp tooltiptext" >' + task.Description + '</span>');
                            }
                            
                            else if (task.Pending == 1) {
                                $("#" + task.Day + i).append('<span class="bg-primary-lp w-lp-10 status-mark"></span><p class="centerxy-lp mb-lp-0" id="' + task.Id + '">' + task.Title.toUpperCase() + ' ' + '(' + abbrevStore(task.StoreId) + ')' + '</p><p>' + dictHour[task.InitTime] + ' to ' + dictHourLast[task.EndTime] + '</p><span class=" centerxy-lp tooltiptext" >' + task.Description + '</span>');

                            }
                        }


                    //}
                    if (task.TaskType == false || task.TaskType == null) {
                        for (let i = 1; i <= 21; i++) {
                            let items = $("#" + task.Day + i).children().length;
                            (items == 0) ? $("#" + task.Day + i).parent(".card-lp").addClass("hidden-lp") : $("#" + task.Day + i).parent(".card-lp").removeClass("hidden-lp");
                        }

                    }
                    else if (task.TaskType)
                    {
                        for (let i = 1; i <= 21; i++) {
                            let items = $("#" + task.Day + i).children().length;
                            (items == 0) ? $("#" + task.Day + i).parent(".card-lp").addClass("hidden-lp") : $("#" + task.Day + i).parent(".card-lp").removeClass("hidden-lp");
                        }
                    }
                });
                let isEmptyDay = 0;
                let columnsLenght = 7;
                for (let j = 0; j < unjobbledays.length; j++) {
                    for (let i = 1; i <= 21; i++) {
                        let items = $("#" + unjobbledays[j] + i).children().length;
                        if (items != 0) {
                            isEmptyDay = 0;
                            break;
                        }
                        isEmptyDay++;
                    }

                    if (isEmptyDay == 21) {
                        for (let i = 1; i <= 21; i++) {
                            $("#" + unjobbledays[j] + i).parent(".card-lp").removeClass("hidden-lp")
                        }
                        $("#" + unjobbledays[j]+"Container").addClass("hidden-lp");
                        $("#scheduleContainer").removeClass("col-lp-" + columnsLenght).addClass("col-lp-" + (--columnsLenght));
                    }
                    isEmptyDay = 0;
                }
                $("#undone-week,#undone-week-simple").text("Uncomplete: " + undone);
                $("#done-week,#done-week-simple").text("Complete: " + done);
                $("#done50-week,#done50-week-simple").text("Underperforming activities: " + done50);
                //$("#done100-week,#done100-week-simple").text("Done with more of a penalty: " + done100);
                $("#pending-week,#pending-week-simple").text("Pending Review: " + pending);
                $("#progress-week").attr("value", done + done50);
                $("#progress-rank-week").text((done + done50) + "/" + tasks.length);
                $("#progress-rank-week-simple").text((done + done50) + "/" + tasks.length);
                $("#progress-week").attr("max", tasks.length);
                totalDone = done + done50;
                totalUndone = undone;
                totalSchedule = (totalDone * 100) / (totalDone + totalUndone);
                $("#totalCompletedSchedule").text(totalDone);
                $("#totalUncompletedSchedule").text(totalUndone);
                if (totalSchedule.toFixed(0) === "NaN") {
                    $("#totalAdvanceSchedule").text("0%");
                }
                else {
                    $("#totalAdvanceSchedule").text(totalSchedule.toFixed(0) + "%");
                }



                    // alert(UserId);

                completedDay = completeScheduleDay;
                uncompletedDay = uncompleteScheduleDay;
                const labelsSchedule = [
                    'Monday',
                    'Tuesday',
                    'Wednesday',
                    'Thursday',
                    "Friday",
                    "Saturday",
                    "Sunday"
                ];
                addDataChart(chartSchedule, labelsSchedule, uncompletedDay, completedDay, true);


            }

            /**
             * This function delete all tasks showed in the schedule
             * @@param tasks all task of the week from the last employee selected
             */

            function cleanAllTask(tasks)
            {
                completeScheduleDay = [0, 0, 0, 0, 0, 0, 0];
                unjobbledays = ["MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"];

                for (let j = 0; j < unjobbledays.length; j++) {
                    for (let i = 1; i <= 21; i++) {
                        $("#" + unjobbledays[j] + i).parent(".card-lp").removeClass("hidden-lp");
                    }
                    $("#" + unjobbledays[j] + "Container").removeClass("hidden-lp");
                    $("#scheduleContainer").removeClass("col-lp").removeClass("col-lp-2").removeClass("col-lp-3").removeClass("col-lp-4").removeClass("col-lp-5").removeClass("col-lp-6").addClass("col-lp-7");
                }

                currentDateByDay = [];
                assingDates();
                removeDataChart(chartSchedule, true);
                uncompleteScheduleDay = [0, 0, 0, 0, 0, 0, 0];
                $("#totalCompletedSchedule").text("0");
                $("#totalUncompletedSchedule").text("0");
                $("#totalAdvanceSchedule").text("0%");
                $("#progress-rank-week").text("0/0");
                $("#progress-week").attr("max", 0);
                $("#undone-week").text("");
                $("#done-week").text("");
                $("#done50-week").text("");
                $("#done100-week").text("");
                $("#pending-week").text("");
                tasks.forEach(task => {
                    for (let i = task.InitTime; i <= task.EndTime; i++) {
                        $("#" + task.Day + i).parent(".card-lp").addClass("bg-grey-lp");
                        $("#" + task.Day + i).empty();
                        $("#" + task.Day + i).parent().removeClass("intermitente-lp");
                     }
                });


            }


            /**
             * this function assing the current month and day to the weekday
             * */
            function assingDates() {
                $('#MON').empty().append("Monday \t");
                $('#TUE').empty().append("Tuesday \t");
                $('#WED').empty().append("Wednesday \t");
                $('#THU').empty().append("Thursday \t");
                $('#FRI').empty().append("Friday \t");
                $('#SAT').empty().append("Saturday \t");
                $('#SUN').empty().append("Sunday \t");
                //Current Week

                //  Get the first day of the current week (Sunday)
                const firstDay = new Date(today.setDate(today.getDate() - today.getDay()));
                //  Get the last day of the current week (Saturday)
               // const lastDay = new Date(today.setDate(today.getDate() - today.getDay() + 6));

                const shortName = firstDay.toLocaleString('en-US', { month: 'short' });

                $("#SUN").prepend("(" + shortName + "/" + (firstDay.getDate()) + ")\t");
                currentDateByDay.push($("#SUN").text());
                let indexIdWeeks = {
                    1: "MON",
                    2: "TUE",
                    3: "WED",
                    4: "THU",
                    5: "FRI",
                    6: "SAT",
                    7: "SUN"
                };
                let ms = firstDay.getTime() + 86400000;
                let tomorrow = new Date(ms);
                for (let i = 0; i < 6; i++) {

                    let shortName = tomorrow.toLocaleString('en-US', { month: 'short' });
                    $(`#${indexIdWeeks[i + 1]}`).prepend("(" + shortName + "/" + (tomorrow.getDate()) + ")\t");
                    currentDateByDay.push($(`#${indexIdWeeks[i + 1]}`).text());
                    ms = tomorrow.getTime() + 86400000;
                    tomorrow = new Date(ms);


                }
            }

            /**
             * this function assing the task to current day
             * @@param idDay
             * @@param idButton
             * @@param Day
             * @@param taskDone
             * @@param taskDone50
             * @@param taskPending
             */
            function WeekDay(idDay, idButton, Day, taskDone, taskDone50, taskPending, taskType) {
               // console.log({ unjobbledays, taskType });
                if (taskType == false || taskType == null) {
                    let index = unjobbledays.indexOf(Day);
                    if (index !== -1) {
                        unjobbledays.splice(index, 1);

                        $(`#${idDay}`).append('<button id="' + idButton + '" class="button-lp button-lp--secondary button-lp--mn"><i class="fas fa-exchange-alt"></i></button>')
                        $(`#${idButton}`).click(() => {
                            $("#ReseatChange").removeClass("hidden-lp");
                            exchangeDay($(`#${idDay}`).text());
                        });

                    }

                }

                if (taskDone == 1 || taskDone50 == 1) {
                    completeScheduleDay[0] += 1;
                }
                else if (taskDone == 0 && taskDone50 == 0 && taskPending == 0) {
                    uncompleteScheduleDay[0] += 1;
                }
            }




            /**
             * This function fill the select input with the current employees
             * @@param employees is the list of all employees obtained of DB
             *
             */
            function fillEmployees(employees) {

                $("#employees").empty();
                $("#employees").append('<option value="">Select a Employee</option>')
                for (let i = 0; i < employees.length; i++)
                {
                    $("#employees").append('<option value="' + employees[i].UserId + '">'+employees[i].Name+' '+employees[i].LastName+'</option>')
                }
            }
            /**
             * This function fill the select input with the current stores
             * @@param stores is the list of all stores obtained of DB
             *
             */
            function fillStores(stores) {

                $("#storesTask").empty();
                $("#storesTask").append('<option value="">Store</option>')
                for (let i = 0; i < stores.length; i++) {
                    $("#storesTask").append('<option value="' + stores[i].Id + '">' + stores[i].StoreName +'</option>')
                }
            }
            function abbrevStore(id) {
                let store = stores.find(item => {
                    return item.Id == id;
                });
                return store.StoreName.substring(0, 3).trim().toUpperCase();
            }




            /**
             * This function fill all the input of the modal both save, edit and delete
             * @@param isShowing will be true only if you is to edit or delete @@param task, also it show or hide the button save, edit or delete
             * @@param task is the task selected to edit or delete
             * @@param isHideModal hide modal if it is true automatically
             */
            function showAndUnshow(isShowing, task, isHideModal) {

                $("#titleTask").val(isShowing ? task.Title : "");
                $("#dayTask").val(isShowing ? task.Day : "");
                $("#startTask").val(isShowing ? task.InitTime : "");
                $("#endTask").val(isShowing ? task.EndTime : "");
                $("#descTask").val(isShowing ? task.Description : "");
                $("#commentTask").val(isShowing ? task.Comment : "");
                $("#feedTask").val(isShowing ? task.Feedback : "");
                $("#idTask").val(isShowing ? task.Id : "");
                $("#storesTask").val(isShowing ? task.StoreId : "");




                if (isShowing)
                {
                    if ("@IsEmployee" == "True") {
                        $("#titleModalTask").text("Assignment Details");
                        $("#EditTask").val("Send comment to validating task to complete").addClass("w-lp-100 center-lp");
                        $("#DeleteTask").addClass("hidden-lp");


                        $("#EditTask").removeClass("w-lp-50");
                        $("#storesTask,#titleTask,#dayTask,#startTask,#endTask,#descTask,#feedTask").addClass("disabled-lp bg-disable");
                        $("#statusTask,#typeTask").addClass("hidden-lp");
                        if (task.TaskType == null || task.TaskType == 0) {

                            $('#typeTaskSelector').val("0").change();
                            $("#datesingletask").addClass("hidden-lp");
                        }
                        else {
                            $('#typeTaskSelector').val("1").change();

                            let date = new Date(parseInt(task.DateSingleTask.substring(6, task.DateSingleTask.length - 2)));

                            $("#dateTask").val(`${date.getMonth() < 10 ? "0" : ""}${(date.getMonth() + 1)}/${date.getDate() < 10 ? "0" : ""}${date.getDate()}/${date.getFullYear()}`);

                        }

                    }
                    else {

                        $("#typeTask").removeClass("hidden-lp");
                        if (task.TaskType == null || task.TaskType == 0) {

                            $('#typeTaskSelector').val("0").change();
                            $("#datesingletask").addClass("hidden-lp");
                        }
                        else {
                            $('#typeTaskSelector').val("1").change();

                            let date = new Date(parseInt(task.DateSingleTask.substring(6, task.DateSingleTask.length-2)));
                            $("#datesingletask").removeClass("hidden-lp").click();
                            $("#dateTask").val(`${date.getMonth() < 10 ? "0" : ""}${(date.getMonth() + 1)}/${date.getDate() < 10 ? "0" : ""}${date.getDate()}/${date.getFullYear()}`);

                        }
                        $("#titleModalTask").text(isShowing ? "Assignment" : "Assignment");
                        $("#DeleteTask").removeClass("hidden-lp");

                        $("#storesTask,#titleTask,#dayTask,#startTask,#endTask,#descTask,#feedTask").removeClass("disabled-lp bg-disable");
                        $("#statusTask,#typeTask").removeClass("hidden-lp");
                        //console.log(task.Pending, task.Done50, task.Done100, task.Done);


                    }
                    if (task.Pending == true) {//pending
                        $('input[name="statustask"]').filter('[value="2"]').prop('checked', true);
                    }
                    else if (task.Done50 == true) {//done 50
                        $('input[name="statustask"]').filter('[value="3"]').prop('checked', true);
                    }
                    else if (task.Done100 == true) {//done 100
                        $('input[name="statustask"]').filter('[value="4"]').prop('checked', true);
                    }
                    else if (task.Done == true) {//done
                        $('input[name="statustask"]').filter('[value="5"]').prop('checked', true);
                    }
                    else {//undo
                        $('input[name="statustask"]').filter('[value="1"]').prop('checked', true);
                    }


                }
                else {
                    $("#dateTask").val("");
                    $("#statusTask").addClass("hidden-lp");
                    $("#DeleteTask").addClass("hidden-lp");
                    $("#ReseatTask").removeClass("hidden-lp");
                    $("#typeTask").removeClass("hidden-lp");
                    $("#dateTaskinput,#dateTask").removeClass("disabled-lp bg-disable-lp");
                    $('#typeTaskSelector').val("");
                }


                if (isHideModal)
                    $('#addTaskModal').modal('hide');
            }

            /**
             * This function select all the task of a employee selected into a specific @@day
             * @@param tasks all task of the selected employee od the week
             * @@param day specific day to select all the task in it.
             */
            function getTaskByDay(tasks, day) {
                let taskByDay = [];
                tasks.find(item => {

                    if (item.Day == day) {
                        taskByDay.push(item);
                    }
                });
                return taskByDay;
            }
            /**
             * Return true if exist at least a task into a set of task of a specific day between a init hour and end hour
             * @@param tasksByDay set of task of a specific day
             * @@param hour init hour
             * @@param hourlast end hour
             *
             */
            function getTaskByHour(tasksByDay,hour,hourlast)
            {


                    let areTasks = tasksByDay.find(item => {

                        //exist a task where initTime is equal to initTime to new Task
                        if (item.InitTime == hour) {
                            return true;
                        }
                        //exist a task where New Task's initTime is bewteen the time of a task
                        else if (hour > item.InitTime && hour < item.EndTime) {
                            return true
                        }
                        //exist a task where endTime is equal to initTime to new Task
                        else if (item.EndTime == hour) {
                            return true;
                        }
                        //exists a task where initTime is into new task's interval of time.
                        else if (hour < item.InitTime && hourlast > item.InitTime) {
                            return true;
                        }
                        //exists a task where endTime is equal to hourlast of new task
                        else if (hourlast == item.EndTime) {
                            return true;
                        }
                   });


                return areTasks === undefined ? false : true;



            }
            /**
             * Return true  if exist a task into a set of specific task of a day between a interval time
             * This function is a funsion of functions
             * @@see getTaskByDay function and @@see  getTaskByHour function
             * @@param tasks list of all weekly tasks of a selected employee
             * @@param day is a day of the week to filter @@param task
             * @@param hour is init hour
             * @@param hourlast is end hour
             */
            function compareTime(tasks, day, hour, hourlast) {
                return getTaskByHour(getTaskByDay(tasks, day), hour, hourlast);
            }

            /**
             * This function return a set of task of a day and evaluates if exists some task between the same interval of a interval of a task edited otherwise return undefined
             * @@param tasksByDay set of task filter of the weekly tasks filtering  by a specific day @@see getTaskByDay function
             * @@param hour  init hour of a task edited
             * @@param hourlast end hour of a task edited
             * NOTES: THIS FUNCTION MUST JUST BE CALLED IT WHEN YOU EDIT A TASK
             */
            function isTheSameIntervalTask(tasksByDay, hour, hourlast) {
                let areTasks = tasksByDay.find(item => {
                    //exist a task where initTime is equal to initTime to new Task
                    if (item.InitTime == hour && item.EndTime == hourlast) {
                        return true;
                    }
                });
                return areTasks;
            }

            /**
             * This function return true if all fills of edited or added task is not empty or null otherwise return false
             * @@param hour field
             * @@param hourLast field
             * @@param title field
             * @@param day field
             * @@param desc field
             */
            function validateFields(hour,hourLast,title, day, desc,store)
            {

                if (store == "" || desc == "" || day == "" || title == "" || hour == "" || hourLast == "" || $('#typeTaskSelector').val()=="")
                {
                    swal("Missing required fields", "", "info");
                    return false;
                }

                if (parseInt(hour) > parseInt(hourLast)) {

                    swal("Start time can not be greater than End time", "", "info");
                    return false;
                }
                if ($('#typeTaskSelector').val()=="1" && $("#dateTask").val() == "") {
                    swal("Assign a date for single task", "", "info");
                    return false;
                }
                else {
                    let date = $("#dateTask").val().split("/");
                    let datetime = new Date(parseInt(date[2]), (parseInt(date[0]) - 1), parseInt(date[1]));
                    if (dayOfWeek[day] != datetime.getDay()) {
                        $("#dayTask").val(dayOfWeekInv[datetime.getDay()]).click();
                    }
                }
                return true;

            }

            /**
             * This function validates if you select a employee of the list if you add, edit or delete a task
             * */
            function validateEmployee() {
                if ($("#employees").val() != "") {
                    return true;
                }
                else {
                    clearPerformance();
                    swal("Select employee", "", "info");
                    $('#addTaskModal').modal('hide');
                    $("#titlePage").text(" SCHEDULE");
                    cleanAllTask(tasks);
                    return false;
                }
            }

            /**
             * This function return a specific way of titlepage it you log in with a Role of employee This is, when yor User Id is into employee list
             * */
            function isEmployee() {
                //you are admon
                let isEmployee = "@IsEmployee";
                if (isEmployee === "True")
                {

                    $("#titlePage").text("SCHEDULE")
                    $.ajax({
                        type: 'GET',
                        url: "/AjaxEmployeeSchedule/showTasks?userId=" + CurrentUser + "&initDate=" + initDate + "&endDate=" + endDate,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (response) {

                            if (response.success == true) {

                                if (response.tasks != null)
                                {
                                    if (response.tasks.length > 0)
                                    {
                                        let changes = response.tasksDynamicChanges;
                                        cleanAllTask(tasks);
                                        tasks = [];
                                        if (changes.length > 0) {
                                            for (let i = 0; i < changes.length; i++) {
                                                tasks = response.tasks.filter(item => item.Day !== changes[i].DayChanged);
                                            }
                                        }
                                        else { tasks = response.tasks; }
                                            tasks = response.tasks;
                                            asignTask(tasks);


                                    }
                                    else {
                                        cleanAllTask(tasks);
                                        tasks = [];
                                        swal("No tasks has been assigned to " + employee.Name.trim() + " yet!", "", "info");
                                    }
                                    getPerformanceData(CurrentUser);//LoadPerformance
                                    loadAdvances(response.totalBDMonth, response.totalBDYear);

                                }


                            }
                        },
                    });
                    cleanAllChangeDays();
                    showChangeDayHistory(CurrentUser, true);
                    showChangeDayHistory(CurrentUser, false);



                }
                PendingRequest();

            }
            /**
             * This function check if a task in the day is te current task or not
             * @@param hour init time of task to check
             * @@param hourlast end time of task to check
             * @@param day day of the task to check
             */
            function isCurrentTask(hour, hourlast, day) {

                let dt = new Date();


                let taskDay = dayOfWeek[day];
                let currentDay = dt.getDay();
                let startTime = dictHour[hour];
                let endTime = dictHourLast[hourlast];
                let curr_time = getval();
                if (taskDay == currentDay)
                {
                    if (get24Hr(curr_time) > get24Hr(startTime) && get24Hr(curr_time) < get24Hr(endTime)) {
                        //in between these two times
                        return true;
                    } else {
                        return false;
                    }

                }
                else {
                    return false;
                }

            }
            /**
             * This function convert both hour and minutes of current date to 12format
             * */
            function getval() {
                var currentTime = new Date()
                var hours = currentTime.getHours()
                var minutes = currentTime.getMinutes()

                if (minutes < 10) minutes = "0" + minutes;

                var suffix = "AM";
                if (hours >= 12) {
                    suffix = "PM";
                    hours = hours - 12;
                }
                if (hours == 0) {
                    hours = 12;
                }
                var current_time = hours + ":" + minutes + " " + suffix;

                return current_time;
            }

            /**
             * This function convert time to 12format to 24 format
             * @@param time value of time in format 12hs
             */
            function get24Hr(time) {
                var hours = Number(time.match(/^(\d+)/)[1]);
                var AMPM = time.match(/\s(.*)$/)[1];
                if (AMPM == "PM" && hours < 12) hours = hours + 12;
                if (AMPM == "AM" && hours == 12) hours = hours - 12;

                var minutes = Number(time.match(/:(\d+)/)[1]);
                hours = hours * 100 + minutes;

                return hours;
            }


            /**
             * This interval time listen the current time to verify if the system need to change the current time or not
             */
            setInterval( ()=> {
                var today2 = new Date();
                var time = "";
                var hora = today2.getHours();
                var min = today2.getMinutes();
                var turno = "a.m.";
                if (hora >= 12) {
                    turno = "p.m."
                }
                if (hora >= 13) {
                    hora = hora - 12;
                }
                if (hora < 9) {
                    time = "0"
                }
                if (min > 9) {
                    time = time + hora + ":" + min + " " + turno;
                }
                else {
                    time = time + hora + ":0" + min + " " + turno;
                }

                if ($("#employees").val() != "")
                {
                    cleanAllTask(tasks);
                    asignTask(tasks);

                }
            }, 60000);
            /**
             * Return the current status of the task
             * */
            function currentStatus() {
                if ("@IsEmployee" == "True")
                {
                    let statusSelected = $('input[name="statustask"]:checked').val();
                    if (statusSelected == 1) {
                        return [0, 0, 0, 1];// done, done50, done100, pending
                    }
                    else if (statusSelected == 3) {//done 50
                        return [0, 1, 0, 0];// done, done50, done100, pending
                    }
                    else if (statusSelected == 4) {//done 100
                        return [0, 0, 1, 0];// done, done50, done100, pending
                    }
                    else if (statusSelected == 5) {//done
                        return [1, 0, 0, 0];// done, done50, done100, pending
                    }

                }
                else {
                    let statusSelected = $('input[name="statustask"]:checked').val();
                    if (statusSelected == 2) {//pending
                        return [0, 0, 0, 1];// done, done50, done100, pending
                    }
                    else if (statusSelected == 3) {//done 50
                        return [0, 1, 0, 0];// done, done50, done100, pending
                    }
                    else if (statusSelected == 4) {//done 100
                        return [0, 0, 1, 0];// done, done50, done100, pending
                    }
                    else if (statusSelected == 5) {//done
                        return [1, 0, 0, 0];// done, done50, done100, pending
                    }
                    else {//undo
                        return [0, 0, 0, 0];// done, done50, done100, pending
                    }

                }
            }
            function editTask() {
                if (validateEmployee())
                {
                /*this day is unjobable and task is periodic*/
                    let id = $("#idTask").val();
                    let title = $("#titleTask").val();
                    let day = $("#dayTask").val();

                    if (unjobbledays.find(item => item == day) && $("#typeTaskSelector").val()=="0")
                    {

                        Swal("You don't can assign a  periodic task on a non-business day", "", "info");
                        return;
                    }

                    if (validateFields($("#startTask").val(), $("#endTask").val(), $("#titleTask").val(), $("#dayTask").val(), $("#descTask").val(), $("#storesTask").val())) {
                        let areTasks = compareTime(tasks, $("#dayTask").val(), $("#startTask").val(), $("#endTask").val());
                        let isSameTaskPlace = isTheSameIntervalTask(getTaskByDay(tasks, $("#dayTask").val()), $("#startTask").val(), $("#endTask").val());
                        let initTime = $("#startTask").val();
                        let endTime = $("#endTask").val();
                        let desc = $("#descTask").val();
                        let userId = $("#employees").val();
                        userId = userId == undefined ? CurrentUser : userId;
                        let feed = $("#feedTask").val();
                        let comment = $("#commentTask").val();
                        let store = $("#storesTask").val();
                        let done = 0;
                        let done50 = 0;
                        let pending = 0;
                        let done100 = 0;
                        let taskType = $('#typeTaskSelector').val()=="1" ? 1 : 0;
                        let DateSingleTask = $("#dateTask").val();
                        [done, done50, done100, pending] = currentStatus();
                        if (isSameTaskPlace !== undefined)//it's the same interval time in the same day
                        {


                            $.ajax({
                                type: 'GET',
                                url: "/AjaxEmployeeSchedule/editTask?idTask=" + id + "&title=" + title + "&day=" + day + "&initTime=" + initTime + "&endTime=" + endTime + "&desc=" + desc + "&userId=" + userId +
                                    "&done=" + done + "&done50=" + done50 + "&done100=" + done100 + "&pending=" + pending + "&comment=" + comment + "&feedback=" + feed + "&store=" + store + "&taskType=" + taskType + "&DateSingleTask=" + DateSingleTask + "&initDate=" + initDate + "&endDate=" + endDate,
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                success: function (response) {

                                    if (response.success == true) {
                                        $('#addTaskModal').modal('hide');
                                        if (response.tasks != null) {
                                            if (response.tasks.length > 0) {
                                                let changes = response.tasksDynamicChanges;
                                                cleanAllTask(tasks);
                                                tasks = [];
                                                if (changes.length > 0) {
                                                    for (let i = 0; i < changes.length; i++) {
                                                        tasks = response.tasks.filter(item => item.Day !== changes[i].DayChanged);
                                                    }
                                                }
                                                else { tasks = response.tasks; }
                                                asignTask(tasks);
                                                showAndUnshow(false, null, true);
                                            }
                                        }
                                    }

                                },//success

                            })//$.ajax
                        }
                        else if (!areTasks)//it's the same interval time in the same day
                        {

                            $.ajax({
                                type: 'GET',
                                url: "/AjaxEmployeeSchedule/editTask?idTask=" + id + "&title=" + title + "&day=" + day + "&initTime=" + initTime + "&endTime=" + endTime + "&desc=" + desc + "&userId=" + userId +
                                    "&done=" + done + "&done50=" + done50 + "&done100=" + done100 + "&pending=" + pending + "&comment=" + comment + "&feedback=" + feed + "&store=" + store + "&taskType=" + taskType + "&DateSingleTask=" + DateSingleTask +  "&initDate=" + initDate + "&endDate=" + endDate,
                                contentType: "application/json; charset=utf-8",
                                dataType: "json",
                                success: function (response) {

                                    if (response.success == true) {
                                        $('#addTaskModal').modal('hide');
                                        if (response.tasks != null) {
                                            if (response.tasks.length > 0) {


                                                let changes = response.tasksDynamicChanges;
                                                cleanAllTask(tasks);
                                                tasks = [];
                                                if (changes.length > 0) {
                                                    for (let i = 0; i < changes.length; i++) {
                                                        tasks = response.tasks.filter(item => item.Day !== changes[i].DayChanged);
                                                    }
                                                }
                                                else { tasks = response.tasks; }

                                                asignTask(tasks);

                                                showAndUnshow(false, null, true);

                                            }
                                        }
                                    }

                                },//success

                            })//$.ajax
                        }
                        else {

                            Swal("Another task has been assigned for this period.", "", "info");
                        }


                    }

                }
            }
            /**
             * Check if is time to Reset the schedule or reset if now is Sunday and Reset value in table EmployeeResetEmployee is TRUE
             */
            function resetSchedule(UserId) {

                let today = new Date()//new Date("2023", "00", "21");
                today = today.getDay();
                let isSunday = today  == 0 ? 1 : 0;//today.getDay()
                let isSaturday = today == 6 ? 1 : 0;
                $.ajax({
                    type: 'GET',
                    url: "/AjaxEmployeeSchedule/resetSchedule?userId=" + UserId + "&isSunday=" + isSunday + "&isSaturday=" + isSaturday+"&initDate=" + initDate + "&endDate=" + endDate,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {

                        if (response.success == true)
                        {

                            if (response.tasks != null)
                            {
                                if (response.tasks.length > 0) {

                                    let changes = response.tasksDynamicChanges;
                                    cleanAllTask(tasks);
                                    tasks = [];
                                    if (changes.length > 0) {
                                        for (let i = 0; i < changes.length; i++) {
                                            tasks = response.tasks.filter(item => item.Day !== changes[i].DayChanged);
                                        }
                                    }
                                    else { tasks = response.tasks; }

                                    asignTask(tasks);

                                    showAndUnshow(false, null, true);
                                }

                            }
                            if (response.wasReset) {
                                swal("All your tasks has been reset", "info");
                            }


                        }

                    },//success

                });

            }

            /***********************************************************************************************/
            /********************************   Graphs Code             *******************************/
            /***********************************************************************************************/
            let completed = [];
            let uncompleted = [];
            let completedMonth = [];
            let uncompletedMonth = [];
            let annualActions = [];
            let chartYear, chartMonth, chartToday;
            const labelsYear = [
                'January',
                'February',
                'March',
                'April',
                'May',
                'June',
                'July',
                'August',
                'September',
                'October',
                'November',
                'December'
            ];



            getPerformanceData(("@IsEmployee" == "True") ? CurrentUser : "");
            function getPerformanceData(UserId) {
                //;
                //ajax
                clearPerformance();
                if (UserId == "")
                {
                    //alert("vacio");
                    completed = [];
                    uncompleted = [];
                    completedDay = [];
                    uncompletedDay = [];
                    completedMonth = [];
                    uncompletedMonth = [];
                    annualActions = [];

                    loadTodayData(completed, uncompleted);
                    loadMonthData(completedMonth, uncompletedMonth);
                    loadYearData(annualActions);

                    removeDataChart(chartToday, true);
                    removeDataChart(chartMonth, true);
                    removeDataChart(chartYear, false);
                    removeDataChart(chartSchedule, true);

                }
                else {
                   // alert(UserId);
                    let num = Math.floor(Math.random() * 100);
                    //alert(num);
                    removeDataChart(chartToday,true);
                    removeDataChart(chartMonth,true);
                    removeDataChart(chartYear, false);
                    removeDataChart(chartSchedule, true);

                    completed = [5, num, 7,  12];
                    uncompleted = [0, 10, num, 20, 10, num, 20];

                    completedDay = completeScheduleDay;
                    uncompletedDay = uncompleteScheduleDay;
                    completedMonth = [0, 10, 5, 2, 20];
                    uncompletedMonth = [5, num, 7, 0, 12];
                    annualActions = [0, 10, 5, 2, 20, num, 45, 51, 40, 0, 20, 10, 5];
                    const labelsToday = [
                        'DMV',
                        'Accounting',
                        'Open Ticket',
                        'Adding Cars',
                    ];
                    const labelsMonth = [
                        'DMV',
                        'Accounting',
                        'Open Ticket',
                        'Adding Cars',
                    ];
                    const labelsSchedule = [
                        'Monday',
                        'Tuesday',
                        'Wednesday',
                        'Thursday',
                        "Friday",
                        "Saturday",
                        "Sunday"
                    ];
                    addDataChart(chartToday, labelsToday, completed, uncompleted,true);
                    addDataChart(chartMonth, labelsMonth, completedMonth, uncompletedMonth, true);
                    addDataChart(chartSchedule, labelsSchedule, uncompletedDay , completedDay, true);
                    addDataChart(chartYear, null, annualActions,null,false);
                    loadPerformance();
                }


            }


            /**
             * Loading graphs of schedule about daily activities
             * @@param completedDay contains all the task completed
             * @@param uncompletedDay contains all the task uncompleted
             */
            function loadSheduleData(completedDay, uncompletedDay) {
                const labelsSchedule = [
                    'Monday',
                    'Tuesday',
                    'Wednesday',
                    'Thursday',
                    "Friday",
                    "Saturday",
                    "Sunday"
                ];
                const dataSchedule = {
                    labels: labelsSchedule,
                    datasets: [
                        {
                            label: 'Uncompleted',
                            backgroundColor: "rgb(255,0, 0)",
                            borderColor: 'rgb(255, 99, 132)',
                            data: uncompletedDay,
                        },
                        {
                            label: 'Completed',
                            backgroundColor: "#009688",
                            borderColor: 'rgb(255, 99, 132)',
                            data: completedDay,
                        },

                    ]
                };
                const configSchedule = {
                    type: 'bar',
                    data: dataSchedule,
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'bottom',
                            },
                            title: {
                                display: false,
                                text: 'Today Completed'
                            }
                        }
                    },
                };
                chartSchedule = new Chart(
                    document.getElementById('ScheduleReport'),
                    configSchedule
                );
            }
            /**
             * Loading graphs of Today activities
             * @@param completed contains all the task completed
             * @@param uncompleted contains all the task uncompleted
             */
            function loadTodayData(completed,uncompleted) {
                const labelsToday = [
                    'DMV',
                    'Accounting',
                    'Open Ticket',
                    'Adding Cars',
                ];
                const dataToday = {
                    labels: labelsToday,
                    datasets: [
                        {
                            label: 'Uncompleted',
                            backgroundColor: "rgb(255,0, 0)",
                            borderColor: 'rgb(255, 99, 132)',
                            data: uncompleted,
                        },
                        {
                            label: 'Completed',
                            backgroundColor: "#009688",
                            borderColor: 'rgb(255, 99, 132)',
                            data: completed,
                        },

                    ]
                };
                const configToday = {
                    type: 'bar',
                    data: dataToday,
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'bottom',
                            },
                            title: {
                                display: false,
                                text: 'Today Completed'
                            }
                        }
                    },
                };
                chartToday = new Chart(
                    document.getElementById('TodayReport'),
                    configToday
                );
            }
            /**
             * Loading graphs of Month activities
             * @@param completedMonth contains all the task completed
             * @@param uncompletedMonth contains all the task uncompleted
             */
            function loadMonthData(completedMonth, uncompletedMonth) {
                const labelsMonth = [
                    'DMV',
                    'Accounting',
                    'Open Ticket',
                    'Adding Cars',
                ];
                const dataMonth = {
                    labels: labelsMonth,
                    datasets: [
                        {
                            label: 'Uncompleted',
                            backgroundColor: "rgb(255,0, 0)",
                            borderColor: 'rgb(255, 99, 132)',
                            data: uncompletedMonth,
                        },
                        {
                            label: 'Completed',
                            backgroundColor: "#009688",
                            borderColor: 'rgb(255, 99, 132)',
                            data: completedMonth,
                        },

                    ]
                };
                const configMonth = {
                    type: 'bar',
                    data: dataMonth,
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                display: true,
                                position: 'bottom',
                            },
                            title: {
                                display: false,
                                text: 'Today Undone'
                            }
                        }
                    },
                };
                chartMonth = new Chart(
                    document.getElementById('MonthReport'),
                    configMonth
                );
            }
            /**
             * Loading graphs of Year activities
             * @@param completedMonth contains all the task completed
             * @@param uncompletedMonth contains all the task uncompleted
             */
            function loadYearData(annualActions) {
                const dataYear = {
                    labels: labelsYear,
                    datasets: [{

                        backgroundColor: "#ffd800",
                        borderColor: 'rgb(255, 99, 132)',
                        data: annualActions,
                    }]
                };
                const configYear = {
                    type: 'bar',
                    data: dataYear,
                    options: {
                        indexAxis: 'x',
                        responsive: true,
                        plugins: {
                            legend: {
                                display: false,
                                position: 'top',
                            },
                            title: {
                                display: false,
                                text: 'Actions by Month'
                            }
                        }
                    },
                };
                chartYear = new Chart(
                    document.getElementById('YearReport'),
                    configYear
                );
            }

            function loadPerformance() {

                let bestMonth = Math.max(...annualActions);
                let arrIndex = [];
                annualActions.filter((element, index) => {
                    if (element == bestMonth) {
                        arrIndex.push(index);
                    }
                });
                bestMonth = arrIndex;
                arrIndex = [];

                let worstMonth = Math.min(...annualActions);
                annualActions.filter((element, index) => {
                    if (element == worstMonth) {
                        arrIndex.push(index);
                    }
                });
                worstMonth = arrIndex;
                const initialValue = 0;
                let totalCompleted = completed.reduce((previousValue, currentValue) => previousValue + currentValue,
                    initialValue
                );
                let totalUncompleted = uncompleted.reduce((previousValue, currentValue) => previousValue + currentValue,
                    initialValue
                );
                let totalCompletedMonth = completedMonth.reduce((previousValue, currentValue) => previousValue + currentValue,
                    initialValue
                );
                let totalUncompletedMonth = uncompletedMonth.reduce((previousValue, currentValue) => previousValue + currentValue,
                    initialValue
                );



                $("#totalCompleted").text(totalCompleted);
                $("#totalUncompleted").text(totalUncompleted);
                $("#totalAdvance").text(((totalCompleted * 100) / (totalCompleted + totalUncompleted)).toFixed(0) + "%");

                $("#totalCompletedMonth").text(totalCompletedMonth);
                $("#totalUncompletedMonth").text(totalUncompletedMonth);
                $("#totalAdvanceMonth").text(((totalCompletedMonth * 100) / (totalCompletedMonth + totalUncompletedMonth)).toFixed(0) + "%");

                $("#bestMonth").empty();
                bestMonth.forEach(element => {
                    $("#bestMonth").append("<p>" + labelsYear[element] + " : " + annualActions[element] + " actions</p>");
                });
                $("#worstMonth").empty();
                worstMonth.forEach(element => {
                    $("#worstMonth").append("<p>" + labelsYear[element] + " : " + annualActions[element] + " actions</p>");
                });





            }
            function clearPerformance() {



                $("#totalCompleted").text("0");
                $("#totalUncompleted").text("0");
                $("#totalAdvance").text("0%");

                $("#totalCompletedMonth").text("0");
                $("#totalUncompletedMonth").text("0");
                $("#totalAdvanceMonth").text("0%");

                $("#bestMonth").empty();

                $("#worstMonth").empty();
            }
            /**
             * Loading graphs of Update graphs
             * @@param chart graphic to update
             * @@param labels about the topic
             * @@param data is an array with completed tasks
             * @@param data1 is an array with uncompleted tasks
             * @@param isTodayOrMonthOrSchedule is a boolean that specify if is the chart of Today, Month or Schedule
             */
            function addDataChart(chart, labels, data, data1, isTodayOrMonthOrSchedule)
            {
                if (isTodayOrMonthOrSchedule) {
                    chart.data.labels = labels;
                    chart.data.datasets[0].data = data;
                    chart.data.datasets[1].data = data1;
                    chart.update();
                }
                else {
                    chart.data.datasets[0].data = data;
                    chart.update();
                }

            }
            /**
             *
             * Remove all bars into the graph
             * @@param chart ist the graph to update
             * @@param isTodayOrMonthOrSchedule  is a boolean that specify if is the chart of Today, Month or Schedule
             */
            function removeDataChart(chart,isTodayOrMonthOrSchedule)
            {

                if (isTodayOrMonthOrSchedule) {
                    chart.data.labels = [];
                    chart.data.datasets[0].data = [];
                    chart.data.datasets[1].data = [];
                }
                else {
                    chart.data.datasets[0].data = [];
                }
                chart.update();
            }
            /**
             * Load Performance's activities of month and year
             * @@param totalBDMonth contains info of Business Development about the month
             * @@param totalBDYear contains info of Business Development about the year
             */
            function loadAdvances(totalBDMonth, totalBDYear) {
                $("#taskMonth").empty();
                $("#taskMonth").append("<p>Business Development Created: </p>");
                $("#quantityMonth").empty();
                $("#quantityMonth").append("<p>" + totalBDMonth + "</p>");
                completedMonth = [];
                uncompletedMonth = [];
                removeDataChart(chartMonth, true);
                completedMonth = [totalBDMonth, 0, 0, 0, 0];
                uncompletedMonth = [0, 0, 0, 0, 0];
                const labelsMonth = [
                    'Business Dev. Center',
                    'Accounting',
                    'Open Ticket',
                    'Adding Cars',
                ];
                addDataChart(chartMonth, labelsMonth, uncompletedMonth, completedMonth, true);


                $("#taskYear").empty();
                $("#taskYear").append("<p>Business Development Created: </p>");
                $("#quantityYear").empty();
                $("#quantityYear").append("<p>" + totalBDYear + "</p>");


            }
            /**
             * Show the record of all change day requests
             * @@param userId the identifier of the user selected to show record
             * @@param isEmployee this value indicate the Endpoint to consult
             */
            function showChangeDayHistory(userId,isEmployee)
            {
                $.ajax({
                    type: 'GET',
                    url: isEmployee ? "/AjaxChangeDay/ReadEmployeeRequests?userId=" + userId : "/AjaxChangeDay/ReadAdmonRequests?userId=" + userId,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {

                        if (response.success) {

                            if (response.employeeResults != null) {
                                response.employeeResults.forEach(item => {
                                    let status = {
                                        2: ["Decline", "bg-danger-lp", "tc-white-lp"],
                                        1: ["Aproved", "bg-success-lp", "tc-white-lp"],
                                        0: ["Pending", "bg-primary-lp", , "tc-black-lp"]
                                    }
                                    if (item.Rol == 1)
                                    {
                                        $("#historyChangeDay").empty().append(
                                            `<div class="card-lp grid-lp col-lp-10 m-lp-1 ${status[item.Status][1]} ${status[item.Status][2]}">
                                            <div class="span-lp-9">
                                                <div class="card-lp__title">Request Change ${item.ChangedDay} by ${item.ChangeBy} \t (Status:${status[item.Status][0]}) </div>
                                                <div class="card-lp__body">
                                                    ${item.Reason}
                                                </div>
                                            </div>
                                            <div class="span-lp">
                                                <button id="detailsButton" class="button-lp button-lp--sm button-lp--secondary">Details</button>
                                            </div>
                                        </div>`
                                        );
                                    }
                                    if (item.Rol == 0) {
                                        $("#historyChangeDayAdmon").empty().append(
                                            `<div class="card-lp grid-lp col-lp-10 m-lp-1 ${status[item.Status][1]} ${status[item.Status][2]}">
                                            <div class="span-lp-9">
                                                <div class="card-lp__title">Request Change  ${item.ChangedDay} by ${item.ChangeBy} \t (Status:${status[item.Status][0]}) </div>
                                                <div class="card-lp__body">
                                                    ${item.Reason}
                                                </div>
                                            </div>
                                            <div class="span-lp">
                                                <button id="detailsButton" class="button-lp button-lp--sm button-lp--secondary">Details</button>
                                            </div>
                                        </div>`
                                        );
                                    }

                                    $("#detailsButton").click(() => {
                                        $("#DaytochangeDetails").val(item.ChangedDay);
                                        $("#DayChangedDetails").val(item.ChangeBy);
                                        let date = new Date(parseInt(item.Date.substring(6, item.Date.length - 2)));

                                        $("#dateChangeDetails").val(`${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`);
                                        $("#reasonchangeDetails").val(item.Reason);
                                        $("#commentschangeDetails").val(item.Comment);
                                        $("#ChangeDayDetails").modal('show');
                                    });


                                });
                                if ($("#historyChangeDayAdmon").children().length == 0) {
                                    $("#historyChangeDayAdmon").empty().append(
                                        `<div class="card-lp grid-lp col-lp-10 m-lp-1 ">
                                            <div class="span-lp-9">
                                               <div class="card-lp__title">
                                                    No Requests yet
                                                </div>
                                            </div>
                                            <div class="span-lp">
                                            </div>
                                        </div>`
                                    );
                                }
                            }
                            else {
                                $("#historyChangeDay").empty().append(
                                    `<div class="card-lp grid-lp col-lp-10 m-lp-1 ">
                                            <div class="span-lp-9">
                                               <div class="card-lp__title">
                                                    No Requests yet
                                                </div>
                                            </div>
                                            <div class="span-lp">
                                            </div>
                                        </div>`
                                );
                            }
                        }
                    },

                });

            }
            /**
             * clear all  record's info sheet
             * */
            function cleanAllChangeDays() {

                $("#historyChangeDay").empty().append(
                    `<div class="card-lp grid-lp col-lp-10 m-lp-1 ">
                                            <div class="span-lp-9">
                                               <div class="card-lp__title">
                                                    Select a Employee
                                                </div>
                                            </div>
                                            <div class="span-lp">
                                            </div>
                                        </div>`
                );
            }
           /**
            * Show all pending requests to confirm or reject by admon and Employee
            * */
            function PendingRequest() {


                $.ajax({
                    type: 'GET',
                    url:"/AjaxChangeDay/ReadRequests?isEmployee="+("@IsEmployee" == "True"),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (response) {

                        if (response.success) {

                            if (response.requests != null) {

                                if (response.requests.length > 0) {
                                    $("#pending-number").text(response.requests.length);
                                    $("#requestchangedaysList").empty();
                                    response.requests.forEach(item => {

                                        $("#requestchangedaysList").append(
                                            `<div class="card-lp grid-lp col-lp-10 m-lp-1">
                                            <div class="span-lp-9">
                                                <div class="card-lp__title">Request by ${("@IsEmployee" == "True")?"Lupita's Group":item.UserName} Change ${item.ChangedDay} to ${item.ChangeBy} </div>
                                                <div class="card-lp__body">
                                                    ${item.Reason}
                                                </div>
                                            </div>
                                            <div class="span-lp">
                                                <button id="editButton" class="button-lp button-lp--sm button-lp--primary tc-black-lp">Edit</button>
                                            </div>
                                        </div>`
                                        );
                                        $("#editButton").click(() => {
                                            $("#idRequest").val(item.Id);
                                           // console.log(item.ChangedDay, item.ChangedDay.length );
                                            $("#Daytochange").val(item.ChangedDay + "to\t" + item.ChangeBy);
                                            //$("#DayChangedDetails").val();
                                            let date = new Date(parseInt(item.Date.substring(6, item.Date.length - 2)));
                                            $("#dateChange").val(`${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()}`).addClass("disabled-lp bg-disable-lp");
                                            $("#reasonchange").val(item.Reason).addClass("disabled-lp bg-disable-lp");
                                            $(".fecha").addClass("disabled-lp");
                                            //$("#commentschange").val(item.Comment);
                                            $("#containerstatuschangeday").removeClass("hidden-lp");
                                            $("#containercommentschange").removeClass("hidden-lp");
                                            $("#ReseatChange").addClass("hidden-lp");

                                            $("#ChangeDay").modal('show');
                                        });

                                    });
                                }
                                else {
                                    $("#pending-number").text(0);
                                    $("#requestchangedaysList").empty().append(
                                        `<div class="card-lp grid-lp col-lp-10 m-lp-1 ">
                                            <div class="span-lp-9">
                                               <div class="card-lp__title">
                                                    No Pending Requests
                                                </div>
                                            </div>
                                            <div class="span-lp">
                                            </div>
                                        </div>`
                                    ); }
                            }
                            else {

                            }
                        }
                    },

                });
            }




    });

    </script>


}

